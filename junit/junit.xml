<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="8" name="pytest" skips="0" tests="188" time="23.717"><testcase classname="parsyfiles.tests.combining_parsers_converters.test_default_instance" file="parsyfiles/tests/combining_parsers_converters/test_default_instance.py" line="50" name="test_copy" time="0.030442237854003906"></testcase><testcase classname="parsyfiles.tests.combining_parsers_converters.test_default_instance" file="parsyfiles/tests/combining_parsers_converters/test_default_instance.py" line="55" name="test_deep_copy" time="0.034401893615722656"></testcase><testcase classname="parsyfiles.tests.combining_parsers_converters.test_default_instance" file="parsyfiles/tests/combining_parsers_converters/test_default_instance.py" line="60" name="test_get_all_parsers" time="0.08144044876098633"><failure message="AssertionError: assert [&apos;$&lt;read_conf...bject&gt;$&apos;, ...] == [&apos;$&lt;read_confi...bject&gt;$&apos;, ...]
  At index 21 diff: &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; != &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos;
  Full diff:
  [&apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos;,
  &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos;,
  &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;,
  &apos;$&lt;read_dataframe_from_xls&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;,
  &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos;,
  &apos;$&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos;,
  &apos;$&lt;read_dict_or_list_from_json&gt; =&gt; &lt;dict_to_object&gt;$&apos;,
  &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos;,
  &apos;&lt;read_object_from_pickle&gt;&apos;,
  &apos;Multifile Object parser (parsyfiles defaults)&apos;,
  &apos;&lt;read_object_from_yaml&gt;&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &apos;
  &apos;&lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$&apos;,
  -  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
  -  &apos;&lt;bool_to_int&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
  &apos;&lt;float_to_int&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
  -  &apos;&lt;bool_to_float&gt;$&apos;,
  ?            ^^^^
  +  &apos;&lt;bool_to_int&gt;$&apos;,
  ?            ^^
  +  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
  +  &apos;&lt;str_to_float&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
  &apos;&lt;int_to_float&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
  -  &apos;&lt;str_to_float&gt;$&apos;,
  ?    ^^^
  +  &apos;&lt;bool_to_float&gt;$&apos;,
  ?    ^^^^
  +  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
  +  &apos;&lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
  &apos;&lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
  -  &apos;&lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
  &apos;&lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
  &apos;&lt;list_to_set&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
  &apos;&lt;list_to_tuple&gt;$&apos;,
  &apos;$&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_df&gt; -&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;dict_to_df&gt; -&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &lt;dict_to_df&gt;$&apos;,
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt;$&apos;,
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;dict_to_df&gt; -&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;dict_to_df&gt; -&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_dict_or_list_from_json&gt; =&gt; &lt;dict_to_df&gt; -&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_df&gt; -&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_dict_or_list_from_json&gt; =&gt; &lt;list_to_set&gt;$&apos;,
  &apos;$&lt;read_dict_or_list_from_json&gt; =&gt; &lt;list_to_tuple&gt;$&apos;,
  &apos;$&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_df&gt;$&apos;,
  -  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos;,
  +  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos;,
  +  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos;,
  +  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos;,
  -  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos;,
  -  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos;,
  ?                                         ^ ---
  +  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                         ^^^
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos;,
  +  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos;,
  -  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;list_to_set&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;list_to_tuple&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;config_to_dict_of_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;single_row_or_col_df_to_series&gt;$&apos;,
  -  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;bool_to_int&gt;$&apos;,
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;float_to_int&gt;$&apos;,
  +  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;bool_to_int&gt;$&apos;,
  +  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;str_to_float&gt;$&apos;,
  +  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;bool_to_float&gt;$&apos;,
  -  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;int_to_float&gt;$&apos;,
  -  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;str_to_float&gt;$&apos;,
  ?                                                             ^ ---
  +  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                                             ^^^
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;int_to_bool&gt;$&apos;,
  -  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;int_to_string&gt;$&apos;,
  +  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;bool_to_string&gt;$&apos;,
  -  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;list_to_set&gt;$&apos;,
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;list_to_tuple&gt;$&apos;,
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;config_to_dict_of_dict&gt;$&apos;,
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;dict_to_df&gt;$&apos;,
  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  -  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;bool_to_int&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_int&gt;$&apos;,
  +  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;bool_to_int&gt;$&apos;,
  +  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_float&gt;$&apos;,
  +  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;bool_to_float&gt;$&apos;,
  -  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_float&gt;$&apos;,
  -  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_float&gt;$&apos;,
  ?                                       ^ ---
  +  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                       ^^^
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_string&gt;$&apos;,
  +  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;bool_to_string&gt;$&apos;,
  -  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;list_to_set&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;list_to_tuple&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;config_to_dict_of_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;read_dict_or_list_from_json&gt; =&gt; &lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt;$&apos;,
  &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
  &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_collection_from_yaml&gt; =&gt; &lt;list_to_set&gt;$&apos;,
  &apos;$&lt;read_collection_from_yaml&gt; =&gt; &lt;list_to_tuple&gt;$&apos;,
  &apos;$&lt;read_dataframe_from_xls&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt;$&apos;,
  &apos;$&lt;read_dataframe_from_xls&gt; =&gt; &lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt;$&apos;,
  &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;&lt;read_str_from_txt&gt;&apos;,
  &apos;&lt;read_dict_or_list_from_json&gt;&apos;,
  &apos;Multifile Collection parser (parsyfiles defaults)&apos;,
  &apos;&lt;read_config&gt;&apos;,
  &apos;&lt;read_dict_from_properties&gt;&apos;,
  &apos;&lt;read_collection_from_yaml&gt;&apos;,
  &apos;&lt;read_dataframe_from_xls&gt;&apos;,
  &apos;&lt;read_df_or_series_from_csv&gt;&apos;]">root_parser = parsyfiles defaults

    def test_get_all_parsers(root_parser: RootParser):
        &quot;&quot;&quot; Tests that the default parsers are there and that their number is correct &quot;&quot;&quot;
    
        parsers = root_parser.get_all_parsers(strict_type_matching=False)
        print(&apos;\n&apos; + str(len(parsers)) + &apos; Root parser parsers:&apos;)
        pprint(parsers)
        assert len(parsers) == 127
    
        parsers_str = to_str_coll(parsers)
        # dump(parsers_str, &apos;reference_parsers.json&apos;)
&gt;       assert parsers_str == load(&apos;reference_parsers.json&apos;)
E       AssertionError: assert [&apos;$&lt;read_conf...bject&gt;$&apos;, ...] == [&apos;$&lt;read_confi...bject&gt;$&apos;, ...]
E         At index 21 diff: &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; != &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos;
E         Full diff:
E         [&apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos;,
E         &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos;,
E         &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;,
E         &apos;$&lt;read_dataframe_from_xls&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;,
E         &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos;,
E         &apos;$&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos;,
E         &apos;$&lt;read_dict_or_list_from_json&gt; =&gt; &lt;dict_to_object&gt;$&apos;,
E         &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos;,
E         &apos;&lt;read_object_from_pickle&gt;&apos;,
E         &apos;Multifile Object parser (parsyfiles defaults)&apos;,
E         &apos;&lt;read_object_from_yaml&gt;&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &apos;
E         &apos;&lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$&apos;,
E         -  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
E         -  &apos;&lt;bool_to_int&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
E         &apos;&lt;float_to_int&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
E         -  &apos;&lt;bool_to_float&gt;$&apos;,
E         ?            ^^^^
E         +  &apos;&lt;bool_to_int&gt;$&apos;,
E         ?            ^^
E         +  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
E         +  &apos;&lt;str_to_float&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
E         &apos;&lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
E         -  &apos;&lt;str_to_float&gt;$&apos;,
E         ?    ^^^
E         +  &apos;&lt;bool_to_float&gt;$&apos;,
E         ?    ^^^^
E         +  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
E         +  &apos;&lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
E         &apos;&lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
E         -  &apos;&lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
E         &apos;&lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
E         &apos;&lt;list_to_set&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &apos;
E         &apos;&lt;list_to_tuple&gt;$&apos;,
E         &apos;$&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_df&gt; -&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;dict_to_df&gt; -&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &lt;dict_to_df&gt;$&apos;,
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt;$&apos;,
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;dict_to_df&gt; -&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;dict_to_df&gt; -&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_dict_or_list_from_json&gt; =&gt; &lt;dict_to_df&gt; -&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_df&gt; -&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_dict_or_list_from_json&gt; =&gt; &lt;list_to_set&gt;$&apos;,
E         &apos;$&lt;read_dict_or_list_from_json&gt; =&gt; &lt;list_to_tuple&gt;$&apos;,
E         &apos;$&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_df&gt;$&apos;,
E         -  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos;,
E         +  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos;,
E         +  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos;,
E         +  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos;,
E         -  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos;,
E         -  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                         ^ ---
E         +  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                         ^^^
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos;,
E         +  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos;,
E         -  &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;list_to_set&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;list_to_tuple&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;config_to_dict_of_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;single_row_or_col_df_to_series&gt;$&apos;,
E         -  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;bool_to_int&gt;$&apos;,
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;float_to_int&gt;$&apos;,
E         +  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;bool_to_int&gt;$&apos;,
E         +  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;str_to_float&gt;$&apos;,
E         +  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;bool_to_float&gt;$&apos;,
E         -  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;int_to_float&gt;$&apos;,
E         -  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                                             ^ ---
E         +  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                                             ^^^
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;int_to_bool&gt;$&apos;,
E         -  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;int_to_string&gt;$&apos;,
E         +  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;bool_to_string&gt;$&apos;,
E         -  &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;list_to_set&gt;$&apos;,
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;list_to_tuple&gt;$&apos;,
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;config_to_dict_of_dict&gt;$&apos;,
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &lt;dict_to_df&gt;$&apos;,
E         &apos;$Multifile Object parser (parsyfiles defaults) =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         -  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;bool_to_int&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_int&gt;$&apos;,
E         +  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;bool_to_int&gt;$&apos;,
E         +  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_float&gt;$&apos;,
E         +  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;bool_to_float&gt;$&apos;,
E         -  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_float&gt;$&apos;,
E         -  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                       ^ ---
E         +  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                       ^^^
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_string&gt;$&apos;,
E         +  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;bool_to_string&gt;$&apos;,
E         -  &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;list_to_set&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;list_to_tuple&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;config_to_dict_of_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;read_dict_or_list_from_json&gt; =&gt; &lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt;$&apos;,
E         &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
E         &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_collection_from_yaml&gt; =&gt; &lt;list_to_set&gt;$&apos;,
E         &apos;$&lt;read_collection_from_yaml&gt; =&gt; &lt;list_to_tuple&gt;$&apos;,
E         &apos;$&lt;read_dataframe_from_xls&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt;$&apos;,
E         &apos;$&lt;read_dataframe_from_xls&gt; =&gt; &lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt;$&apos;,
E         &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;&lt;read_str_from_txt&gt;&apos;,
E         &apos;&lt;read_dict_or_list_from_json&gt;&apos;,
E         &apos;Multifile Collection parser (parsyfiles defaults)&apos;,
E         &apos;&lt;read_config&gt;&apos;,
E         &apos;&lt;read_dict_from_properties&gt;&apos;,
E         &apos;&lt;read_collection_from_yaml&gt;&apos;,
E         &apos;&lt;read_dataframe_from_xls&gt;&apos;,
E         &apos;&lt;read_df_or_series_from_csv&gt;&apos;]

parsyfiles/tests/combining_parsers_converters/test_default_instance.py:71: AssertionError</failure><system-out>
127 Root parser parsers:
[$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$,
 $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$,
 $&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$,
 $&lt;read_dataframe_from_xls&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$,
 $&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$,
 $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$,
 $&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$,
 $&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$,
 $&lt;read_dict_or_list_from_json&gt; =&gt; &lt;dict_to_object&gt;$,
 $&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$,
 &lt;read_object_from_pickle&gt;,
 Multifile Object parser (parsyfiles defaults),
 &lt;read_object_from_yaml&gt;,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$,
 $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$,
 $&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$,
 $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$,
 $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$,
 $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$,
 $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$,
 $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$,
 $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$,
 $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$,
 $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$,
 $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$,
 $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;list_to_set&gt;$,
 $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;list_to_tuple&gt;$,
 $&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$,
 $&lt;read_dict_or_list_from_json&gt; =&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$,
 $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt;$,
 $&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt;$,
 $&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$,
 $&lt;read_dict_or_list_from_json&gt; =&gt; &lt;list_to_set&gt;$,
 $&lt;read_dict_or_list_from_json&gt; =&gt; &lt;list_to_tuple&gt;$,
 $&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_df&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;list_to_set&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;list_to_tuple&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;config_to_dict_of_dict&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;dict_to_df&gt;$,
 $&lt;read_object_from_pickle&gt; =&gt; &lt;single_row_or_col_df_to_series&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;bool_to_int&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;str_to_int&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;float_to_int&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;bool_to_float&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;int_to_float&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;str_to_float&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;int_to_bool&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;str_to_bool&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;float_to_bool&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;int_to_string&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;bool_to_string&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;float_to_string&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;list_to_set&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;list_to_tuple&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;config_to_dict_of_dict&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;single_row_or_col_df_to_dict&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;dict_to_df&gt;$,
 $Multifile Object parser (parsyfiles defaults) =&gt; &lt;single_row_or_col_df_to_series&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;bool_to_int&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_int&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_int&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;bool_to_float&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_float&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_float&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_bool&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_bool&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_bool&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_string&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;bool_to_string&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_string&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;list_to_set&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;list_to_tuple&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;config_to_dict_of_dict&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;dict_to_df&gt;$,
 $&lt;read_object_from_yaml&gt; =&gt; &lt;single_row_or_col_df_to_series&gt;$,
 $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$,
 $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$,
 $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$,
 $&lt;read_dict_or_list_from_json&gt; =&gt; &lt;dict_to_df&gt;$,
 $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt;$,
 $&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt;$,
 $&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_df&gt;$,
 $&lt;read_collection_from_yaml&gt; =&gt; &lt;list_to_set&gt;$,
 $&lt;read_collection_from_yaml&gt; =&gt; &lt;list_to_tuple&gt;$,
 $&lt;read_dataframe_from_xls&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt;$,
 $&lt;read_dataframe_from_xls&gt; =&gt; &lt;single_row_or_col_df_to_series&gt;$,
 $&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt;$,
 $&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_series&gt;$,
 &lt;read_str_from_txt&gt;,
 &lt;read_dict_or_list_from_json&gt;,
 Multifile Collection parser (parsyfiles defaults),
 &lt;read_config&gt;,
 &lt;read_dict_from_properties&gt;,
 &lt;read_collection_from_yaml&gt;,
 &lt;read_dataframe_from_xls&gt;,
 &lt;read_df_or_series_from_csv&gt;]
</system-out></testcase><testcase classname="parsyfiles.tests.combining_parsers_converters.test_default_instance" file="parsyfiles/tests/combining_parsers_converters/test_default_instance.py" line="73" name="test_option_hints" time="0.06677746772766113"><system-out>Testing option hints for parsing chain
read_config: No declared option
config_to_dict_of_dict: No declared option
dict_to_object: No declared option

</system-out></testcase><testcase classname="parsyfiles.tests.combining_parsers_converters.test_default_instance" file="parsyfiles/tests/combining_parsers_converters/test_default_instance.py" line="81" name="test_get_all_conversion_chains" time="0.05436992645263672"><failure message="AssertionError: assert [&apos;$&lt;config_to...o_int&gt;$&apos;, ...] == [&apos;$&lt;config_to_...o_int&gt;$&apos;, ...]
  At index 3 diff: &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; != &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos;
  Full diff:
  [&apos;$&lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  -  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos;,
  +  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  +  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  +  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
  -  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  -  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  ?                                                   ^ ---
  +  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                                   ^^^
  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_string&gt;$&apos;,
  +  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
  -  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;list_to_set&gt;$&apos;,
  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;list_to_tuple&gt;$&apos;,
  -  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;float_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  +  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  ?                                      ^ ---
  +  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                      ^^^
  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;int_to_string&gt;$&apos;,
  +  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;float_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  +  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  ?                                     ^ ---
  +  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                     ^^^
  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;int_to_string&gt;$&apos;,
  +  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;float_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  +  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  ?                                      ^ ---
  +  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                      ^^^
  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;int_to_string&gt;$&apos;,
  +  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;float_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  +  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  ?                                      ^ ---
  +  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                      ^^^
  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;int_to_string&gt;$&apos;,
  +  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;float_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  +  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  ?                                      ^ ---
  +  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                      ^^^
  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;int_to_string&gt;$&apos;,
  +  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;float_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  +  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  ?                                      ^ ---
  +  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                      ^^^
  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;int_to_string&gt;$&apos;,
  +  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;float_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  +  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  ?                                       ^ ---
  +  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                       ^^^
  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;int_to_string&gt;$&apos;,
  +  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;float_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  +  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  ?                                       ^ ---
  +  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                       ^^^
  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;int_to_string&gt;$&apos;,
  +  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;float_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  +  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  ?                                       ^ ---
  +  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                       ^^^
  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;int_to_string&gt;$&apos;,
  +  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;float_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  +  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  ?                                        ^ ---
  +  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                        ^^^
  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;int_to_string&gt;$&apos;,
  +  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;float_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  +  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  ?                                        ^ ---
  +  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                        ^^^
  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;int_to_string&gt;$&apos;,
  +  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  ?                         ^^      ^^^^     ---  ^
  +  &apos;$&lt;construct_from_float64&gt; -&gt; &lt;str_to_int&gt;$&apos;,
  ?                         ^^      ^ +      ^
  &apos;$&lt;construct_from_float64&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  -  &apos;$&lt;construct_from_float64&gt; -&gt; &lt;str_to_int&gt;$&apos;,
  ?                                        ^^^
  +  &apos;$&lt;construct_from_float64&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                        ^^^^
  &apos;$&lt;construct_from_float64&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;construct_from_float64&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_float64&gt; -&gt; &lt;int_to_string&gt;$&apos;,
  &apos;$&lt;construct_from_float64&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;float_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  +  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  ?                                          ^ ---
  +  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                          ^^^
  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;int_to_string&gt;$&apos;,
  +  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;str_to_int&gt;$&apos;,
  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;float_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
  +  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  +  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;int_to_float&gt;$&apos;,
  -  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;str_to_float&gt;$&apos;,
  ?                                           ^ ---
  +  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                           ^^^
  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;int_to_string&gt;$&apos;,
  +  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
  -  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;float_to_string&gt;$&apos;,
  &apos;$&lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$&apos;,
  -  &apos;$&lt;bool_to_int&gt;$&apos;,
  &apos;$&lt;str_to_int&gt;$&apos;,
  &apos;$&lt;float_to_int&gt;$&apos;,
  +  &apos;$&lt;bool_to_int&gt;$&apos;,
  +  &apos;$&lt;str_to_float&gt;$&apos;,
  +  &apos;$&lt;int_to_float&gt;$&apos;,
  &apos;$&lt;bool_to_float&gt;$&apos;,
  -  &apos;$&lt;int_to_float&gt;$&apos;,
  -  &apos;$&lt;str_to_float&gt;$&apos;,
  ?            ^ ---
  +  &apos;$&lt;str_to_bool&gt;$&apos;,
  ?            ^^^
  &apos;$&lt;int_to_bool&gt;$&apos;,
  -  &apos;$&lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;int_to_string&gt;$&apos;,
  +  &apos;$&lt;float_to_string&gt;$&apos;,
  &apos;$&lt;bool_to_string&gt;$&apos;,
  -  &apos;$&lt;float_to_string&gt;$&apos;,
  &apos;$&lt;list_to_set&gt;$&apos;,
  &apos;$&lt;list_to_tuple&gt;$&apos;,
  &apos;$&lt;config_to_dict_of_dict&gt;$&apos;,
  &apos;$&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
  &apos;$&lt;single_row_or_col_df_to_dict&gt;$&apos;,
  &apos;$&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;single_row_or_col_df_to_series&gt;$&apos;]">root_parser = parsyfiles defaults

    def test_get_all_conversion_chains(root_parser: RootParser):
        &quot;&quot;&quot; Tests that the default conversion chains are there and that their number is correct &quot;&quot;&quot;
    
        chains = root_parser.get_all_conversion_chains()
        print(&apos;\n&apos; + str(len(chains[0])) + &apos;(generic) + &apos; + str(len(chains[2])) + &apos;(specific) Root parser converters:&apos;)
        pprint(chains)
        assert len(chains[0]) == 22
        assert len(chains[1]) == 0
        assert len(chains[2]) == 200
    
        generic_chains_str = to_str_coll(chains[0])
        specific_chains_str = to_str_coll(chains[2])
    
        # dump(generic_chains_str, &apos;reference_generic_conversion_chains.json&apos;)
        assert generic_chains_str == load(&apos;reference_generic_conversion_chains.json&apos;)
    
        # dump(specific_chains_str, &apos;reference_specific_conversion_chains.json&apos;)
&gt;       assert specific_chains_str == load(&apos;reference_specific_conversion_chains.json&apos;)
E       AssertionError: assert [&apos;$&lt;config_to...o_int&gt;$&apos;, ...] == [&apos;$&lt;config_to_...o_int&gt;$&apos;, ...]
E         At index 3 diff: &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; != &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos;
E         Full diff:
E         [&apos;$&lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         -  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos;,
E         +  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         +  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         +  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
E         -  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         -  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                                   ^ ---
E         +  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                                   ^^^
E         &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_string&gt;$&apos;,
E         +  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
E         -  &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;list_to_set&gt;$&apos;,
E         &apos;$&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;list_to_tuple&gt;$&apos;,
E         -  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;float_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         +  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                      ^ ---
E         +  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                      ^^^
E         &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;int_to_string&gt;$&apos;,
E         +  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_bool_&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_int8&gt; -&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_int8&gt; -&gt; &lt;float_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         +  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;construct_from_int8&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                     ^ ---
E         +  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                     ^^^
E         &apos;$&lt;construct_from_int8&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_int8&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_int8&gt; -&gt; &lt;int_to_string&gt;$&apos;,
E         +  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;construct_from_int8&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int8&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_int16&gt; -&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_int16&gt; -&gt; &lt;float_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         +  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;construct_from_int16&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                      ^ ---
E         +  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                      ^^^
E         &apos;$&lt;construct_from_int16&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_int16&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_int16&gt; -&gt; &lt;int_to_string&gt;$&apos;,
E         +  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;construct_from_int16&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int16&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_int32&gt; -&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_int32&gt; -&gt; &lt;float_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         +  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;construct_from_int32&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                      ^ ---
E         +  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                      ^^^
E         &apos;$&lt;construct_from_int32&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_int32&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_int32&gt; -&gt; &lt;int_to_string&gt;$&apos;,
E         +  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;construct_from_int32&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int32&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_int64&gt; -&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_int64&gt; -&gt; &lt;float_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         +  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;construct_from_int64&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                      ^ ---
E         +  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                      ^^^
E         &apos;$&lt;construct_from_int64&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_int64&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_int64&gt; -&gt; &lt;int_to_string&gt;$&apos;,
E         +  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;construct_from_int64&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_int64&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;float_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         +  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                      ^ ---
E         +  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                      ^^^
E         &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;int_to_string&gt;$&apos;,
E         +  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint8&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;float_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         +  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                       ^ ---
E         +  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                       ^^^
E         &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;int_to_string&gt;$&apos;,
E         +  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint16&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;float_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         +  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                       ^ ---
E         +  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                       ^^^
E         &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;int_to_string&gt;$&apos;,
E         +  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint32&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;float_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         +  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                       ^ ---
E         +  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                       ^^^
E         &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;int_to_string&gt;$&apos;,
E         +  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_uint64&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_float16&gt; -&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_float16&gt; -&gt; &lt;float_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         +  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;construct_from_float16&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                        ^ ---
E         +  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                        ^^^
E         &apos;$&lt;construct_from_float16&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_float16&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_float16&gt; -&gt; &lt;int_to_string&gt;$&apos;,
E         +  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;construct_from_float16&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_float16&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_float32&gt; -&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_float32&gt; -&gt; &lt;float_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         +  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;construct_from_float32&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                        ^ ---
E         +  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                        ^^^
E         &apos;$&lt;construct_from_float32&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_float32&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_float32&gt; -&gt; &lt;int_to_string&gt;$&apos;,
E         +  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;construct_from_float32&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_float32&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         ?                         ^^      ^^^^     ---  ^
E         +  &apos;$&lt;construct_from_float64&gt; -&gt; &lt;str_to_int&gt;$&apos;,
E         ?                         ^^      ^ +      ^
E         &apos;$&lt;construct_from_float64&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         -  &apos;$&lt;construct_from_float64&gt; -&gt; &lt;str_to_int&gt;$&apos;,
E         ?                                        ^^^
E         +  &apos;$&lt;construct_from_float64&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                        ^^^^
E         &apos;$&lt;construct_from_float64&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;construct_from_float64&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_float64&gt; -&gt; &lt;int_to_string&gt;$&apos;,
E         &apos;$&lt;construct_from_float64&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;float_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         +  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                          ^ ---
E         +  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                          ^^^
E         &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;int_to_string&gt;$&apos;,
E         +  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_complex64&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;float_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;bool_to_int&gt;$&apos;,
E         +  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         +  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;bool_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;int_to_float&gt;$&apos;,
E         -  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                           ^ ---
E         +  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                           ^^^
E         &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;int_to_string&gt;$&apos;,
E         +  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;bool_to_string&gt;$&apos;,
E         -  &apos;$&lt;construct_from_complex128&gt; -&gt; &lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$&apos;,
E         -  &apos;$&lt;bool_to_int&gt;$&apos;,
E         &apos;$&lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;float_to_int&gt;$&apos;,
E         +  &apos;$&lt;bool_to_int&gt;$&apos;,
E         +  &apos;$&lt;str_to_float&gt;$&apos;,
E         +  &apos;$&lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;bool_to_float&gt;$&apos;,
E         -  &apos;$&lt;int_to_float&gt;$&apos;,
E         -  &apos;$&lt;str_to_float&gt;$&apos;,
E         ?            ^ ---
E         +  &apos;$&lt;str_to_bool&gt;$&apos;,
E         ?            ^^^
E         &apos;$&lt;int_to_bool&gt;$&apos;,
E         -  &apos;$&lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;int_to_string&gt;$&apos;,
E         +  &apos;$&lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;bool_to_string&gt;$&apos;,
E         -  &apos;$&lt;float_to_string&gt;$&apos;,
E         &apos;$&lt;list_to_set&gt;$&apos;,
E         &apos;$&lt;list_to_tuple&gt;$&apos;,
E         &apos;$&lt;config_to_dict_of_dict&gt;$&apos;,
E         &apos;$&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
E         &apos;$&lt;single_row_or_col_df_to_dict&gt;$&apos;,
E         &apos;$&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;single_row_or_col_df_to_series&gt;$&apos;]

parsyfiles/tests/combining_parsers_converters/test_default_instance.py:99: AssertionError</failure><system-out>
22(generic) + 200(specific) Root parser converters:
([$&lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$,
  $&lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$,
  $&lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$,
  $&lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$,
  $&lt;constructor_with_str_arg&gt;$,
  $&lt;base64_ascii_str_pickle_to_object&gt;$,
  $&lt;dict_of_dict_to_object&gt;$,
  $&lt;dict_to_object&gt;$,
  $&lt;construct_from_bool_&gt;$,
  $&lt;construct_from_int8&gt;$,
  $&lt;construct_from_int16&gt;$,
  $&lt;construct_from_int32&gt;$,
  $&lt;construct_from_int64&gt;$,
  $&lt;construct_from_uint8&gt;$,
  $&lt;construct_from_uint16&gt;$,
  $&lt;construct_from_uint32&gt;$,
  $&lt;construct_from_uint64&gt;$,
  $&lt;construct_from_float16&gt;$,
  $&lt;construct_from_float32&gt;$,
  $&lt;construct_from_float64&gt;$,
  $&lt;construct_from_complex64&gt;$,
  $&lt;construct_from_complex128&gt;$],
 [],
 [$&lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$,
  $&lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt;$,
  $&lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$,
  $&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$,
  $&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$,
  $&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$,
  $&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$,
  $&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$,
  $&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$,
  $&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$,
  $&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$,
  $&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$,
  $&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_string&gt;$,
  $&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_string&gt;$,
  $&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_string&gt;$,
  $&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;list_to_set&gt;$,
  $&lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;list_to_tuple&gt;$,
  $&lt;construct_from_bool_&gt; -&gt; &lt;bool_to_int&gt;$,
  $&lt;construct_from_bool_&gt; -&gt; &lt;str_to_int&gt;$,
  $&lt;construct_from_bool_&gt; -&gt; &lt;float_to_int&gt;$,
  $&lt;construct_from_bool_&gt; -&gt; &lt;bool_to_float&gt;$,
  $&lt;construct_from_bool_&gt; -&gt; &lt;int_to_float&gt;$,
  $&lt;construct_from_bool_&gt; -&gt; &lt;str_to_float&gt;$,
  $&lt;construct_from_bool_&gt; -&gt; &lt;int_to_bool&gt;$,
  $&lt;construct_from_bool_&gt; -&gt; &lt;str_to_bool&gt;$,
  $&lt;construct_from_bool_&gt; -&gt; &lt;float_to_bool&gt;$,
  $&lt;construct_from_bool_&gt; -&gt; &lt;int_to_string&gt;$,
  $&lt;construct_from_bool_&gt; -&gt; &lt;bool_to_string&gt;$,
  $&lt;construct_from_bool_&gt; -&gt; &lt;float_to_string&gt;$,
  $&lt;construct_from_int8&gt; -&gt; &lt;bool_to_int&gt;$,
  $&lt;construct_from_int8&gt; -&gt; &lt;str_to_int&gt;$,
  $&lt;construct_from_int8&gt; -&gt; &lt;float_to_int&gt;$,
  $&lt;construct_from_int8&gt; -&gt; &lt;bool_to_float&gt;$,
  $&lt;construct_from_int8&gt; -&gt; &lt;int_to_float&gt;$,
  $&lt;construct_from_int8&gt; -&gt; &lt;str_to_float&gt;$,
  $&lt;construct_from_int8&gt; -&gt; &lt;int_to_bool&gt;$,
  $&lt;construct_from_int8&gt; -&gt; &lt;str_to_bool&gt;$,
  $&lt;construct_from_int8&gt; -&gt; &lt;float_to_bool&gt;$,
  $&lt;construct_from_int8&gt; -&gt; &lt;int_to_string&gt;$,
  $&lt;construct_from_int8&gt; -&gt; &lt;bool_to_string&gt;$,
  $&lt;construct_from_int8&gt; -&gt; &lt;float_to_string&gt;$,
  $&lt;construct_from_int16&gt; -&gt; &lt;bool_to_int&gt;$,
  $&lt;construct_from_int16&gt; -&gt; &lt;str_to_int&gt;$,
  $&lt;construct_from_int16&gt; -&gt; &lt;float_to_int&gt;$,
  $&lt;construct_from_int16&gt; -&gt; &lt;bool_to_float&gt;$,
  $&lt;construct_from_int16&gt; -&gt; &lt;int_to_float&gt;$,
  $&lt;construct_from_int16&gt; -&gt; &lt;str_to_float&gt;$,
  $&lt;construct_from_int16&gt; -&gt; &lt;int_to_bool&gt;$,
  $&lt;construct_from_int16&gt; -&gt; &lt;str_to_bool&gt;$,
  $&lt;construct_from_int16&gt; -&gt; &lt;float_to_bool&gt;$,
  $&lt;construct_from_int16&gt; -&gt; &lt;int_to_string&gt;$,
  $&lt;construct_from_int16&gt; -&gt; &lt;bool_to_string&gt;$,
  $&lt;construct_from_int16&gt; -&gt; &lt;float_to_string&gt;$,
  $&lt;construct_from_int32&gt; -&gt; &lt;bool_to_int&gt;$,
  $&lt;construct_from_int32&gt; -&gt; &lt;str_to_int&gt;$,
  $&lt;construct_from_int32&gt; -&gt; &lt;float_to_int&gt;$,
  $&lt;construct_from_int32&gt; -&gt; &lt;bool_to_float&gt;$,
  $&lt;construct_from_int32&gt; -&gt; &lt;int_to_float&gt;$,
  $&lt;construct_from_int32&gt; -&gt; &lt;str_to_float&gt;$,
  $&lt;construct_from_int32&gt; -&gt; &lt;int_to_bool&gt;$,
  $&lt;construct_from_int32&gt; -&gt; &lt;str_to_bool&gt;$,
  $&lt;construct_from_int32&gt; -&gt; &lt;float_to_bool&gt;$,
  $&lt;construct_from_int32&gt; -&gt; &lt;int_to_string&gt;$,
  $&lt;construct_from_int32&gt; -&gt; &lt;bool_to_string&gt;$,
  $&lt;construct_from_int32&gt; -&gt; &lt;float_to_string&gt;$,
  $&lt;construct_from_int64&gt; -&gt; &lt;bool_to_int&gt;$,
  $&lt;construct_from_int64&gt; -&gt; &lt;str_to_int&gt;$,
  $&lt;construct_from_int64&gt; -&gt; &lt;float_to_int&gt;$,
  $&lt;construct_from_int64&gt; -&gt; &lt;bool_to_float&gt;$,
  $&lt;construct_from_int64&gt; -&gt; &lt;int_to_float&gt;$,
  $&lt;construct_from_int64&gt; -&gt; &lt;str_to_float&gt;$,
  $&lt;construct_from_int64&gt; -&gt; &lt;int_to_bool&gt;$,
  $&lt;construct_from_int64&gt; -&gt; &lt;str_to_bool&gt;$,
  $&lt;construct_from_int64&gt; -&gt; &lt;float_to_bool&gt;$,
  $&lt;construct_from_int64&gt; -&gt; &lt;int_to_string&gt;$,
  $&lt;construct_from_int64&gt; -&gt; &lt;bool_to_string&gt;$,
  $&lt;construct_from_int64&gt; -&gt; &lt;float_to_string&gt;$,
  $&lt;construct_from_uint8&gt; -&gt; &lt;bool_to_int&gt;$,
  $&lt;construct_from_uint8&gt; -&gt; &lt;str_to_int&gt;$,
  $&lt;construct_from_uint8&gt; -&gt; &lt;float_to_int&gt;$,
  $&lt;construct_from_uint8&gt; -&gt; &lt;bool_to_float&gt;$,
  $&lt;construct_from_uint8&gt; -&gt; &lt;int_to_float&gt;$,
  $&lt;construct_from_uint8&gt; -&gt; &lt;str_to_float&gt;$,
  $&lt;construct_from_uint8&gt; -&gt; &lt;int_to_bool&gt;$,
  $&lt;construct_from_uint8&gt; -&gt; &lt;str_to_bool&gt;$,
  $&lt;construct_from_uint8&gt; -&gt; &lt;float_to_bool&gt;$,
  $&lt;construct_from_uint8&gt; -&gt; &lt;int_to_string&gt;$,
  $&lt;construct_from_uint8&gt; -&gt; &lt;bool_to_string&gt;$,
  $&lt;construct_from_uint8&gt; -&gt; &lt;float_to_string&gt;$,
  $&lt;construct_from_uint16&gt; -&gt; &lt;bool_to_int&gt;$,
  $&lt;construct_from_uint16&gt; -&gt; &lt;str_to_int&gt;$,
  $&lt;construct_from_uint16&gt; -&gt; &lt;float_to_int&gt;$,
  $&lt;construct_from_uint16&gt; -&gt; &lt;bool_to_float&gt;$,
  $&lt;construct_from_uint16&gt; -&gt; &lt;int_to_float&gt;$,
  $&lt;construct_from_uint16&gt; -&gt; &lt;str_to_float&gt;$,
  $&lt;construct_from_uint16&gt; -&gt; &lt;int_to_bool&gt;$,
  $&lt;construct_from_uint16&gt; -&gt; &lt;str_to_bool&gt;$,
  $&lt;construct_from_uint16&gt; -&gt; &lt;float_to_bool&gt;$,
  $&lt;construct_from_uint16&gt; -&gt; &lt;int_to_string&gt;$,
  $&lt;construct_from_uint16&gt; -&gt; &lt;bool_to_string&gt;$,
  $&lt;construct_from_uint16&gt; -&gt; &lt;float_to_string&gt;$,
  $&lt;construct_from_uint32&gt; -&gt; &lt;bool_to_int&gt;$,
  $&lt;construct_from_uint32&gt; -&gt; &lt;str_to_int&gt;$,
  $&lt;construct_from_uint32&gt; -&gt; &lt;float_to_int&gt;$,
  $&lt;construct_from_uint32&gt; -&gt; &lt;bool_to_float&gt;$,
  $&lt;construct_from_uint32&gt; -&gt; &lt;int_to_float&gt;$,
  $&lt;construct_from_uint32&gt; -&gt; &lt;str_to_float&gt;$,
  $&lt;construct_from_uint32&gt; -&gt; &lt;int_to_bool&gt;$,
  $&lt;construct_from_uint32&gt; -&gt; &lt;str_to_bool&gt;$,
  $&lt;construct_from_uint32&gt; -&gt; &lt;float_to_bool&gt;$,
  $&lt;construct_from_uint32&gt; -&gt; &lt;int_to_string&gt;$,
  $&lt;construct_from_uint32&gt; -&gt; &lt;bool_to_string&gt;$,
  $&lt;construct_from_uint32&gt; -&gt; &lt;float_to_string&gt;$,
  $&lt;construct_from_uint64&gt; -&gt; &lt;bool_to_int&gt;$,
  $&lt;construct_from_uint64&gt; -&gt; &lt;str_to_int&gt;$,
  $&lt;construct_from_uint64&gt; -&gt; &lt;float_to_int&gt;$,
  $&lt;construct_from_uint64&gt; -&gt; &lt;bool_to_float&gt;$,
  $&lt;construct_from_uint64&gt; -&gt; &lt;int_to_float&gt;$,
  $&lt;construct_from_uint64&gt; -&gt; &lt;str_to_float&gt;$,
  $&lt;construct_from_uint64&gt; -&gt; &lt;int_to_bool&gt;$,
  $&lt;construct_from_uint64&gt; -&gt; &lt;str_to_bool&gt;$,
  $&lt;construct_from_uint64&gt; -&gt; &lt;float_to_bool&gt;$,
  $&lt;construct_from_uint64&gt; -&gt; &lt;int_to_string&gt;$,
  $&lt;construct_from_uint64&gt; -&gt; &lt;bool_to_string&gt;$,
  $&lt;construct_from_uint64&gt; -&gt; &lt;float_to_string&gt;$,
  $&lt;construct_from_float16&gt; -&gt; &lt;bool_to_int&gt;$,
  $&lt;construct_from_float16&gt; -&gt; &lt;str_to_int&gt;$,
  $&lt;construct_from_float16&gt; -&gt; &lt;float_to_int&gt;$,
  $&lt;construct_from_float16&gt; -&gt; &lt;bool_to_float&gt;$,
  $&lt;construct_from_float16&gt; -&gt; &lt;int_to_float&gt;$,
  $&lt;construct_from_float16&gt; -&gt; &lt;str_to_float&gt;$,
  $&lt;construct_from_float16&gt; -&gt; &lt;int_to_bool&gt;$,
  $&lt;construct_from_float16&gt; -&gt; &lt;str_to_bool&gt;$,
  $&lt;construct_from_float16&gt; -&gt; &lt;float_to_bool&gt;$,
  $&lt;construct_from_float16&gt; -&gt; &lt;int_to_string&gt;$,
  $&lt;construct_from_float16&gt; -&gt; &lt;bool_to_string&gt;$,
  $&lt;construct_from_float16&gt; -&gt; &lt;float_to_string&gt;$,
  $&lt;construct_from_float32&gt; -&gt; &lt;bool_to_int&gt;$,
  $&lt;construct_from_float32&gt; -&gt; &lt;str_to_int&gt;$,
  $&lt;construct_from_float32&gt; -&gt; &lt;float_to_int&gt;$,
  $&lt;construct_from_float32&gt; -&gt; &lt;bool_to_float&gt;$,
  $&lt;construct_from_float32&gt; -&gt; &lt;int_to_float&gt;$,
  $&lt;construct_from_float32&gt; -&gt; &lt;str_to_float&gt;$,
  $&lt;construct_from_float32&gt; -&gt; &lt;int_to_bool&gt;$,
  $&lt;construct_from_float32&gt; -&gt; &lt;str_to_bool&gt;$,
  $&lt;construct_from_float32&gt; -&gt; &lt;float_to_bool&gt;$,
  $&lt;construct_from_float32&gt; -&gt; &lt;int_to_string&gt;$,
  $&lt;construct_from_float32&gt; -&gt; &lt;bool_to_string&gt;$,
  $&lt;construct_from_float32&gt; -&gt; &lt;float_to_string&gt;$,
  $&lt;construct_from_float64&gt; -&gt; &lt;bool_to_int&gt;$,
  $&lt;construct_from_float64&gt; -&gt; &lt;str_to_int&gt;$,
  $&lt;construct_from_float64&gt; -&gt; &lt;int_to_bool&gt;$,
  $&lt;construct_from_float64&gt; -&gt; &lt;str_to_bool&gt;$,
  $&lt;construct_from_float64&gt; -&gt; &lt;int_to_string&gt;$,
  $&lt;construct_from_float64&gt; -&gt; &lt;bool_to_string&gt;$,
  $&lt;construct_from_complex64&gt; -&gt; &lt;bool_to_int&gt;$,
  $&lt;construct_from_complex64&gt; -&gt; &lt;str_to_int&gt;$,
  $&lt;construct_from_complex64&gt; -&gt; &lt;float_to_int&gt;$,
  $&lt;construct_from_complex64&gt; -&gt; &lt;bool_to_float&gt;$,
  $&lt;construct_from_complex64&gt; -&gt; &lt;int_to_float&gt;$,
  $&lt;construct_from_complex64&gt; -&gt; &lt;str_to_float&gt;$,
  $&lt;construct_from_complex64&gt; -&gt; &lt;int_to_bool&gt;$,
  $&lt;construct_from_complex64&gt; -&gt; &lt;str_to_bool&gt;$,
  $&lt;construct_from_complex64&gt; -&gt; &lt;float_to_bool&gt;$,
  $&lt;construct_from_complex64&gt; -&gt; &lt;int_to_string&gt;$,
  $&lt;construct_from_complex64&gt; -&gt; &lt;bool_to_string&gt;$,
  $&lt;construct_from_complex64&gt; -&gt; &lt;float_to_string&gt;$,
  $&lt;construct_from_complex128&gt; -&gt; &lt;bool_to_int&gt;$,
  $&lt;construct_from_complex128&gt; -&gt; &lt;str_to_int&gt;$,
  $&lt;construct_from_complex128&gt; -&gt; &lt;float_to_int&gt;$,
  $&lt;construct_from_complex128&gt; -&gt; &lt;bool_to_float&gt;$,
  $&lt;construct_from_complex128&gt; -&gt; &lt;int_to_float&gt;$,
  $&lt;construct_from_complex128&gt; -&gt; &lt;str_to_float&gt;$,
  $&lt;construct_from_complex128&gt; -&gt; &lt;int_to_bool&gt;$,
  $&lt;construct_from_complex128&gt; -&gt; &lt;str_to_bool&gt;$,
  $&lt;construct_from_complex128&gt; -&gt; &lt;float_to_bool&gt;$,
  $&lt;construct_from_complex128&gt; -&gt; &lt;int_to_string&gt;$,
  $&lt;construct_from_complex128&gt; -&gt; &lt;bool_to_string&gt;$,
  $&lt;construct_from_complex128&gt; -&gt; &lt;float_to_string&gt;$,
  $&lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt;$,
  $&lt;dict_to_df&gt; -&gt; &lt;single_row_or_col_df_to_series&gt;$,
  $&lt;bool_to_int&gt;$,
  $&lt;str_to_int&gt;$,
  $&lt;float_to_int&gt;$,
  $&lt;bool_to_float&gt;$,
  $&lt;int_to_float&gt;$,
  $&lt;str_to_float&gt;$,
  $&lt;int_to_bool&gt;$,
  $&lt;str_to_bool&gt;$,
  $&lt;float_to_bool&gt;$,
  $&lt;int_to_string&gt;$,
  $&lt;bool_to_string&gt;$,
  $&lt;float_to_string&gt;$,
  $&lt;list_to_set&gt;$,
  $&lt;list_to_tuple&gt;$,
  $&lt;config_to_dict_of_dict&gt;$,
  $&lt;merge_all_config_sections_into_a_single_dict&gt;$,
  $&lt;single_row_or_col_df_to_dict&gt;$,
  $&lt;dict_to_df&gt;$,
  $&lt;single_row_or_col_df_to_series&gt;$])
</system-out></testcase><testcase classname="parsyfiles.tests.combining_parsers_converters.test_default_instance" file="parsyfiles/tests/combining_parsers_converters/test_default_instance.py" line="101" name="test_get_all_supported_exts" time="0.061580657958984375"><system-out>
13 Root parser supported extensions:
{&apos;.cfg&apos;,
 &apos;.csv&apos;,
 &apos;.ini&apos;,
 &apos;.json&apos;,
 &apos;.properties&apos;,
 &apos;.pyc&apos;,
 &apos;.txt&apos;,
 &apos;.xls&apos;,
 &apos;.xlsm&apos;,
 &apos;.xlsx&apos;,
 &apos;.yaml&apos;,
 &apos;.yml&apos;,
 &apos;&lt;multifile&gt;&apos;}
</system-out></testcase><testcase classname="parsyfiles.tests.combining_parsers_converters.test_default_instance" file="parsyfiles/tests/combining_parsers_converters/test_default_instance.py" line="113" name="test_get_all_supported_types_pretty_str" time="0.0731661319732666"><system-out>
15 Root parser supported types:
{&apos;AnyObject&apos;,
 &apos;ConfigParser&apos;,
 &apos;DataFrame&apos;,
 &apos;Dict&apos;,
 &apos;DictOfDict&apos;,
 &apos;List&apos;,
 &apos;Series&apos;,
 &apos;Set&apos;,
 &apos;Tuple&apos;,
 &apos;bool&apos;,
 &apos;dict&apos;,
 &apos;float&apos;,
 &apos;int&apos;,
 &apos;list&apos;,
 &apos;str&apos;}
</system-out></testcase><testcase classname="parsyfiles.tests.combining_parsers_converters.test_default_instance" file="parsyfiles/tests/combining_parsers_converters/test_default_instance.py" line="124" name="test_print_and_get_capabilities_by_ext" time="0.6501848697662354"><failure message="assert {&apos;.cfg&apos;: {&quot;&lt;c...]}, ...}, ...} == {&apos;.cfg&apos;: {&quot;&lt;cl...]}, ...}, ...}
  Omitting 9 identical items, use -vv to show
  Differing items:
  {&apos;.txt&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos;, &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;bas...e_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos;], &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos;]}, ...}} != {&apos;.txt&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos;, &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;bas...e_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos;], &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos;]}, ...}}
  {&apos;.pyc&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_p...=&gt; &lt;str_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos;], &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]}, ...}} != {&apos;.pyc&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_p...=&gt; &lt;int_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos;], &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]}, ...}}
  {&apos;.yaml&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_ya...ml&gt; =&gt; &lt;str_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_bool&gt;$&apos;], &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]}, ...}} != {&apos;.yaml&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_ya...ml&gt; =&gt; &lt;int_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_bool&gt;$&apos;], &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]}, ...}}
  {&apos;.yml&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_yam...ml&gt; =&gt; &lt;str_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_bool&gt;$&apos;], &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]}, ...}} != {&apos;.yml&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_yam...ml&gt; =&gt; &lt;int_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_bool&gt;$&apos;], &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]}, ...}}
  Full diff:
  {&apos;.cfg&apos;: {&quot;&lt;class &apos;configparser.ConfigParser&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_config&gt;&apos;]},
  &quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
  &apos;2_approx_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;]},
  &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;]},
  &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
  &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;,
  &apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_of_dict_to_object&gt;$&apos;,
  &apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]},
  &apos;parsyfiles.plugins_base.support_for_collections.DictOfDict&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;]}},
  &apos;.csv&apos;: {&quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_df_or_series_from_csv&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
  &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_df_or_series_from_csv&gt;&apos;]},
  &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_df_or_series_from_csv&gt;&apos;]},
  &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_df_or_series_from_csv&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]}},
  &apos;.ini&apos;: {&quot;&lt;class &apos;configparser.ConfigParser&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_config&gt;&apos;]},
  &quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
  &apos;2_approx_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;]},
  &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;]},
  &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
  &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;,
  &apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_of_dict_to_object&gt;$&apos;,
  &apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]},
  &apos;parsyfiles.plugins_base.support_for_collections.DictOfDict&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;]}},
  &apos;.json&apos;: {&quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dict_or_list_from_json&gt;&apos;]},
  &quot;&lt;class &apos;list&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dict_or_list_from_json&gt;&apos;]},
  &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;]},
  &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
  &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]},
  &apos;typing.Set&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; =&gt; &apos;
  &apos;&lt;list_to_set&gt;$&apos;]},
  &apos;typing.Tuple&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; &apos;
  &apos;=&gt; &lt;list_to_tuple&gt;$&apos;]}},
  &apos;.properties&apos;: {&quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dict_from_properties&gt;&apos;]},
  &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_from_properties&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;]},
  &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_from_properties&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
  &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_from_properties&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]}},
  &apos;.pyc&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  -                                                &apos;&lt;str_to_bool&gt;$&apos;,
  ?                                                  ^ -
  +                                                &apos;&lt;int_to_bool&gt;$&apos;,
  ?                                                  ^^
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  -                                                &apos;&lt;int_to_bool&gt;$&apos;],
  ?                                                  ^^
  +                                                &apos;&lt;str_to_bool&gt;$&apos;],
  ?                                                  ^ +
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
  &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &quot;&lt;class &apos;float&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  -                                                 &apos;&lt;str_to_float&gt;$&apos;,
  ?                                                   ^^^
  +                                                 &apos;&lt;bool_to_float&gt;$&apos;,
  ?                                                   ^^^^
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;int_to_float&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  -                                                 &apos;&lt;bool_to_float&gt;$&apos;],
  ?                                                   ^^^^
  +                                                 &apos;&lt;str_to_float&gt;$&apos;],
  ?                                                   ^^^
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &quot;&lt;class &apos;int&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  +                                               &apos;&lt;bool_to_int&gt;$&apos;,
  +                                               &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;float_to_int&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  -                                               &apos;&lt;str_to_int&gt;$&apos;,
  +                                               &apos;&lt;str_to_int&gt;$&apos;],
  ?                                                              +
  -                                               &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  -                                               &apos;&lt;bool_to_int&gt;$&apos;],
  &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  -                                                &apos;&lt;str_to_bool&gt;$&apos;,
  ?                                                  ^ -
  +                                                &apos;&lt;int_to_bool&gt;$&apos;,
  ?                                                  ^^
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  -                                                &apos;&lt;int_to_bool&gt;$&apos;],
  ?                                                  ^^
  +                                                &apos;&lt;str_to_bool&gt;$&apos;],
  ?                                                  ^ +
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &quot;&lt;class &apos;str&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  +                                               &apos;&lt;bool_to_string&gt;$&apos;,
  +                                               &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;float_to_string&gt;$&apos;,
  -                                               &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  -                                               &apos;&lt;bool_to_string&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;int_to_string&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &apos;parsyfiles.plugins_base.support_for_collections.DictOfDict&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &apos;typing.Set&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;list_to_set&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &apos;typing.Tuple&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;list_to_tuple&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]}},
  &apos;.txt&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  &apos;-&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  -                                                &apos;-&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                                     ^ -
  +                                                &apos;-&gt; &lt;int_to_bool&gt;$&apos;,
  ?                                                     ^^
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  -                                                &apos;-&gt; &lt;int_to_bool&gt;$&apos;],
  ?                                                     ^^
  +                                                &apos;-&gt; &lt;str_to_bool&gt;$&apos;],
  ?                                                     ^ +
  &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dict_from_properties&gt;&apos;,
  &apos;$&lt;read_df_or_series_from_csv&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;constructor_with_str_arg&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &quot;&lt;class &apos;float&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;str_to_float&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  -                                                 &apos;-&gt; &lt;str_to_float&gt;$&apos;,
  ?                                                      ^^^
  +                                                 &apos;-&gt; &lt;bool_to_float&gt;$&apos;,
  ?                                                      ^^^^
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  &apos;-&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  -                                                 &apos;-&gt; &lt;bool_to_float&gt;$&apos;],
  ?                                                      ^^^^
  +                                                 &apos;-&gt; &lt;str_to_float&gt;$&apos;],
  ?                                                      ^^^
  &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &quot;&lt;class &apos;int&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;str_to_int&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  +                                               &apos;-&gt; &lt;bool_to_int&gt;$&apos;,
  +                                               &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  +                                               &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  &apos;-&gt; &lt;float_to_int&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  -                                               &apos;-&gt; &lt;str_to_int&gt;$&apos;,
  +                                               &apos;-&gt; &lt;str_to_int&gt;$&apos;],
  ?                                                                 +
  -                                               &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  -                                               &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  -                                               &apos;-&gt; &lt;bool_to_int&gt;$&apos;],
  &apos;2_approx_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  &apos;-&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  -                                                &apos;-&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                                     ^ -
  +                                                &apos;-&gt; &lt;int_to_bool&gt;$&apos;,
  ?                                                     ^^
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  -                                                &apos;-&gt; &lt;int_to_bool&gt;$&apos;],
  ?                                                     ^^
  +                                                &apos;-&gt; &lt;str_to_bool&gt;$&apos;],
  ?                                                     ^ +
  &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_df_or_series_from_csv&gt;&apos;,
  &apos;$&lt;read_dict_from_properties&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;constructor_with_str_arg&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_df_or_series_from_csv&gt;&apos;,
  &apos;$&lt;read_dict_from_properties&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;constructor_with_str_arg&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_from_properties&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;constructor_with_str_arg&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;,
  &apos;$&lt;read_df_or_series_from_csv&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]},
  &quot;&lt;class &apos;str&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_str_from_txt&gt;&apos;]},
  &apos;typing.Set&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  &apos;-&gt; &lt;list_to_set&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;constructor_with_str_arg&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &apos;typing.Tuple&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  &apos;-&gt; &lt;list_to_tuple&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;constructor_with_str_arg&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]}},
  &apos;.xls&apos;: {&quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
  &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dataframe_from_xls&gt;&apos;]},
  &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
  &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]}},
  &apos;.xlsm&apos;: {&quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
  &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dataframe_from_xls&gt;&apos;]},
  &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
  &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]}},
  &apos;.xlsx&apos;: {&quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
  &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dataframe_from_xls&gt;&apos;]},
  &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
  &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]}},
  &apos;.yaml&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                 &apos;&lt;str_to_bool&gt;$&apos;,
  -                                                 &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                 &apos;&lt;int_to_bool&gt;$&apos;],
  ?                                                                 -
  +                                                 &apos;&lt;int_to_bool&gt;$&apos;,
  +                                                 &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  +                                                 &apos;&lt;str_to_bool&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
  &apos;2_approx_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &quot;&lt;class &apos;float&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                  &apos;&lt;str_to_float&gt;$&apos;,
  ?                                                    ^^^
  +                                                  &apos;&lt;bool_to_float&gt;$&apos;,
  ?                                                    ^^^^
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;int_to_float&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                  &apos;&lt;bool_to_float&gt;$&apos;],
  ?                                                    ^^^^
  +                                                  &apos;&lt;str_to_float&gt;$&apos;],
  ?                                                    ^^^
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &quot;&lt;class &apos;int&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  +                                                &apos;&lt;bool_to_int&gt;$&apos;,
  +                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;float_to_int&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                &apos;&lt;str_to_int&gt;$&apos;,
  +                                                &apos;&lt;str_to_int&gt;$&apos;],
  ?                                                               +
  -                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                &apos;&lt;bool_to_int&gt;$&apos;],
  &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                 &apos;&lt;str_to_bool&gt;$&apos;,
  -                                                 &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                 &apos;&lt;int_to_bool&gt;$&apos;],
  ?                                                                 -
  +                                                 &apos;&lt;int_to_bool&gt;$&apos;,
  +                                                 &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  +                                                 &apos;&lt;str_to_bool&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_collection_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_collection_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;,
  &apos;$&lt;read_collection_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]},
  &quot;&lt;class &apos;str&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  +                                                &apos;&lt;bool_to_string&gt;$&apos;,
  +                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;float_to_string&gt;$&apos;,
  -                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                &apos;&lt;bool_to_string&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;int_to_string&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;parsyfiles.plugins_base.support_for_collections.DictOfDict&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;typing.Dict&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
  &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;typing.List&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;typing.Set&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;list_to_set&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;typing.Tuple&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;list_to_tuple&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]}},
  &apos;.yml&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                &apos;&lt;str_to_bool&gt;$&apos;,
  -                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                &apos;&lt;int_to_bool&gt;$&apos;],
  ?                                                                -
  +                                                &apos;&lt;int_to_bool&gt;$&apos;,
  +                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  +                                                &apos;&lt;str_to_bool&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
  &apos;2_approx_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &quot;&lt;class &apos;float&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                 &apos;&lt;str_to_float&gt;$&apos;,
  ?                                                   ^^^
  +                                                 &apos;&lt;bool_to_float&gt;$&apos;,
  ?                                                   ^^^^
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;int_to_float&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                 &apos;&lt;bool_to_float&gt;$&apos;],
  ?                                                   ^^^^
  +                                                 &apos;&lt;str_to_float&gt;$&apos;],
  ?                                                   ^^^
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &quot;&lt;class &apos;int&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  +                                               &apos;&lt;bool_to_int&gt;$&apos;,
  +                                               &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;float_to_int&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                               &apos;&lt;str_to_int&gt;$&apos;,
  +                                               &apos;&lt;str_to_int&gt;$&apos;],
  ?                                                              +
  -                                               &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                               &apos;&lt;bool_to_int&gt;$&apos;],
  &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                &apos;&lt;str_to_bool&gt;$&apos;,
  -                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                &apos;&lt;int_to_bool&gt;$&apos;],
  ?                                                                -
  +                                                &apos;&lt;int_to_bool&gt;$&apos;,
  +                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  +                                                &apos;&lt;str_to_bool&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_collection_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_collection_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;,
  &apos;$&lt;read_collection_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]},
  &quot;&lt;class &apos;str&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  +                                               &apos;&lt;bool_to_string&gt;$&apos;,
  +                                               &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;float_to_string&gt;$&apos;,
  -                                               &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                               &apos;&lt;bool_to_string&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;int_to_string&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;parsyfiles.plugins_base.support_for_collections.DictOfDict&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;typing.Dict&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
  &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;typing.List&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;typing.Set&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;list_to_set&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;typing.Tuple&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;list_to_tuple&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]}},
  &apos;&lt;multifile&gt;&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {},
  &quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;2_approx_match&apos;: [&apos;Multifile Collection &apos;
  &apos;parser (parsyfiles &apos;
  &apos;defaults)&apos;]},
  &quot;&lt;class &apos;float&apos;&gt;&quot;: {},
  &quot;&lt;class &apos;int&apos;&gt;&quot;: {},
  &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {},
  &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {},
  &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;Multifile &apos;
  &apos;Object &apos;
  &apos;parser &apos;
  &apos;(parsyfiles &apos;
  &apos;defaults)&apos;]},
  &quot;&lt;class &apos;str&apos;&gt;&quot;: {},
  &apos;parsyfiles.plugins_base.support_for_collections.DictOfDict&apos;: {},
  &apos;typing.Dict&apos;: {&apos;1_exact_match&apos;: [&apos;Multifile Collection &apos;
  &apos;parser (parsyfiles &apos;
  &apos;defaults)&apos;]},
  &apos;typing.List&apos;: {&apos;1_exact_match&apos;: [&apos;Multifile Collection &apos;
  &apos;parser (parsyfiles &apos;
  &apos;defaults)&apos;]},
  &apos;typing.Set&apos;: {&apos;1_exact_match&apos;: [&apos;Multifile Collection parser &apos;
  &apos;(parsyfiles defaults)&apos;]},
  &apos;typing.Tuple&apos;: {&apos;1_exact_match&apos;: [&apos;Multifile Collection &apos;
  &apos;parser (parsyfiles &apos;
  &apos;defaults)&apos;]}}}">root_parser = parsyfiles defaults

    def test_print_and_get_capabilities_by_ext(root_parser: RootParser):
        &quot;&quot;&quot; Tests that the declared capabilities by extension are correct &quot;&quot;&quot;
    
        c = root_parser.get_capabilities_by_ext(strict_type_matching=False)
        print(&apos;\n&apos; + str(len(c)) + &apos; Root parser capabilities by ext:&apos;)
        assert len(c) == 13
    
        cdict = to_str_coll(c)
    
        # dump(cdict, &apos;reference_capabilities_by_ext.json&apos;)
&gt;       assert cdict == load(&apos;reference_capabilities_by_ext.json&apos;)
E       assert {&apos;.cfg&apos;: {&quot;&lt;c...]}, ...}, ...} == {&apos;.cfg&apos;: {&quot;&lt;cl...]}, ...}, ...}
E         Omitting 9 identical items, use -vv to show
E         Differing items:
E         {&apos;.txt&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos;, &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;bas...e_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos;], &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos;]}, ...}} != {&apos;.txt&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos;, &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;bas...e_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos;], &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos;]}, ...}}
E         {&apos;.pyc&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_p...=&gt; &lt;str_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos;], &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]}, ...}} != {&apos;.pyc&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_p...=&gt; &lt;int_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos;], &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]}, ...}}
E         {&apos;.yaml&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_ya...ml&gt; =&gt; &lt;str_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_bool&gt;$&apos;], &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]}, ...}} != {&apos;.yaml&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_ya...ml&gt; =&gt; &lt;int_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_bool&gt;$&apos;], &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]}, ...}}
E         {&apos;.yml&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_yam...ml&gt; =&gt; &lt;str_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_bool&gt;$&apos;], &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]}, ...}} != {&apos;.yml&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_yam...ml&gt; =&gt; &lt;int_to_bool&gt;$&apos;, &apos;$&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_bool&gt;$&apos;], &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]}, ...}}
E         Full diff:
E         {&apos;.cfg&apos;: {&quot;&lt;class &apos;configparser.ConfigParser&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_config&gt;&apos;]},
E         &quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
E         &apos;2_approx_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;]},
E         &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;]},
E         &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
E         &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;,
E         &apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_of_dict_to_object&gt;$&apos;,
E         &apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]},
E         &apos;parsyfiles.plugins_base.support_for_collections.DictOfDict&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;]}},
E         &apos;.csv&apos;: {&quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_df_or_series_from_csv&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
E         &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_df_or_series_from_csv&gt;&apos;]},
E         &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_df_or_series_from_csv&gt;&apos;]},
E         &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_df_or_series_from_csv&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]}},
E         &apos;.ini&apos;: {&quot;&lt;class &apos;configparser.ConfigParser&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_config&gt;&apos;]},
E         &quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
E         &apos;2_approx_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;]},
E         &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;]},
E         &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
E         &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;,
E         &apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_of_dict_to_object&gt;$&apos;,
E         &apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]},
E         &apos;parsyfiles.plugins_base.support_for_collections.DictOfDict&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;]}},
E         &apos;.json&apos;: {&quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dict_or_list_from_json&gt;&apos;]},
E         &quot;&lt;class &apos;list&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dict_or_list_from_json&gt;&apos;]},
E         &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;]},
E         &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
E         &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]},
E         &apos;typing.Set&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; =&gt; &apos;
E         &apos;&lt;list_to_set&gt;$&apos;]},
E         &apos;typing.Tuple&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; &apos;
E         &apos;=&gt; &lt;list_to_tuple&gt;$&apos;]}},
E         &apos;.properties&apos;: {&quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dict_from_properties&gt;&apos;]},
E         &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_from_properties&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;]},
E         &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_from_properties&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
E         &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_from_properties&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]}},
E         &apos;.pyc&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         -                                                &apos;&lt;str_to_bool&gt;$&apos;,
E         ?                                                  ^ -
E         +                                                &apos;&lt;int_to_bool&gt;$&apos;,
E         ?                                                  ^^
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         -                                                &apos;&lt;int_to_bool&gt;$&apos;],
E         ?                                                  ^^
E         +                                                &apos;&lt;str_to_bool&gt;$&apos;],
E         ?                                                  ^ +
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
E         &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &quot;&lt;class &apos;float&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         -                                                 &apos;&lt;str_to_float&gt;$&apos;,
E         ?                                                   ^^^
E         +                                                 &apos;&lt;bool_to_float&gt;$&apos;,
E         ?                                                   ^^^^
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         -                                                 &apos;&lt;bool_to_float&gt;$&apos;],
E         ?                                                   ^^^^
E         +                                                 &apos;&lt;str_to_float&gt;$&apos;],
E         ?                                                   ^^^
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &quot;&lt;class &apos;int&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         +                                               &apos;&lt;bool_to_int&gt;$&apos;,
E         +                                               &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;float_to_int&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         -                                               &apos;&lt;str_to_int&gt;$&apos;,
E         +                                               &apos;&lt;str_to_int&gt;$&apos;],
E         ?                                                              +
E         -                                               &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         -                                               &apos;&lt;bool_to_int&gt;$&apos;],
E         &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         -                                                &apos;&lt;str_to_bool&gt;$&apos;,
E         ?                                                  ^ -
E         +                                                &apos;&lt;int_to_bool&gt;$&apos;,
E         ?                                                  ^^
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         -                                                &apos;&lt;int_to_bool&gt;$&apos;],
E         ?                                                  ^^
E         +                                                &apos;&lt;str_to_bool&gt;$&apos;],
E         ?                                                  ^ +
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &quot;&lt;class &apos;str&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         +                                               &apos;&lt;bool_to_string&gt;$&apos;,
E         +                                               &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;float_to_string&gt;$&apos;,
E         -                                               &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         -                                               &apos;&lt;bool_to_string&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;int_to_string&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &apos;parsyfiles.plugins_base.support_for_collections.DictOfDict&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &apos;typing.Set&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;list_to_set&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &apos;typing.Tuple&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;list_to_tuple&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]}},
E         &apos;.txt&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         &apos;-&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         -                                                &apos;-&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                                     ^ -
E         +                                                &apos;-&gt; &lt;int_to_bool&gt;$&apos;,
E         ?                                                     ^^
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         -                                                &apos;-&gt; &lt;int_to_bool&gt;$&apos;],
E         ?                                                     ^^
E         +                                                &apos;-&gt; &lt;str_to_bool&gt;$&apos;],
E         ?                                                     ^ +
E         &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dict_from_properties&gt;&apos;,
E         &apos;$&lt;read_df_or_series_from_csv&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;constructor_with_str_arg&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &quot;&lt;class &apos;float&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;str_to_float&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         -                                                 &apos;-&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                                      ^^^
E         +                                                 &apos;-&gt; &lt;bool_to_float&gt;$&apos;,
E         ?                                                      ^^^^
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         &apos;-&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         -                                                 &apos;-&gt; &lt;bool_to_float&gt;$&apos;],
E         ?                                                      ^^^^
E         +                                                 &apos;-&gt; &lt;str_to_float&gt;$&apos;],
E         ?                                                      ^^^
E         &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &quot;&lt;class &apos;int&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         +                                               &apos;-&gt; &lt;bool_to_int&gt;$&apos;,
E         +                                               &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         +                                               &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         &apos;-&gt; &lt;float_to_int&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         -                                               &apos;-&gt; &lt;str_to_int&gt;$&apos;,
E         +                                               &apos;-&gt; &lt;str_to_int&gt;$&apos;],
E         ?                                                                 +
E         -                                               &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         -                                               &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         -                                               &apos;-&gt; &lt;bool_to_int&gt;$&apos;],
E         &apos;2_approx_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         &apos;-&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         -                                                &apos;-&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                                     ^ -
E         +                                                &apos;-&gt; &lt;int_to_bool&gt;$&apos;,
E         ?                                                     ^^
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         -                                                &apos;-&gt; &lt;int_to_bool&gt;$&apos;],
E         ?                                                     ^^
E         +                                                &apos;-&gt; &lt;str_to_bool&gt;$&apos;],
E         ?                                                     ^ +
E         &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_df_or_series_from_csv&gt;&apos;,
E         &apos;$&lt;read_dict_from_properties&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;constructor_with_str_arg&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_df_or_series_from_csv&gt;&apos;,
E         &apos;$&lt;read_dict_from_properties&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;constructor_with_str_arg&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_from_properties&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;constructor_with_str_arg&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;,
E         &apos;$&lt;read_df_or_series_from_csv&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]},
E         &quot;&lt;class &apos;str&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_str_from_txt&gt;&apos;]},
E         &apos;typing.Set&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         &apos;-&gt; &lt;list_to_set&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;constructor_with_str_arg&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &apos;typing.Tuple&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         &apos;-&gt; &lt;list_to_tuple&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;constructor_with_str_arg&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]}},
E         &apos;.xls&apos;: {&quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
E         &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dataframe_from_xls&gt;&apos;]},
E         &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
E         &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]}},
E         &apos;.xlsm&apos;: {&quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
E         &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dataframe_from_xls&gt;&apos;]},
E         &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
E         &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]}},
E         &apos;.xlsx&apos;: {&quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
E         &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dataframe_from_xls&gt;&apos;]},
E         &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
E         &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]}},
E         &apos;.yaml&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                 &apos;&lt;str_to_bool&gt;$&apos;,
E         -                                                 &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                 &apos;&lt;int_to_bool&gt;$&apos;],
E         ?                                                                 -
E         +                                                 &apos;&lt;int_to_bool&gt;$&apos;,
E         +                                                 &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         +                                                 &apos;&lt;str_to_bool&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
E         &apos;2_approx_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &quot;&lt;class &apos;float&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                  &apos;&lt;str_to_float&gt;$&apos;,
E         ?                                                    ^^^
E         +                                                  &apos;&lt;bool_to_float&gt;$&apos;,
E         ?                                                    ^^^^
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                  &apos;&lt;bool_to_float&gt;$&apos;],
E         ?                                                    ^^^^
E         +                                                  &apos;&lt;str_to_float&gt;$&apos;],
E         ?                                                    ^^^
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &quot;&lt;class &apos;int&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         +                                                &apos;&lt;bool_to_int&gt;$&apos;,
E         +                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;float_to_int&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                &apos;&lt;str_to_int&gt;$&apos;,
E         +                                                &apos;&lt;str_to_int&gt;$&apos;],
E         ?                                                               +
E         -                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                &apos;&lt;bool_to_int&gt;$&apos;],
E         &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                 &apos;&lt;str_to_bool&gt;$&apos;,
E         -                                                 &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                 &apos;&lt;int_to_bool&gt;$&apos;],
E         ?                                                                 -
E         +                                                 &apos;&lt;int_to_bool&gt;$&apos;,
E         +                                                 &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         +                                                 &apos;&lt;str_to_bool&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_collection_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_collection_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;,
E         &apos;$&lt;read_collection_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]},
E         &quot;&lt;class &apos;str&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         +                                                &apos;&lt;bool_to_string&gt;$&apos;,
E         +                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;float_to_string&gt;$&apos;,
E         -                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                &apos;&lt;bool_to_string&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;int_to_string&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;parsyfiles.plugins_base.support_for_collections.DictOfDict&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;typing.Dict&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
E         &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;typing.List&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;typing.Set&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;list_to_set&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;typing.Tuple&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;list_to_tuple&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]}},
E         &apos;.yml&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                &apos;&lt;str_to_bool&gt;$&apos;,
E         -                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                &apos;&lt;int_to_bool&gt;$&apos;],
E         ?                                                                -
E         +                                                &apos;&lt;int_to_bool&gt;$&apos;,
E         +                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         +                                                &apos;&lt;str_to_bool&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
E         &apos;2_approx_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &quot;&lt;class &apos;float&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                 &apos;&lt;str_to_float&gt;$&apos;,
E         ?                                                   ^^^
E         +                                                 &apos;&lt;bool_to_float&gt;$&apos;,
E         ?                                                   ^^^^
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                 &apos;&lt;bool_to_float&gt;$&apos;],
E         ?                                                   ^^^^
E         +                                                 &apos;&lt;str_to_float&gt;$&apos;],
E         ?                                                   ^^^
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &quot;&lt;class &apos;int&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         +                                               &apos;&lt;bool_to_int&gt;$&apos;,
E         +                                               &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;float_to_int&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                               &apos;&lt;str_to_int&gt;$&apos;,
E         +                                               &apos;&lt;str_to_int&gt;$&apos;],
E         ?                                                              +
E         -                                               &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                               &apos;&lt;bool_to_int&gt;$&apos;],
E         &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                &apos;&lt;str_to_bool&gt;$&apos;,
E         -                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                &apos;&lt;int_to_bool&gt;$&apos;],
E         ?                                                                -
E         +                                                &apos;&lt;int_to_bool&gt;$&apos;,
E         +                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         +                                                &apos;&lt;str_to_bool&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_collection_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_collection_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;,
E         &apos;$&lt;read_collection_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]},
E         &quot;&lt;class &apos;str&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         +                                               &apos;&lt;bool_to_string&gt;$&apos;,
E         +                                               &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;float_to_string&gt;$&apos;,
E         -                                               &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                               &apos;&lt;bool_to_string&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;int_to_string&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;parsyfiles.plugins_base.support_for_collections.DictOfDict&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;typing.Dict&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
E         &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;typing.List&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;typing.Set&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;list_to_set&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;typing.Tuple&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;list_to_tuple&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]}},
E         &apos;&lt;multifile&gt;&apos;: {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {},
E         &quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;2_approx_match&apos;: [&apos;Multifile Collection &apos;
E         &apos;parser (parsyfiles &apos;
E         &apos;defaults)&apos;]},
E         &quot;&lt;class &apos;float&apos;&gt;&quot;: {},
E         &quot;&lt;class &apos;int&apos;&gt;&quot;: {},
E         &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {},
E         &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {},
E         &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;1_exact_match&apos;: [&apos;Multifile &apos;
E         &apos;Object &apos;
E         &apos;parser &apos;
E         &apos;(parsyfiles &apos;
E         &apos;defaults)&apos;]},
E         &quot;&lt;class &apos;str&apos;&gt;&quot;: {},
E         &apos;parsyfiles.plugins_base.support_for_collections.DictOfDict&apos;: {},
E         &apos;typing.Dict&apos;: {&apos;1_exact_match&apos;: [&apos;Multifile Collection &apos;
E         &apos;parser (parsyfiles &apos;
E         &apos;defaults)&apos;]},
E         &apos;typing.List&apos;: {&apos;1_exact_match&apos;: [&apos;Multifile Collection &apos;
E         &apos;parser (parsyfiles &apos;
E         &apos;defaults)&apos;]},
E         &apos;typing.Set&apos;: {&apos;1_exact_match&apos;: [&apos;Multifile Collection parser &apos;
E         &apos;(parsyfiles defaults)&apos;]},
E         &apos;typing.Tuple&apos;: {&apos;1_exact_match&apos;: [&apos;Multifile Collection &apos;
E         &apos;parser (parsyfiles &apos;
E         &apos;defaults)&apos;]}}}

parsyfiles/tests/combining_parsers_converters/test_default_instance.py:135: AssertionError</failure><system-out>
13 Root parser capabilities by ext:
</system-out></testcase><testcase classname="parsyfiles.tests.combining_parsers_converters.test_default_instance" file="parsyfiles/tests/combining_parsers_converters/test_default_instance.py" line="139" name="test_print_and_get_capabilities_by_type" time="1.7300901412963867"><failure message="assert {&quot;&lt;class &apos;boo...{}, ...}, ...} == {&quot;&lt;class &apos;bool...{}, ...}, ...}
  Omitting 11 identical items, use -vv to show
  Differing items:
  {&quot;&lt;class &apos;str&apos;&gt;&quot;: {&apos;.cfg&apos;: {}, &apos;.csv&apos;: {}, &apos;.ini&apos;: {}, &apos;.json&apos;: {}, ...}} != {&quot;&lt;class &apos;str&apos;&gt;&quot;: {&apos;.cfg&apos;: {}, &apos;.csv&apos;: {}, &apos;.ini&apos;: {}, &apos;.json&apos;: {}, ...}}
  {&quot;&lt;class &apos;float&apos;&gt;&quot;: {&apos;.cfg&apos;: {}, &apos;.csv&apos;: {}, &apos;.ini&apos;: {}, &apos;.json&apos;: {}, ...}} != {&quot;&lt;class &apos;float&apos;&gt;&quot;: {&apos;.cfg&apos;: {}, &apos;.csv&apos;: {}, &apos;.ini&apos;: {}, &apos;.json&apos;: {}, ...}}
  {&quot;&lt;class &apos;int&apos;&gt;&quot;: {&apos;.cfg&apos;: {}, &apos;.csv&apos;: {}, &apos;.ini&apos;: {}, &apos;.json&apos;: {}, ...}} != {&quot;&lt;class &apos;int&apos;&gt;&quot;: {&apos;.cfg&apos;: {}, &apos;.csv&apos;: {}, &apos;.ini&apos;: {}, &apos;.json&apos;: {}, ...}}
  {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;.cfg&apos;: {}, &apos;.csv&apos;: {}, &apos;.ini&apos;: {}, &apos;.json&apos;: {}, ...}} != {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;.cfg&apos;: {}, &apos;.csv&apos;: {}, &apos;.ini&apos;: {}, &apos;.json&apos;: {}, ...}}
  Full diff:
  {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;.cfg&apos;: {},
  &apos;.csv&apos;: {},
  &apos;.ini&apos;: {},
  &apos;.json&apos;: {},
  &apos;.properties&apos;: {},
  &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  -                                                &apos;&lt;str_to_bool&gt;$&apos;,
  ?                                                  ^ -
  +                                                &apos;&lt;int_to_bool&gt;$&apos;,
  ?                                                  ^^
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  -                                                &apos;&lt;int_to_bool&gt;$&apos;],
  ?                                                  ^^
  +                                                &apos;&lt;str_to_bool&gt;$&apos;],
  ?                                                  ^ +
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  &apos;-&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  -                                                &apos;-&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                                     ^ -
  +                                                &apos;-&gt; &lt;int_to_bool&gt;$&apos;,
  ?                                                     ^^
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  -                                                &apos;-&gt; &lt;int_to_bool&gt;$&apos;],
  ?                                                     ^^
  +                                                &apos;-&gt; &lt;str_to_bool&gt;$&apos;],
  ?                                                     ^ +
  &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &apos;.xls&apos;: {},
  &apos;.xlsm&apos;: {},
  &apos;.xlsx&apos;: {},
  &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                 &apos;&lt;str_to_bool&gt;$&apos;,
  ?                                                   ^ -
  +                                                 &apos;&lt;int_to_bool&gt;$&apos;,
  ?                                                   ^^
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                 &apos;&lt;int_to_bool&gt;$&apos;],
  ?                                                   ^^
  +                                                 &apos;&lt;str_to_bool&gt;$&apos;],
  ?                                                   ^ +
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                &apos;&lt;str_to_bool&gt;$&apos;,
  -                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                &apos;&lt;int_to_bool&gt;$&apos;],
  ?                                                                -
  +                                                &apos;&lt;int_to_bool&gt;$&apos;,
  +                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  +                                                &apos;&lt;str_to_bool&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;&lt;multifile&gt;&apos;: {}},
  &quot;&lt;class &apos;configparser.ConfigParser&apos;&gt;&quot;: {&apos;.cfg&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_config&gt;&apos;]},
  &apos;.csv&apos;: {},
  &apos;.ini&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_config&gt;&apos;]},
  &apos;.json&apos;: {},
  &apos;.properties&apos;: {},
  &apos;.pyc&apos;: {&apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &apos;.txt&apos;: {&apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;constructor_with_str_arg&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &apos;.xls&apos;: {},
  &apos;.xlsm&apos;: {},
  &apos;.xlsx&apos;: {},
  &apos;.yaml&apos;: {&apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;.yml&apos;: {&apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;&lt;multifile&gt;&apos;: {}},
  &quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;.cfg&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
  &apos;2_approx_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;]},
  &apos;.csv&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_df_or_series_from_csv&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
  &apos;.ini&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
  &apos;2_approx_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;]},
  &apos;.json&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dict_or_list_from_json&gt;&apos;]},
  &apos;.properties&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dict_from_properties&gt;&apos;]},
  &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
  &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dict_from_properties&gt;&apos;,
  &apos;$&lt;read_df_or_series_from_csv&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;constructor_with_str_arg&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &apos;.xls&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
  &apos;.xlsm&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
  &apos;.xlsx&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
  &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
  &apos;2_approx_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
  &apos;2_approx_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;&lt;multifile&gt;&apos;: {&apos;2_approx_match&apos;: [&apos;Multifile Collection &apos;
  &apos;parser (parsyfiles &apos;
  &apos;defaults)&apos;]}},
  &quot;&lt;class &apos;float&apos;&gt;&quot;: {&apos;.cfg&apos;: {},
  &apos;.csv&apos;: {},
  &apos;.ini&apos;: {},
  &apos;.json&apos;: {},
  &apos;.properties&apos;: {},
  &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  -                                                 &apos;&lt;str_to_float&gt;$&apos;,
  ?                                                   ^^^
  +                                                 &apos;&lt;bool_to_float&gt;$&apos;,
  ?                                                   ^^^^
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;int_to_float&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  -                                                 &apos;&lt;bool_to_float&gt;$&apos;],
  ?                                                   ^^^^
  +                                                 &apos;&lt;str_to_float&gt;$&apos;],
  ?                                                   ^^^
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;str_to_float&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  -                                                 &apos;-&gt; &lt;str_to_float&gt;$&apos;,
  ?                                                      ^^^
  +                                                 &apos;-&gt; &lt;bool_to_float&gt;$&apos;,
  ?                                                      ^^^^
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  &apos;-&gt; &lt;int_to_float&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  -                                                 &apos;-&gt; &lt;bool_to_float&gt;$&apos;],
  ?                                                      ^^^^
  +                                                 &apos;-&gt; &lt;str_to_float&gt;$&apos;],
  ?                                                      ^^^
  &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &apos;.xls&apos;: {},
  &apos;.xlsm&apos;: {},
  &apos;.xlsx&apos;: {},
  &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                  &apos;&lt;str_to_float&gt;$&apos;,
  ?                                                    ^^^
  +                                                  &apos;&lt;bool_to_float&gt;$&apos;,
  ?                                                    ^^^^
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;int_to_float&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                  &apos;&lt;bool_to_float&gt;$&apos;],
  ?                                                    ^^^^
  +                                                  &apos;&lt;str_to_float&gt;$&apos;],
  ?                                                    ^^^
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                 &apos;&lt;str_to_float&gt;$&apos;,
  ?                                                   ^^^
  +                                                 &apos;&lt;bool_to_float&gt;$&apos;,
  ?                                                   ^^^^
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;int_to_float&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                 &apos;&lt;bool_to_float&gt;$&apos;],
  ?                                                   ^^^^
  +                                                 &apos;&lt;str_to_float&gt;$&apos;],
  ?                                                   ^^^
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;&lt;multifile&gt;&apos;: {}},
  &quot;&lt;class &apos;int&apos;&gt;&quot;: {&apos;.cfg&apos;: {},
  &apos;.csv&apos;: {},
  &apos;.ini&apos;: {},
  &apos;.json&apos;: {},
  &apos;.properties&apos;: {},
  &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  +                                               &apos;&lt;bool_to_int&gt;$&apos;,
  +                                               &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;float_to_int&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  -                                               &apos;&lt;str_to_int&gt;$&apos;,
  +                                               &apos;&lt;str_to_int&gt;$&apos;],
  ?                                                              +
  -                                               &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  -                                               &apos;&lt;bool_to_int&gt;$&apos;],
  &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  -                                                &apos;&lt;str_to_bool&gt;$&apos;,
  ?                                                  ^ -
  +                                                &apos;&lt;int_to_bool&gt;$&apos;,
  ?                                                  ^^
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  -                                                &apos;&lt;int_to_bool&gt;$&apos;],
  ?                                                  ^^
  +                                                &apos;&lt;str_to_bool&gt;$&apos;],
  ?                                                  ^ +
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;str_to_int&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  +                                               &apos;-&gt; &lt;bool_to_int&gt;$&apos;,
  +                                               &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  +                                               &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  &apos;-&gt; &lt;float_to_int&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  -                                               &apos;-&gt; &lt;str_to_int&gt;$&apos;,
  +                                               &apos;-&gt; &lt;str_to_int&gt;$&apos;],
  ?                                                                 +
  -                                               &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  -                                               &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  -                                               &apos;-&gt; &lt;bool_to_int&gt;$&apos;],
  &apos;2_approx_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;str_to_bool&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  &apos;-&gt; &lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  -                                                &apos;-&gt; &lt;str_to_bool&gt;$&apos;,
  ?                                                     ^ -
  +                                                &apos;-&gt; &lt;int_to_bool&gt;$&apos;,
  ?                                                     ^^
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  -                                                &apos;-&gt; &lt;int_to_bool&gt;$&apos;],
  ?                                                     ^^
  +                                                &apos;-&gt; &lt;str_to_bool&gt;$&apos;],
  ?                                                     ^ +
  &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &apos;.xls&apos;: {},
  &apos;.xlsm&apos;: {},
  &apos;.xlsx&apos;: {},
  &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  +                                                &apos;&lt;bool_to_int&gt;$&apos;,
  +                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;float_to_int&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                &apos;&lt;str_to_int&gt;$&apos;,
  +                                                &apos;&lt;str_to_int&gt;$&apos;],
  ?                                                               +
  -                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                &apos;&lt;bool_to_int&gt;$&apos;],
  &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                 &apos;&lt;str_to_bool&gt;$&apos;,
  ?                                                   ^ -
  +                                                 &apos;&lt;int_to_bool&gt;$&apos;,
  ?                                                   ^^
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                 &apos;&lt;int_to_bool&gt;$&apos;],
  ?                                                   ^^
  +                                                 &apos;&lt;str_to_bool&gt;$&apos;],
  ?                                                   ^ +
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  +                                               &apos;&lt;bool_to_int&gt;$&apos;,
  +                                               &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;float_to_int&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                               &apos;&lt;str_to_int&gt;$&apos;,
  +                                               &apos;&lt;str_to_int&gt;$&apos;],
  ?                                                              +
  -                                               &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                               &apos;&lt;bool_to_int&gt;$&apos;],
  &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;float_to_bool&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                &apos;&lt;str_to_bool&gt;$&apos;,
  -                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                &apos;&lt;int_to_bool&gt;$&apos;],
  ?                                                                -
  +                                                &apos;&lt;int_to_bool&gt;$&apos;,
  +                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  +                                                &apos;&lt;str_to_bool&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;&lt;multifile&gt;&apos;: {}},
  &quot;&lt;class &apos;list&apos;&gt;&quot;: {&apos;.cfg&apos;: {},
  &apos;.csv&apos;: {},
  &apos;.ini&apos;: {},
  &apos;.json&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dict_or_list_from_json&gt;&apos;]},
  &apos;.properties&apos;: {},
  &apos;.pyc&apos;: {&apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &apos;.txt&apos;: {&apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;constructor_with_str_arg&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &apos;.xls&apos;: {},
  &apos;.xlsm&apos;: {},
  &apos;.xlsx&apos;: {},
  &apos;.yaml&apos;: {&apos;2_approx_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;.yml&apos;: {&apos;2_approx_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;&lt;multifile&gt;&apos;: {&apos;2_approx_match&apos;: [&apos;Multifile Collection &apos;
  &apos;parser (parsyfiles &apos;
  &apos;defaults)&apos;]}},
  &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;.cfg&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;]},
  &apos;.csv&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_df_or_series_from_csv&gt;&apos;]},
  &apos;.ini&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;]},
  &apos;.json&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;]},
  &apos;.properties&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_from_properties&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;]},
  &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_df_or_series_from_csv&gt;&apos;,
  &apos;$&lt;read_dict_from_properties&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;constructor_with_str_arg&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &apos;.xls&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dataframe_from_xls&gt;&apos;]},
  &apos;.xlsm&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dataframe_from_xls&gt;&apos;]},
  &apos;.xlsx&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dataframe_from_xls&gt;&apos;]},
  &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_collection_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_collection_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;&lt;multifile&gt;&apos;: {}},
  &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;.cfg&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
  &apos;.csv&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_df_or_series_from_csv&gt;&apos;]},
  &apos;.ini&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
  &apos;.json&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
  &apos;.properties&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_from_properties&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
  &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_df_or_series_from_csv&gt;&apos;,
  &apos;$&lt;read_dict_from_properties&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;constructor_with_str_arg&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &apos;.xls&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
  &apos;.xlsm&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
  &apos;.xlsx&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
  &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_collection_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_collection_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_df&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;&lt;multifile&gt;&apos;: {}},
  &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;.cfg&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;,
  &apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_of_dict_to_object&gt;$&apos;,
  &apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]},
  &apos;.csv&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_df_or_series_from_csv&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]},
  &apos;.ini&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;,
  &apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_of_dict_to_object&gt;$&apos;,
  &apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]},
  &apos;.json&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]},
  &apos;.properties&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_from_properties&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]},
  &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_from_properties&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;constructor_with_str_arg&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;,
  &apos;$&lt;read_df_or_series_from_csv&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]},
  &apos;.xls&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]},
  &apos;.xlsm&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]},
  &apos;.xlsx&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
  &apos;-&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]},
  &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;,
  &apos;$&lt;read_collection_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]},
  &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;,
  &apos;$&lt;read_collection_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;dict_to_object&gt;$&apos;]},
  &apos;&lt;multifile&gt;&apos;: {&apos;1_exact_match&apos;: [&apos;Multifile &apos;
  &apos;Object &apos;
  &apos;parser &apos;
  &apos;(parsyfiles &apos;
  &apos;defaults)&apos;]}},
  &quot;&lt;class &apos;str&apos;&gt;&quot;: {&apos;.cfg&apos;: {},
  &apos;.csv&apos;: {},
  &apos;.ini&apos;: {},
  &apos;.json&apos;: {},
  &apos;.properties&apos;: {},
  &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  +                                               &apos;&lt;bool_to_string&gt;$&apos;,
  +                                               &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;float_to_string&gt;$&apos;,
  -                                               &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  -                                               &apos;&lt;bool_to_string&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;int_to_string&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_str_from_txt&gt;&apos;]},
  &apos;.xls&apos;: {},
  &apos;.xlsm&apos;: {},
  &apos;.xlsx&apos;: {},
  &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  +                                                &apos;&lt;bool_to_string&gt;$&apos;,
  +                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;float_to_string&gt;$&apos;,
  -                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                                &apos;&lt;bool_to_string&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;int_to_string&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  +                                               &apos;&lt;bool_to_string&gt;$&apos;,
  +                                               &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;float_to_string&gt;$&apos;,
  -                                               &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  -                                               &apos;&lt;bool_to_string&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;int_to_string&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;&lt;multifile&gt;&apos;: {}},
  &apos;parsyfiles.plugins_base.support_for_collections.DictOfDict&apos;: {&apos;.cfg&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;]},
  &apos;.csv&apos;: {},
  &apos;.ini&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;]},
  &apos;.json&apos;: {},
  &apos;.properties&apos;: {},
  &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &apos;.txt&apos;: {&apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;constructor_with_str_arg&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &apos;.xls&apos;: {},
  &apos;.xlsm&apos;: {},
  &apos;.xlsx&apos;: {},
  &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
  &apos;=&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;&lt;multifile&gt;&apos;: {}},
  &apos;typing.Dict&apos;: {&apos;.cfg&apos;: {&apos;2_approx_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
  &apos;$&lt;read_config&gt; =&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;]},
  &apos;.csv&apos;: {&apos;2_approx_match&apos;: [&apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
  &apos;.ini&apos;: {&apos;2_approx_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
  &apos;$&lt;read_config&gt; =&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;]},
  &apos;.json&apos;: {&apos;2_approx_match&apos;: [&apos;&lt;read_dict_or_list_from_json&gt;&apos;]},
  &apos;.properties&apos;: {&apos;2_approx_match&apos;: [&apos;&lt;read_dict_from_properties&gt;&apos;]},
  &apos;.pyc&apos;: {&apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &apos;.txt&apos;: {&apos;2_approx_match&apos;: [&apos;&lt;read_dict_from_properties&gt;&apos;,
  &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;constructor_with_str_arg&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &apos;.xls&apos;: {&apos;2_approx_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
  &apos;.xlsm&apos;: {&apos;2_approx_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
  &apos;.xlsx&apos;: {&apos;2_approx_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
  &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
  &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
  &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;&lt;multifile&gt;&apos;: {&apos;1_exact_match&apos;: [&apos;Multifile Collection &apos;
  &apos;parser (parsyfiles &apos;
  &apos;defaults)&apos;]}},
  &apos;typing.List&apos;: {&apos;.cfg&apos;: {},
  &apos;.csv&apos;: {},
  &apos;.ini&apos;: {},
  &apos;.json&apos;: {&apos;2_approx_match&apos;: [&apos;&lt;read_dict_or_list_from_json&gt;&apos;]},
  &apos;.properties&apos;: {},
  &apos;.pyc&apos;: {&apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &apos;.txt&apos;: {&apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;constructor_with_str_arg&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &apos;.xls&apos;: {},
  &apos;.xlsm&apos;: {},
  &apos;.xlsx&apos;: {},
  &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;&lt;multifile&gt;&apos;: {&apos;1_exact_match&apos;: [&apos;Multifile Collection &apos;
  &apos;parser (parsyfiles &apos;
  &apos;defaults)&apos;]}},
  &apos;typing.Set&apos;: {&apos;.cfg&apos;: {},
  &apos;.csv&apos;: {},
  &apos;.ini&apos;: {},
  &apos;.json&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; =&gt; &apos;
  &apos;&lt;list_to_set&gt;$&apos;]},
  &apos;.properties&apos;: {},
  &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;list_to_set&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  &apos;-&gt; &lt;list_to_set&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;constructor_with_str_arg&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &apos;.xls&apos;: {},
  &apos;.xlsm&apos;: {},
  &apos;.xlsx&apos;: {},
  &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;list_to_set&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;list_to_set&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;&lt;multifile&gt;&apos;: {&apos;1_exact_match&apos;: [&apos;Multifile Collection parser &apos;
  &apos;(parsyfiles defaults)&apos;]}},
  &apos;typing.Tuple&apos;: {&apos;.cfg&apos;: {},
  &apos;.csv&apos;: {},
  &apos;.ini&apos;: {},
  &apos;.json&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; &apos;
  &apos;=&gt; &lt;list_to_tuple&gt;$&apos;]},
  &apos;.properties&apos;: {},
  &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
  &apos;&lt;list_to_tuple&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
  &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
  &apos;-&gt; &lt;list_to_tuple&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;constructor_with_str_arg&gt;$&apos;,
  &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
  &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
  &apos;.xls&apos;: {},
  &apos;.xlsm&apos;: {},
  &apos;.xlsx&apos;: {},
  &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;list_to_tuple&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
  &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
  &apos;&lt;list_to_tuple&gt;$&apos;],
  &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
  &apos;&lt;multifile&gt;&apos;: {&apos;1_exact_match&apos;: [&apos;Multifile Collection &apos;
  &apos;parser (parsyfiles &apos;
  &apos;defaults)&apos;]}}}">root_parser = parsyfiles defaults

    def test_print_and_get_capabilities_by_type(root_parser: RootParser):
        &quot;&quot;&quot; Tests that the declared capabilities by type are correct &quot;&quot;&quot;
    
        c = root_parser.get_capabilities_by_type(strict_type_matching=False)
        print(&apos;\n&apos; + str(len(c)) + &apos; Root parser capabilities by type:&apos;)
        assert len(c) == 15
    
        cdict = to_str_coll(c)
    
        # dump(cdict, &apos;reference_capabilities_by_type.json&apos;)
&gt;       assert cdict == load(&apos;reference_capabilities_by_type.json&apos;)
E       assert {&quot;&lt;class &apos;boo...{}, ...}, ...} == {&quot;&lt;class &apos;bool...{}, ...}, ...}
E         Omitting 11 identical items, use -vv to show
E         Differing items:
E         {&quot;&lt;class &apos;str&apos;&gt;&quot;: {&apos;.cfg&apos;: {}, &apos;.csv&apos;: {}, &apos;.ini&apos;: {}, &apos;.json&apos;: {}, ...}} != {&quot;&lt;class &apos;str&apos;&gt;&quot;: {&apos;.cfg&apos;: {}, &apos;.csv&apos;: {}, &apos;.ini&apos;: {}, &apos;.json&apos;: {}, ...}}
E         {&quot;&lt;class &apos;float&apos;&gt;&quot;: {&apos;.cfg&apos;: {}, &apos;.csv&apos;: {}, &apos;.ini&apos;: {}, &apos;.json&apos;: {}, ...}} != {&quot;&lt;class &apos;float&apos;&gt;&quot;: {&apos;.cfg&apos;: {}, &apos;.csv&apos;: {}, &apos;.ini&apos;: {}, &apos;.json&apos;: {}, ...}}
E         {&quot;&lt;class &apos;int&apos;&gt;&quot;: {&apos;.cfg&apos;: {}, &apos;.csv&apos;: {}, &apos;.ini&apos;: {}, &apos;.json&apos;: {}, ...}} != {&quot;&lt;class &apos;int&apos;&gt;&quot;: {&apos;.cfg&apos;: {}, &apos;.csv&apos;: {}, &apos;.ini&apos;: {}, &apos;.json&apos;: {}, ...}}
E         {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;.cfg&apos;: {}, &apos;.csv&apos;: {}, &apos;.ini&apos;: {}, &apos;.json&apos;: {}, ...}} != {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;.cfg&apos;: {}, &apos;.csv&apos;: {}, &apos;.ini&apos;: {}, &apos;.json&apos;: {}, ...}}
E         Full diff:
E         {&quot;&lt;class &apos;bool&apos;&gt;&quot;: {&apos;.cfg&apos;: {},
E         &apos;.csv&apos;: {},
E         &apos;.ini&apos;: {},
E         &apos;.json&apos;: {},
E         &apos;.properties&apos;: {},
E         &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         -                                                &apos;&lt;str_to_bool&gt;$&apos;,
E         ?                                                  ^ -
E         +                                                &apos;&lt;int_to_bool&gt;$&apos;,
E         ?                                                  ^^
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         -                                                &apos;&lt;int_to_bool&gt;$&apos;],
E         ?                                                  ^^
E         +                                                &apos;&lt;str_to_bool&gt;$&apos;],
E         ?                                                  ^ +
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         &apos;-&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         -                                                &apos;-&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                                     ^ -
E         +                                                &apos;-&gt; &lt;int_to_bool&gt;$&apos;,
E         ?                                                     ^^
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         -                                                &apos;-&gt; &lt;int_to_bool&gt;$&apos;],
E         ?                                                     ^^
E         +                                                &apos;-&gt; &lt;str_to_bool&gt;$&apos;],
E         ?                                                     ^ +
E         &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &apos;.xls&apos;: {},
E         &apos;.xlsm&apos;: {},
E         &apos;.xlsx&apos;: {},
E         &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                 &apos;&lt;str_to_bool&gt;$&apos;,
E         ?                                                   ^ -
E         +                                                 &apos;&lt;int_to_bool&gt;$&apos;,
E         ?                                                   ^^
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                 &apos;&lt;int_to_bool&gt;$&apos;],
E         ?                                                   ^^
E         +                                                 &apos;&lt;str_to_bool&gt;$&apos;],
E         ?                                                   ^ +
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                &apos;&lt;str_to_bool&gt;$&apos;,
E         -                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                &apos;&lt;int_to_bool&gt;$&apos;],
E         ?                                                                -
E         +                                                &apos;&lt;int_to_bool&gt;$&apos;,
E         +                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         +                                                &apos;&lt;str_to_bool&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;&lt;multifile&gt;&apos;: {}},
E         &quot;&lt;class &apos;configparser.ConfigParser&apos;&gt;&quot;: {&apos;.cfg&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_config&gt;&apos;]},
E         &apos;.csv&apos;: {},
E         &apos;.ini&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_config&gt;&apos;]},
E         &apos;.json&apos;: {},
E         &apos;.properties&apos;: {},
E         &apos;.pyc&apos;: {&apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &apos;.txt&apos;: {&apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;constructor_with_str_arg&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &apos;.xls&apos;: {},
E         &apos;.xlsm&apos;: {},
E         &apos;.xlsx&apos;: {},
E         &apos;.yaml&apos;: {&apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;.yml&apos;: {&apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;&lt;multifile&gt;&apos;: {}},
E         &quot;&lt;class &apos;dict&apos;&gt;&quot;: {&apos;.cfg&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
E         &apos;2_approx_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;]},
E         &apos;.csv&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_df_or_series_from_csv&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
E         &apos;.ini&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
E         &apos;2_approx_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;]},
E         &apos;.json&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dict_or_list_from_json&gt;&apos;]},
E         &apos;.properties&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dict_from_properties&gt;&apos;]},
E         &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
E         &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dict_from_properties&gt;&apos;,
E         &apos;$&lt;read_df_or_series_from_csv&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;constructor_with_str_arg&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &apos;.xls&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
E         &apos;.xlsm&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
E         &apos;.xlsx&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
E         &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
E         &apos;2_approx_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;],
E         &apos;2_approx_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;&lt;multifile&gt;&apos;: {&apos;2_approx_match&apos;: [&apos;Multifile Collection &apos;
E         &apos;parser (parsyfiles &apos;
E         &apos;defaults)&apos;]}},
E         &quot;&lt;class &apos;float&apos;&gt;&quot;: {&apos;.cfg&apos;: {},
E         &apos;.csv&apos;: {},
E         &apos;.ini&apos;: {},
E         &apos;.json&apos;: {},
E         &apos;.properties&apos;: {},
E         &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         -                                                 &apos;&lt;str_to_float&gt;$&apos;,
E         ?                                                   ^^^
E         +                                                 &apos;&lt;bool_to_float&gt;$&apos;,
E         ?                                                   ^^^^
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         -                                                 &apos;&lt;bool_to_float&gt;$&apos;],
E         ?                                                   ^^^^
E         +                                                 &apos;&lt;str_to_float&gt;$&apos;],
E         ?                                                   ^^^
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;str_to_float&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         -                                                 &apos;-&gt; &lt;str_to_float&gt;$&apos;,
E         ?                                                      ^^^
E         +                                                 &apos;-&gt; &lt;bool_to_float&gt;$&apos;,
E         ?                                                      ^^^^
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         &apos;-&gt; &lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         -                                                 &apos;-&gt; &lt;bool_to_float&gt;$&apos;],
E         ?                                                      ^^^^
E         +                                                 &apos;-&gt; &lt;str_to_float&gt;$&apos;],
E         ?                                                      ^^^
E         &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &apos;.xls&apos;: {},
E         &apos;.xlsm&apos;: {},
E         &apos;.xlsx&apos;: {},
E         &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                  &apos;&lt;str_to_float&gt;$&apos;,
E         ?                                                    ^^^
E         +                                                  &apos;&lt;bool_to_float&gt;$&apos;,
E         ?                                                    ^^^^
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                  &apos;&lt;bool_to_float&gt;$&apos;],
E         ?                                                    ^^^^
E         +                                                  &apos;&lt;str_to_float&gt;$&apos;],
E         ?                                                    ^^^
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                 &apos;&lt;str_to_float&gt;$&apos;,
E         ?                                                   ^^^
E         +                                                 &apos;&lt;bool_to_float&gt;$&apos;,
E         ?                                                   ^^^^
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;int_to_float&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                 &apos;&lt;bool_to_float&gt;$&apos;],
E         ?                                                   ^^^^
E         +                                                 &apos;&lt;str_to_float&gt;$&apos;],
E         ?                                                   ^^^
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;&lt;multifile&gt;&apos;: {}},
E         &quot;&lt;class &apos;int&apos;&gt;&quot;: {&apos;.cfg&apos;: {},
E         &apos;.csv&apos;: {},
E         &apos;.ini&apos;: {},
E         &apos;.json&apos;: {},
E         &apos;.properties&apos;: {},
E         &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         +                                               &apos;&lt;bool_to_int&gt;$&apos;,
E         +                                               &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;float_to_int&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         -                                               &apos;&lt;str_to_int&gt;$&apos;,
E         +                                               &apos;&lt;str_to_int&gt;$&apos;],
E         ?                                                              +
E         -                                               &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         -                                               &apos;&lt;bool_to_int&gt;$&apos;],
E         &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         -                                                &apos;&lt;str_to_bool&gt;$&apos;,
E         ?                                                  ^ -
E         +                                                &apos;&lt;int_to_bool&gt;$&apos;,
E         ?                                                  ^^
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         -                                                &apos;&lt;int_to_bool&gt;$&apos;],
E         ?                                                  ^^
E         +                                                &apos;&lt;str_to_bool&gt;$&apos;],
E         ?                                                  ^ +
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;str_to_int&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         +                                               &apos;-&gt; &lt;bool_to_int&gt;$&apos;,
E         +                                               &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         +                                               &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         &apos;-&gt; &lt;float_to_int&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         -                                               &apos;-&gt; &lt;str_to_int&gt;$&apos;,
E         +                                               &apos;-&gt; &lt;str_to_int&gt;$&apos;],
E         ?                                                                 +
E         -                                               &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         -                                               &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         -                                               &apos;-&gt; &lt;bool_to_int&gt;$&apos;],
E         &apos;2_approx_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;str_to_bool&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         &apos;-&gt; &lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         -                                                &apos;-&gt; &lt;str_to_bool&gt;$&apos;,
E         ?                                                     ^ -
E         +                                                &apos;-&gt; &lt;int_to_bool&gt;$&apos;,
E         ?                                                     ^^
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         -                                                &apos;-&gt; &lt;int_to_bool&gt;$&apos;],
E         ?                                                     ^^
E         +                                                &apos;-&gt; &lt;str_to_bool&gt;$&apos;],
E         ?                                                     ^ +
E         &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &apos;.xls&apos;: {},
E         &apos;.xlsm&apos;: {},
E         &apos;.xlsx&apos;: {},
E         &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         +                                                &apos;&lt;bool_to_int&gt;$&apos;,
E         +                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;float_to_int&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                &apos;&lt;str_to_int&gt;$&apos;,
E         +                                                &apos;&lt;str_to_int&gt;$&apos;],
E         ?                                                               +
E         -                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                &apos;&lt;bool_to_int&gt;$&apos;],
E         &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                 &apos;&lt;str_to_bool&gt;$&apos;,
E         ?                                                   ^ -
E         +                                                 &apos;&lt;int_to_bool&gt;$&apos;,
E         ?                                                   ^^
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                 &apos;&lt;int_to_bool&gt;$&apos;],
E         ?                                                   ^^
E         +                                                 &apos;&lt;str_to_bool&gt;$&apos;],
E         ?                                                   ^ +
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         +                                               &apos;&lt;bool_to_int&gt;$&apos;,
E         +                                               &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;float_to_int&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                               &apos;&lt;str_to_int&gt;$&apos;,
E         +                                               &apos;&lt;str_to_int&gt;$&apos;],
E         ?                                                              +
E         -                                               &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                               &apos;&lt;bool_to_int&gt;$&apos;],
E         &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;float_to_bool&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                &apos;&lt;str_to_bool&gt;$&apos;,
E         -                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                &apos;&lt;int_to_bool&gt;$&apos;],
E         ?                                                                -
E         +                                                &apos;&lt;int_to_bool&gt;$&apos;,
E         +                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         +                                                &apos;&lt;str_to_bool&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;&lt;multifile&gt;&apos;: {}},
E         &quot;&lt;class &apos;list&apos;&gt;&quot;: {&apos;.cfg&apos;: {},
E         &apos;.csv&apos;: {},
E         &apos;.ini&apos;: {},
E         &apos;.json&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dict_or_list_from_json&gt;&apos;]},
E         &apos;.properties&apos;: {},
E         &apos;.pyc&apos;: {&apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &apos;.txt&apos;: {&apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;constructor_with_str_arg&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &apos;.xls&apos;: {},
E         &apos;.xlsm&apos;: {},
E         &apos;.xlsx&apos;: {},
E         &apos;.yaml&apos;: {&apos;2_approx_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;.yml&apos;: {&apos;2_approx_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;&lt;multifile&gt;&apos;: {&apos;2_approx_match&apos;: [&apos;Multifile Collection &apos;
E         &apos;parser (parsyfiles &apos;
E         &apos;defaults)&apos;]}},
E         &quot;&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;&quot;: {&apos;.cfg&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;]},
E         &apos;.csv&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_df_or_series_from_csv&gt;&apos;]},
E         &apos;.ini&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;]},
E         &apos;.json&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;]},
E         &apos;.properties&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_from_properties&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;]},
E         &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_df_or_series_from_csv&gt;&apos;,
E         &apos;$&lt;read_dict_from_properties&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;constructor_with_str_arg&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &apos;.xls&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dataframe_from_xls&gt;&apos;]},
E         &apos;.xlsm&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dataframe_from_xls&gt;&apos;]},
E         &apos;.xlsx&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_dataframe_from_xls&gt;&apos;]},
E         &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_collection_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_collection_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;&lt;multifile&gt;&apos;: {}},
E         &quot;&lt;class &apos;pandas.core.series.Series&apos;&gt;&quot;: {&apos;.cfg&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
E         &apos;.csv&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_df_or_series_from_csv&gt;&apos;]},
E         &apos;.ini&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
E         &apos;.json&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
E         &apos;.properties&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_from_properties&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
E         &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_df_or_series_from_csv&gt;&apos;,
E         &apos;$&lt;read_dict_from_properties&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;constructor_with_str_arg&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &apos;.xls&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
E         &apos;.xlsm&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
E         &apos;.xlsx&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;]},
E         &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_collection_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_collection_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_df&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_series&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;&lt;multifile&gt;&apos;: {}},
E         &quot;&lt;class &apos;parsyfiles.converting_core.AnyObject&apos;&gt;&quot;: {&apos;.cfg&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;,
E         &apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_of_dict_to_object&gt;$&apos;,
E         &apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]},
E         &apos;.csv&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_df_or_series_from_csv&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]},
E         &apos;.ini&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;,
E         &apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_of_dict_to_object&gt;$&apos;,
E         &apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]},
E         &apos;.json&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]},
E         &apos;.properties&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_from_properties&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]},
E         &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_from_properties&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;constructor_with_str_arg&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;,
E         &apos;$&lt;read_df_or_series_from_csv&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]},
E         &apos;.xls&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]},
E         &apos;.xlsm&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]},
E         &apos;.xlsx&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt; &apos;
E         &apos;-&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]},
E         &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;,
E         &apos;$&lt;read_collection_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]},
E         &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;,
E         &apos;$&lt;read_collection_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;dict_to_object&gt;$&apos;]},
E         &apos;&lt;multifile&gt;&apos;: {&apos;1_exact_match&apos;: [&apos;Multifile &apos;
E         &apos;Object &apos;
E         &apos;parser &apos;
E         &apos;(parsyfiles &apos;
E         &apos;defaults)&apos;]}},
E         &quot;&lt;class &apos;str&apos;&gt;&quot;: {&apos;.cfg&apos;: {},
E         &apos;.csv&apos;: {},
E         &apos;.ini&apos;: {},
E         &apos;.json&apos;: {},
E         &apos;.properties&apos;: {},
E         &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         +                                               &apos;&lt;bool_to_string&gt;$&apos;,
E         +                                               &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;float_to_string&gt;$&apos;,
E         -                                               &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         -                                               &apos;&lt;bool_to_string&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;int_to_string&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_str_from_txt&gt;&apos;]},
E         &apos;.xls&apos;: {},
E         &apos;.xlsm&apos;: {},
E         &apos;.xlsx&apos;: {},
E         &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         +                                                &apos;&lt;bool_to_string&gt;$&apos;,
E         +                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;float_to_string&gt;$&apos;,
E         -                                                &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                                &apos;&lt;bool_to_string&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;int_to_string&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         +                                               &apos;&lt;bool_to_string&gt;$&apos;,
E         +                                               &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;float_to_string&gt;$&apos;,
E         -                                               &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         -                                               &apos;&lt;bool_to_string&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;int_to_string&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;&lt;multifile&gt;&apos;: {}},
E         &apos;parsyfiles.plugins_base.support_for_collections.DictOfDict&apos;: {&apos;.cfg&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;]},
E         &apos;.csv&apos;: {},
E         &apos;.ini&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_config&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;]},
E         &apos;.json&apos;: {},
E         &apos;.properties&apos;: {},
E         &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &apos;.txt&apos;: {&apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;constructor_with_str_arg&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &apos;.xls&apos;: {},
E         &apos;.xlsm&apos;: {},
E         &apos;.xlsx&apos;: {},
E         &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; &apos;
E         &apos;=&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;&lt;multifile&gt;&apos;: {}},
E         &apos;typing.Dict&apos;: {&apos;.cfg&apos;: {&apos;2_approx_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
E         &apos;$&lt;read_config&gt; =&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;]},
E         &apos;.csv&apos;: {&apos;2_approx_match&apos;: [&apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
E         &apos;.ini&apos;: {&apos;2_approx_match&apos;: [&apos;$&lt;read_config&gt; =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
E         &apos;$&lt;read_config&gt; =&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;]},
E         &apos;.json&apos;: {&apos;2_approx_match&apos;: [&apos;&lt;read_dict_or_list_from_json&gt;&apos;]},
E         &apos;.properties&apos;: {&apos;2_approx_match&apos;: [&apos;&lt;read_dict_from_properties&gt;&apos;]},
E         &apos;.pyc&apos;: {&apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &apos;.txt&apos;: {&apos;2_approx_match&apos;: [&apos;&lt;read_dict_from_properties&gt;&apos;,
E         &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;constructor_with_str_arg&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &apos;.xls&apos;: {&apos;2_approx_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
E         &apos;.xlsm&apos;: {&apos;2_approx_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
E         &apos;.xlsx&apos;: {&apos;2_approx_match&apos;: [&apos;$&lt;read_dataframe_from_xls&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;]},
E         &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
E         &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
E         &apos;2_approx_match&apos;: [&apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;single_row_or_col_df_to_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;merge_all_config_sections_into_a_single_dict&gt;$&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;config_to_dict_of_dict&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;&lt;multifile&gt;&apos;: {&apos;1_exact_match&apos;: [&apos;Multifile Collection &apos;
E         &apos;parser (parsyfiles &apos;
E         &apos;defaults)&apos;]}},
E         &apos;typing.List&apos;: {&apos;.cfg&apos;: {},
E         &apos;.csv&apos;: {},
E         &apos;.ini&apos;: {},
E         &apos;.json&apos;: {&apos;2_approx_match&apos;: [&apos;&lt;read_dict_or_list_from_json&gt;&apos;]},
E         &apos;.properties&apos;: {},
E         &apos;.pyc&apos;: {&apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &apos;.txt&apos;: {&apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;constructor_with_str_arg&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &apos;.xls&apos;: {},
E         &apos;.xlsm&apos;: {},
E         &apos;.xlsx&apos;: {},
E         &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;&lt;multifile&gt;&apos;: {&apos;1_exact_match&apos;: [&apos;Multifile Collection &apos;
E         &apos;parser (parsyfiles &apos;
E         &apos;defaults)&apos;]}},
E         &apos;typing.Set&apos;: {&apos;.cfg&apos;: {},
E         &apos;.csv&apos;: {},
E         &apos;.ini&apos;: {},
E         &apos;.json&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; =&gt; &apos;
E         &apos;&lt;list_to_set&gt;$&apos;]},
E         &apos;.properties&apos;: {},
E         &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;list_to_set&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         &apos;-&gt; &lt;list_to_set&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;constructor_with_str_arg&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &apos;.xls&apos;: {},
E         &apos;.xlsm&apos;: {},
E         &apos;.xlsx&apos;: {},
E         &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;list_to_set&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;list_to_set&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;&lt;multifile&gt;&apos;: {&apos;1_exact_match&apos;: [&apos;Multifile Collection parser &apos;
E         &apos;(parsyfiles defaults)&apos;]}},
E         &apos;typing.Tuple&apos;: {&apos;.cfg&apos;: {},
E         &apos;.csv&apos;: {},
E         &apos;.ini&apos;: {},
E         &apos;.json&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_dict_or_list_from_json&gt; &apos;
E         &apos;=&gt; &lt;list_to_tuple&gt;$&apos;]},
E         &apos;.properties&apos;: {},
E         &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_object_from_pickle&gt; =&gt; &apos;
E         &apos;&lt;list_to_tuple&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_pickle&gt;&apos;]},
E         &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt; &apos;
E         &apos;-&gt; &lt;list_to_tuple&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;constructor_with_str_arg&gt;$&apos;,
E         &apos;$&lt;read_str_from_txt&gt; =&gt; &apos;
E         &apos;&lt;base64_ascii_str_pickle_to_object&gt;$&apos;]},
E         &apos;.xls&apos;: {},
E         &apos;.xlsm&apos;: {},
E         &apos;.xlsx&apos;: {},
E         &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;list_to_tuple&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&apos;&lt;read_collection_from_yaml&gt;&apos;,
E         &apos;$&lt;read_object_from_yaml&gt; =&gt; &apos;
E         &apos;&lt;list_to_tuple&gt;$&apos;],
E         &apos;3_generic&apos;: [&apos;&lt;read_object_from_yaml&gt;&apos;]},
E         &apos;&lt;multifile&gt;&apos;: {&apos;1_exact_match&apos;: [&apos;Multifile Collection &apos;
E         &apos;parser (parsyfiles &apos;
E         &apos;defaults)&apos;]}}}

parsyfiles/tests/combining_parsers_converters/test_default_instance.py:150: AssertionError</failure><system-out>
15 Root parser capabilities by type:
</system-out></testcase><testcase classname="parsyfiles.tests.combining_parsers_converters.test_default_instance" file="parsyfiles/tests/combining_parsers_converters/test_default_instance.py" line="154" name="test_root_parser_any" time="0.10804367065429688"><system-out>{&apos;.cfg&apos;: {&apos;1_exact_match&apos;: [$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$,
                            $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$,
                            $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.csv&apos;: {&apos;1_exact_match&apos;: [$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.ini&apos;: {&apos;1_exact_match&apos;: [$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$,
                            $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$,
                            $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.json&apos;: {&apos;1_exact_match&apos;: [$&lt;read_dict_or_list_from_json&gt; =&gt; &lt;dict_to_object&gt;$]},
 &apos;.properties&apos;: {&apos;1_exact_match&apos;: [$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$]},
 &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [&lt;read_object_from_pickle&gt;]},
 &apos;.txt&apos;: {&apos;1_exact_match&apos;: [$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$,
                            $&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$,
                            $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$,
                            $&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.xls&apos;: {&apos;1_exact_match&apos;: [$&lt;read_dataframe_from_xls&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.xlsm&apos;: {&apos;1_exact_match&apos;: [$&lt;read_dataframe_from_xls&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.xlsx&apos;: {&apos;1_exact_match&apos;: [$&lt;read_dataframe_from_xls&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [&lt;read_object_from_yaml&gt;,
                             $&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$]},
 &apos;.yml&apos;: {&apos;1_exact_match&apos;: [&lt;read_object_from_yaml&gt;,
                            $&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$]},
 &apos;&lt;multifile&gt;&apos;: {&apos;1_exact_match&apos;: [Multifile Object parser (parsyfiles defaults)]}}
</system-out></testcase><testcase classname="parsyfiles.tests.combining_parsers_converters.test_default_instance" file="parsyfiles/tests/combining_parsers_converters/test_default_instance.py" line="170" name="test_custom_parser_ok_for_subclasses" time="0.1775357723236084"><system-out>--&gt; Successfully parsed a A from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

</system-out></testcase><testcase classname="parsyfiles.tests.combining_parsers_converters.test_default_instance_creation" file="parsyfiles/tests/combining_parsers_converters/test_default_instance_creation.py" line="21" name="test_create_default_instance_with_constructor" time="2.766263484954834"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

</system-out></testcase><testcase classname="parsyfiles.tests.combining_parsers_converters.test_default_instance_creation" file="parsyfiles/tests/combining_parsers_converters/test_default_instance_creation.py" line="44" name="test_create_default_instance_through_method" time="2.8430092334747314"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/combining_parsers_converters/test_data/b64pickle-float-1.0=True

</system-out></testcase><testcase classname="parsyfiles.tests.combining_parsers_converters.test_registries.TestParserRegistry" file="parsyfiles/tests/combining_parsers_converters/test_registries.py" line="277" name="test_a_all_extensions_and_types_are_present" time="0.012562990188598633"><system-out>.
.d
.c
.cd
.b
.bd
.bc
.bcd
.a
.ad
.ac
.acd
.ab
.abd
.abc
.abcd
</system-out></testcase><testcase classname="parsyfiles.tests.combining_parsers_converters.test_registries.TestParserRegistry" file="parsyfiles/tests/combining_parsers_converters/test_registries.py" line="292" name="test_b_capabilities_equal_query_strict" time="0.5278780460357666"><system-out>.
.d
.c
.cd
.b
.bd
.bc
.bcd
.a
.ad
.ac
.acd
.ab
.abd
.abc
.abcd
Asserting (strict mode) type=D ext=.acd
Asserting (strict mode) type=AnyObject ext=.acd
Asserting (strict mode) type=C ext=.acd
Asserting (strict mode) type=B ext=.acd
Asserting (strict mode) type=A ext=.acd
Asserting (strict mode) type=D ext=.abcd
Asserting (strict mode) type=AnyObject ext=.abcd
Asserting (strict mode) type=C ext=.abcd
Asserting (strict mode) type=B ext=.abcd
Asserting (strict mode) type=A ext=.abcd
Asserting (strict mode) type=A ext=.bc
Asserting (strict mode) type=C ext=.bc
Asserting (strict mode) type=B ext=.bc
Asserting (strict mode) type=D ext=.bc
Asserting (strict mode) type=A ext=.bcd
Asserting (strict mode) type=AnyObject ext=.bcd
Asserting (strict mode) type=C ext=.bcd
Asserting (strict mode) type=B ext=.bcd
Asserting (strict mode) type=D ext=.bcd
Asserting (strict mode) type=A ext=.ac
Asserting (strict mode) type=AnyObject ext=.ac
Asserting (strict mode) type=C ext=.ac
Asserting (strict mode) type=B ext=.ac
Asserting (strict mode) type=D ext=.ac
Asserting (strict mode) type=D ext=.abd
Asserting (strict mode) type=AnyObject ext=.abd
Asserting (strict mode) type=C ext=.abd
Asserting (strict mode) type=B ext=.abd
Asserting (strict mode) type=A ext=.abd
Asserting (strict mode) type=A ext=.b
Asserting (strict mode) type=C ext=.b
Asserting (strict mode) type=B ext=.b
Asserting (strict mode) type=A ext=.cd
Asserting (strict mode) type=AnyObject ext=.cd
Asserting (strict mode) type=C ext=.cd
Asserting (strict mode) type=B ext=.cd
Asserting (strict mode) type=D ext=.cd
Asserting (strict mode) type=D ext=.bd
Asserting (strict mode) type=AnyObject ext=.bd
Asserting (strict mode) type=C ext=.bd
Asserting (strict mode) type=B ext=.bd
Asserting (strict mode) type=A ext=.bd
Asserting (strict mode) type=A ext=.c
Asserting (strict mode) type=C ext=.c
Asserting (strict mode) type=B ext=.c
Asserting (strict mode) type=D ext=.c
Asserting (strict mode) type=D ext=.ad
Asserting (strict mode) type=AnyObject ext=.ad
Asserting (strict mode) type=C ext=.ad
Asserting (strict mode) type=B ext=.ad
Asserting (strict mode) type=A ext=.ad
Asserting (strict mode) type=D ext=.d
Asserting (strict mode) type=AnyObject ext=.d
Asserting (strict mode) type=C ext=.d
Asserting (strict mode) type=A ext=.d
Asserting (strict mode) type=A ext=.a
Asserting (strict mode) type=AnyObject ext=.a
Asserting (strict mode) type=C ext=.a
Asserting (strict mode) type=B ext=.a
Asserting (strict mode) type=D ext=.a
Asserting (strict mode) type=D ext=&lt;multifile&gt;
Asserting (strict mode) type=AnyObject ext=&lt;multifile&gt;
Asserting (strict mode) type=C ext=&lt;multifile&gt;
Asserting (strict mode) type=B ext=&lt;multifile&gt;
Asserting (strict mode) type=A ext=&lt;multifile&gt;
Asserting (strict mode) type=A ext=.ab
Asserting (strict mode) type=AnyObject ext=.ab
Asserting (strict mode) type=C ext=.ab
Asserting (strict mode) type=B ext=.ab
Asserting (strict mode) type=D ext=.ab
Asserting (strict mode) type=A ext=.abc
Asserting (strict mode) type=AnyObject ext=.abc
Asserting (strict mode) type=C ext=.abc
Asserting (strict mode) type=B ext=.abc
Asserting (strict mode) type=D ext=.abc
Asserting (strict mode) type=A ext=.acd
Asserting (strict mode) type=AnyObject ext=.acd
Asserting (strict mode) type=C ext=.acd
Asserting (strict mode) type=B ext=.acd
Asserting (strict mode) type=D ext=.acd
Asserting (strict mode) type=A ext=.abcd
Asserting (strict mode) type=AnyObject ext=.abcd
Asserting (strict mode) type=C ext=.abcd
Asserting (strict mode) type=B ext=.abcd
Asserting (strict mode) type=D ext=.abcd
Asserting (strict mode) type=A ext=.bc
Asserting (strict mode) type=C ext=.bc
Asserting (strict mode) type=B ext=.bc
Asserting (strict mode) type=D ext=.bc
Asserting (strict mode) type=A ext=.bcd
Asserting (strict mode) type=AnyObject ext=.bcd
Asserting (strict mode) type=C ext=.bcd
Asserting (strict mode) type=B ext=.bcd
Asserting (strict mode) type=D ext=.bcd
Asserting (strict mode) type=A ext=.ac
Asserting (strict mode) type=AnyObject ext=.ac
Asserting (strict mode) type=C ext=.ac
Asserting (strict mode) type=B ext=.ac
Asserting (strict mode) type=D ext=.ac
Asserting (strict mode) type=A ext=.abd
Asserting (strict mode) type=AnyObject ext=.abd
Asserting (strict mode) type=C ext=.abd
Asserting (strict mode) type=B ext=.abd
Asserting (strict mode) type=D ext=.abd
Asserting (strict mode) type=A ext=.b
Asserting (strict mode) type=C ext=.b
Asserting (strict mode) type=B ext=.b
Asserting (strict mode) type=A ext=.cd
Asserting (strict mode) type=AnyObject ext=.cd
Asserting (strict mode) type=C ext=.cd
Asserting (strict mode) type=B ext=.cd
Asserting (strict mode) type=D ext=.cd
Asserting (strict mode) type=A ext=.bd
Asserting (strict mode) type=AnyObject ext=.bd
Asserting (strict mode) type=C ext=.bd
Asserting (strict mode) type=B ext=.bd
Asserting (strict mode) type=D ext=.bd
Asserting (strict mode) type=A ext=.c
Asserting (strict mode) type=C ext=.c
Asserting (strict mode) type=B ext=.c
Asserting (strict mode) type=D ext=.c
Asserting (strict mode) type=A ext=.ad
Asserting (strict mode) type=AnyObject ext=.ad
Asserting (strict mode) type=C ext=.ad
Asserting (strict mode) type=B ext=.ad
Asserting (strict mode) type=D ext=.ad
Asserting (strict mode) type=D ext=.d
Asserting (strict mode) type=AnyObject ext=.d
Asserting (strict mode) type=C ext=.d
Asserting (strict mode) type=A ext=.d
Asserting (strict mode) type=A ext=.a
Asserting (strict mode) type=AnyObject ext=.a
Asserting (strict mode) type=C ext=.a
Asserting (strict mode) type=B ext=.a
Asserting (strict mode) type=D ext=.a
Asserting (strict mode) type=A ext=&lt;multifile&gt;
Asserting (strict mode) type=AnyObject ext=&lt;multifile&gt;
Asserting (strict mode) type=C ext=&lt;multifile&gt;
Asserting (strict mode) type=B ext=&lt;multifile&gt;
Asserting (strict mode) type=D ext=&lt;multifile&gt;
Asserting (strict mode) type=A ext=.ab
Asserting (strict mode) type=AnyObject ext=.ab
Asserting (strict mode) type=C ext=.ab
Asserting (strict mode) type=B ext=.ab
Asserting (strict mode) type=D ext=.ab
Asserting (strict mode) type=A ext=.abc
Asserting (strict mode) type=AnyObject ext=.abc
Asserting (strict mode) type=C ext=.abc
Asserting (strict mode) type=B ext=.abc
Asserting (strict mode) type=D ext=.abc
Asserting (strict mode) type=A ext=.acd
Asserting (strict mode) type=AnyObject ext=.acd
Asserting (strict mode) type=C ext=.acd
Asserting (strict mode) type=B ext=.acd
Asserting (strict mode) type=D ext=.acd
Asserting (strict mode) type=A ext=.abcd
Asserting (strict mode) type=AnyObject ext=.abcd
Asserting (strict mode) type=C ext=.abcd
Asserting (strict mode) type=B ext=.abcd
Asserting (strict mode) type=D ext=.abcd
Asserting (strict mode) type=A ext=.bc
Asserting (strict mode) type=C ext=.bc
Asserting (strict mode) type=B ext=.bc
Asserting (strict mode) type=D ext=.bc
Asserting (strict mode) type=A ext=.bcd
Asserting (strict mode) type=AnyObject ext=.bcd
Asserting (strict mode) type=C ext=.bcd
Asserting (strict mode) type=B ext=.bcd
Asserting (strict mode) type=D ext=.bcd
Asserting (strict mode) type=A ext=.ac
Asserting (strict mode) type=AnyObject ext=.ac
Asserting (strict mode) type=C ext=.ac
Asserting (strict mode) type=B ext=.ac
Asserting (strict mode) type=D ext=.ac
Asserting (strict mode) type=A ext=.abd
Asserting (strict mode) type=AnyObject ext=.abd
Asserting (strict mode) type=C ext=.abd
Asserting (strict mode) type=B ext=.abd
Asserting (strict mode) type=D ext=.abd
Asserting (strict mode) type=A ext=.b
Asserting (strict mode) type=C ext=.b
Asserting (strict mode) type=B ext=.b
Asserting (strict mode) type=A ext=.bd
Asserting (strict mode) type=AnyObject ext=.bd
Asserting (strict mode) type=C ext=.bd
Asserting (strict mode) type=B ext=.bd
Asserting (strict mode) type=D ext=.bd
Asserting (strict mode) type=A ext=.c
Asserting (strict mode) type=C ext=.c
Asserting (strict mode) type=B ext=.c
Asserting (strict mode) type=D ext=.c
Asserting (strict mode) type=A ext=.ad
Asserting (strict mode) type=AnyObject ext=.ad
Asserting (strict mode) type=C ext=.ad
Asserting (strict mode) type=B ext=.ad
Asserting (strict mode) type=D ext=.ad
Asserting (strict mode) type=A ext=.a
Asserting (strict mode) type=AnyObject ext=.a
Asserting (strict mode) type=C ext=.a
Asserting (strict mode) type=B ext=.a
Asserting (strict mode) type=D ext=.a
Asserting (strict mode) type=A ext=.cd
Asserting (strict mode) type=AnyObject ext=.cd
Asserting (strict mode) type=C ext=.cd
Asserting (strict mode) type=B ext=.cd
Asserting (strict mode) type=D ext=.cd
Asserting (strict mode) type=D ext=&lt;multifile&gt;
Asserting (strict mode) type=AnyObject ext=&lt;multifile&gt;
Asserting (strict mode) type=C ext=&lt;multifile&gt;
Asserting (strict mode) type=B ext=&lt;multifile&gt;
Asserting (strict mode) type=A ext=&lt;multifile&gt;
Asserting (strict mode) type=A ext=.ab
Asserting (strict mode) type=AnyObject ext=.ab
Asserting (strict mode) type=C ext=.ab
Asserting (strict mode) type=B ext=.ab
Asserting (strict mode) type=D ext=.ab
Asserting (strict mode) type=A ext=.d
Asserting (strict mode) type=AnyObject ext=.d
Asserting (strict mode) type=C ext=.d
Asserting (strict mode) type=D ext=.d
Asserting (strict mode) type=A ext=.abc
Asserting (strict mode) type=AnyObject ext=.abc
Asserting (strict mode) type=C ext=.abc
Asserting (strict mode) type=B ext=.abc
Asserting (strict mode) type=D ext=.abc
Asserting (strict mode) type=A ext=.acd
Asserting (strict mode) type=AnyObject ext=.acd
Asserting (strict mode) type=C ext=.acd
Asserting (strict mode) type=B ext=.acd
Asserting (strict mode) type=D ext=.acd
Asserting (strict mode) type=A ext=.abcd
Asserting (strict mode) type=AnyObject ext=.abcd
Asserting (strict mode) type=C ext=.abcd
Asserting (strict mode) type=B ext=.abcd
Asserting (strict mode) type=D ext=.abcd
Asserting (strict mode) type=A ext=.bc
Asserting (strict mode) type=C ext=.bc
Asserting (strict mode) type=B ext=.bc
Asserting (strict mode) type=D ext=.bc
Asserting (strict mode) type=A ext=.bcd
Asserting (strict mode) type=AnyObject ext=.bcd
Asserting (strict mode) type=C ext=.bcd
Asserting (strict mode) type=B ext=.bcd
Asserting (strict mode) type=D ext=.bcd
Asserting (strict mode) type=A ext=.ac
Asserting (strict mode) type=AnyObject ext=.ac
Asserting (strict mode) type=C ext=.ac
Asserting (strict mode) type=B ext=.ac
Asserting (strict mode) type=D ext=.ac
Asserting (strict mode) type=A ext=.abd
Asserting (strict mode) type=AnyObject ext=.abd
Asserting (strict mode) type=C ext=.abd
Asserting (strict mode) type=B ext=.abd
Asserting (strict mode) type=D ext=.abd
Asserting (strict mode) type=A ext=.b
Asserting (strict mode) type=C ext=.b
Asserting (strict mode) type=B ext=.b
Asserting (strict mode) type=A ext=.cd
Asserting (strict mode) type=AnyObject ext=.cd
Asserting (strict mode) type=C ext=.cd
Asserting (strict mode) type=B ext=.cd
Asserting (strict mode) type=D ext=.cd
Asserting (strict mode) type=A ext=.bd
Asserting (strict mode) type=AnyObject ext=.bd
Asserting (strict mode) type=C ext=.bd
Asserting (strict mode) type=B ext=.bd
Asserting (strict mode) type=D ext=.bd
Asserting (strict mode) type=A ext=.c
Asserting (strict mode) type=C ext=.c
Asserting (strict mode) type=B ext=.c
Asserting (strict mode) type=D ext=.c
Asserting (strict mode) type=A ext=.ad
Asserting (strict mode) type=AnyObject ext=.ad
Asserting (strict mode) type=C ext=.ad
Asserting (strict mode) type=B ext=.ad
Asserting (strict mode) type=D ext=.ad
Asserting (strict mode) type=D ext=.d
Asserting (strict mode) type=AnyObject ext=.d
Asserting (strict mode) type=C ext=.d
Asserting (strict mode) type=A ext=.d
Asserting (strict mode) type=A ext=.a
Asserting (strict mode) type=AnyObject ext=.a
Asserting (strict mode) type=C ext=.a
Asserting (strict mode) type=B ext=.a
Asserting (strict mode) type=D ext=.a
Asserting (strict mode) type=A ext=&lt;multifile&gt;
Asserting (strict mode) type=AnyObject ext=&lt;multifile&gt;
Asserting (strict mode) type=C ext=&lt;multifile&gt;
Asserting (strict mode) type=B ext=&lt;multifile&gt;
Asserting (strict mode) type=D ext=&lt;multifile&gt;
Asserting (strict mode) type=A ext=.ab
Asserting (strict mode) type=AnyObject ext=.ab
Asserting (strict mode) type=C ext=.ab
Asserting (strict mode) type=B ext=.ab
Asserting (strict mode) type=D ext=.ab
Asserting (strict mode) type=A ext=.abc
Asserting (strict mode) type=AnyObject ext=.abc
Asserting (strict mode) type=C ext=.abc
Asserting (strict mode) type=B ext=.abc
Asserting (strict mode) type=D ext=.abc
Asserting (strict mode) type=A ext=.acd
Asserting (strict mode) type=AnyObject ext=.acd
Asserting (strict mode) type=C ext=.acd
Asserting (strict mode) type=B ext=.acd
Asserting (strict mode) type=D ext=.acd
Asserting (strict mode) type=A ext=.abcd
Asserting (strict mode) type=AnyObject ext=.abcd
Asserting (strict mode) type=C ext=.abcd
Asserting (strict mode) type=B ext=.abcd
Asserting (strict mode) type=D ext=.abcd
Asserting (strict mode) type=A ext=.bc
Asserting (strict mode) type=C ext=.bc
Asserting (strict mode) type=B ext=.bc
Asserting (strict mode) type=D ext=.bc
Asserting (strict mode) type=A ext=.bcd
Asserting (strict mode) type=AnyObject ext=.bcd
Asserting (strict mode) type=C ext=.bcd
Asserting (strict mode) type=B ext=.bcd
Asserting (strict mode) type=D ext=.bcd
Asserting (strict mode) type=A ext=.ac
Asserting (strict mode) type=AnyObject ext=.ac
Asserting (strict mode) type=C ext=.ac
Asserting (strict mode) type=B ext=.ac
Asserting (strict mode) type=D ext=.ac
Asserting (strict mode) type=A ext=.abd
Asserting (strict mode) type=AnyObject ext=.abd
Asserting (strict mode) type=C ext=.abd
Asserting (strict mode) type=B ext=.abd
Asserting (strict mode) type=D ext=.abd
Asserting (strict mode) type=A ext=.b
Asserting (strict mode) type=C ext=.b
Asserting (strict mode) type=B ext=.b
Asserting (strict mode) type=A ext=.cd
Asserting (strict mode) type=AnyObject ext=.cd
Asserting (strict mode) type=C ext=.cd
Asserting (strict mode) type=B ext=.cd
Asserting (strict mode) type=D ext=.cd
Asserting (strict mode) type=A ext=.bd
Asserting (strict mode) type=AnyObject ext=.bd
Asserting (strict mode) type=C ext=.bd
Asserting (strict mode) type=B ext=.bd
Asserting (strict mode) type=D ext=.bd
Asserting (strict mode) type=A ext=.c
Asserting (strict mode) type=C ext=.c
Asserting (strict mode) type=B ext=.c
Asserting (strict mode) type=D ext=.c
Asserting (strict mode) type=A ext=.ad
Asserting (strict mode) type=AnyObject ext=.ad
Asserting (strict mode) type=C ext=.ad
Asserting (strict mode) type=B ext=.ad
Asserting (strict mode) type=D ext=.ad
Asserting (strict mode) type=A ext=.d
Asserting (strict mode) type=AnyObject ext=.d
Asserting (strict mode) type=C ext=.d
Asserting (strict mode) type=D ext=.d
Asserting (strict mode) type=A ext=.a
Asserting (strict mode) type=AnyObject ext=.a
Asserting (strict mode) type=C ext=.a
Asserting (strict mode) type=B ext=.a
Asserting (strict mode) type=D ext=.a
Asserting (strict mode) type=A ext=&lt;multifile&gt;
Asserting (strict mode) type=AnyObject ext=&lt;multifile&gt;
Asserting (strict mode) type=C ext=&lt;multifile&gt;
Asserting (strict mode) type=B ext=&lt;multifile&gt;
Asserting (strict mode) type=D ext=&lt;multifile&gt;
Asserting (strict mode) type=A ext=.ab
Asserting (strict mode) type=AnyObject ext=.ab
Asserting (strict mode) type=C ext=.ab
Asserting (strict mode) type=B ext=.ab
Asserting (strict mode) type=D ext=.ab
Asserting (strict mode) type=A ext=.abc
Asserting (strict mode) type=AnyObject ext=.abc
Asserting (strict mode) type=C ext=.abc
Asserting (strict mode) type=B ext=.abc
Asserting (strict mode) type=D ext=.abc
Asserting (strict mode) type=A ext=.acd
Asserting (strict mode) type=AnyObject ext=.acd
Asserting (strict mode) type=C ext=.acd
Asserting (strict mode) type=B ext=.acd
Asserting (strict mode) type=D ext=.acd
Asserting (strict mode) type=A ext=.abcd
Asserting (strict mode) type=AnyObject ext=.abcd
Asserting (strict mode) type=C ext=.abcd
Asserting (strict mode) type=B ext=.abcd
Asserting (strict mode) type=D ext=.abcd
Asserting (strict mode) type=A ext=.bc
Asserting (strict mode) type=C ext=.bc
Asserting (strict mode) type=B ext=.bc
Asserting (strict mode) type=D ext=.bc
Asserting (strict mode) type=A ext=.bcd
Asserting (strict mode) type=AnyObject ext=.bcd
Asserting (strict mode) type=C ext=.bcd
Asserting (strict mode) type=B ext=.bcd
Asserting (strict mode) type=D ext=.bcd
Asserting (strict mode) type=A ext=.ac
Asserting (strict mode) type=AnyObject ext=.ac
Asserting (strict mode) type=C ext=.ac
Asserting (strict mode) type=B ext=.ac
Asserting (strict mode) type=D ext=.ac
Asserting (strict mode) type=A ext=.abd
Asserting (strict mode) type=AnyObject ext=.abd
Asserting (strict mode) type=C ext=.abd
Asserting (strict mode) type=B ext=.abd
Asserting (strict mode) type=D ext=.abd
Asserting (strict mode) type=A ext=.b
Asserting (strict mode) type=C ext=.b
Asserting (strict mode) type=B ext=.b
Asserting (strict mode) type=A ext=.cd
Asserting (strict mode) type=AnyObject ext=.cd
Asserting (strict mode) type=C ext=.cd
Asserting (strict mode) type=B ext=.cd
Asserting (strict mode) type=D ext=.cd
Asserting (strict mode) type=A ext=.bd
Asserting (strict mode) type=AnyObject ext=.bd
Asserting (strict mode) type=C ext=.bd
Asserting (strict mode) type=B ext=.bd
Asserting (strict mode) type=D ext=.bd
Asserting (strict mode) type=A ext=.c
Asserting (strict mode) type=C ext=.c
Asserting (strict mode) type=B ext=.c
Asserting (strict mode) type=D ext=.c
Asserting (strict mode) type=D ext=.ad
Asserting (strict mode) type=AnyObject ext=.ad
Asserting (strict mode) type=C ext=.ad
Asserting (strict mode) type=B ext=.ad
Asserting (strict mode) type=A ext=.ad
Asserting (strict mode) type=D ext=.d
Asserting (strict mode) type=AnyObject ext=.d
Asserting (strict mode) type=C ext=.d
Asserting (strict mode) type=A ext=.d
Asserting (strict mode) type=A ext=.a
Asserting (strict mode) type=AnyObject ext=.a
Asserting (strict mode) type=C ext=.a
Asserting (strict mode) type=B ext=.a
Asserting (strict mode) type=D ext=.a
Asserting (strict mode) type=D ext=&lt;multifile&gt;
Asserting (strict mode) type=AnyObject ext=&lt;multifile&gt;
Asserting (strict mode) type=C ext=&lt;multifile&gt;
Asserting (strict mode) type=B ext=&lt;multifile&gt;
Asserting (strict mode) type=A ext=&lt;multifile&gt;
Asserting (strict mode) type=A ext=.ab
Asserting (strict mode) type=AnyObject ext=.ab
Asserting (strict mode) type=C ext=.ab
Asserting (strict mode) type=B ext=.ab
Asserting (strict mode) type=D ext=.ab
Asserting (strict mode) type=A ext=.abc
Asserting (strict mode) type=AnyObject ext=.abc
Asserting (strict mode) type=C ext=.abc
Asserting (strict mode) type=B ext=.abc
Asserting (strict mode) type=D ext=.abc
Asserting (strict mode) type=A ext=.acd
Asserting (strict mode) type=AnyObject ext=.acd
Asserting (strict mode) type=C ext=.acd
Asserting (strict mode) type=B ext=.acd
Asserting (strict mode) type=D ext=.acd
Asserting (strict mode) type=A ext=.abcd
Asserting (strict mode) type=AnyObject ext=.abcd
Asserting (strict mode) type=C ext=.abcd
Asserting (strict mode) type=B ext=.abcd
Asserting (strict mode) type=D ext=.abcd
Asserting (strict mode) type=A ext=.bc
Asserting (strict mode) type=C ext=.bc
Asserting (strict mode) type=B ext=.bc
Asserting (strict mode) type=D ext=.bc
Asserting (strict mode) type=A ext=.bcd
Asserting (strict mode) type=AnyObject ext=.bcd
Asserting (strict mode) type=C ext=.bcd
Asserting (strict mode) type=B ext=.bcd
Asserting (strict mode) type=D ext=.bcd
Asserting (strict mode) type=A ext=.ac
Asserting (strict mode) type=AnyObject ext=.ac
Asserting (strict mode) type=C ext=.ac
Asserting (strict mode) type=B ext=.ac
Asserting (strict mode) type=D ext=.ac
Asserting (strict mode) type=A ext=.abd
Asserting (strict mode) type=AnyObject ext=.abd
Asserting (strict mode) type=C ext=.abd
Asserting (strict mode) type=B ext=.abd
Asserting (strict mode) type=D ext=.abd
Asserting (strict mode) type=A ext=.b
Asserting (strict mode) type=C ext=.b
Asserting (strict mode) type=B ext=.b
Asserting (strict mode) type=A ext=.bd
Asserting (strict mode) type=AnyObject ext=.bd
Asserting (strict mode) type=C ext=.bd
Asserting (strict mode) type=B ext=.bd
Asserting (strict mode) type=D ext=.bd
Asserting (strict mode) type=A ext=.c
Asserting (strict mode) type=C ext=.c
Asserting (strict mode) type=B ext=.c
Asserting (strict mode) type=D ext=.c
Asserting (strict mode) type=A ext=.ad
Asserting (strict mode) type=AnyObject ext=.ad
Asserting (strict mode) type=C ext=.ad
Asserting (strict mode) type=B ext=.ad
Asserting (strict mode) type=D ext=.ad
Asserting (strict mode) type=A ext=.a
Asserting (strict mode) type=AnyObject ext=.a
Asserting (strict mode) type=C ext=.a
Asserting (strict mode) type=B ext=.a
Asserting (strict mode) type=D ext=.a
Asserting (strict mode) type=A ext=.cd
Asserting (strict mode) type=AnyObject ext=.cd
Asserting (strict mode) type=C ext=.cd
Asserting (strict mode) type=B ext=.cd
Asserting (strict mode) type=D ext=.cd
Asserting (strict mode) type=D ext=&lt;multifile&gt;
Asserting (strict mode) type=AnyObject ext=&lt;multifile&gt;
Asserting (strict mode) type=C ext=&lt;multifile&gt;
Asserting (strict mode) type=B ext=&lt;multifile&gt;
Asserting (strict mode) type=A ext=&lt;multifile&gt;
Asserting (strict mode) type=A ext=.ab
Asserting (strict mode) type=AnyObject ext=.ab
Asserting (strict mode) type=C ext=.ab
Asserting (strict mode) type=B ext=.ab
Asserting (strict mode) type=D ext=.ab
Asserting (strict mode) type=A ext=.d
Asserting (strict mode) type=AnyObject ext=.d
Asserting (strict mode) type=C ext=.d
Asserting (strict mode) type=D ext=.d
Asserting (strict mode) type=A ext=.abc
Asserting (strict mode) type=AnyObject ext=.abc
Asserting (strict mode) type=C ext=.abc
Asserting (strict mode) type=B ext=.abc
Asserting (strict mode) type=D ext=.abc
Asserting (strict mode) type=A ext=.acd
Asserting (strict mode) type=AnyObject ext=.acd
Asserting (strict mode) type=C ext=.acd
Asserting (strict mode) type=B ext=.acd
Asserting (strict mode) type=D ext=.acd
Asserting (strict mode) type=A ext=.abcd
Asserting (strict mode) type=AnyObject ext=.abcd
Asserting (strict mode) type=C ext=.abcd
Asserting (strict mode) type=B ext=.abcd
Asserting (strict mode) type=D ext=.abcd
Asserting (strict mode) type=A ext=.bc
Asserting (strict mode) type=C ext=.bc
Asserting (strict mode) type=B ext=.bc
Asserting (strict mode) type=D ext=.bc
Asserting (strict mode) type=A ext=.bcd
Asserting (strict mode) type=AnyObject ext=.bcd
Asserting (strict mode) type=C ext=.bcd
Asserting (strict mode) type=B ext=.bcd
Asserting (strict mode) type=D ext=.bcd
Asserting (strict mode) type=A ext=.ac
Asserting (strict mode) type=AnyObject ext=.ac
Asserting (strict mode) type=C ext=.ac
Asserting (strict mode) type=B ext=.ac
Asserting (strict mode) type=D ext=.ac
Asserting (strict mode) type=A ext=.abd
Asserting (strict mode) type=AnyObject ext=.abd
Asserting (strict mode) type=C ext=.abd
Asserting (strict mode) type=B ext=.abd
Asserting (strict mode) type=D ext=.abd
Asserting (strict mode) type=A ext=.b
Asserting (strict mode) type=C ext=.b
Asserting (strict mode) type=B ext=.b
Asserting (strict mode) type=A ext=.bd
Asserting (strict mode) type=AnyObject ext=.bd
Asserting (strict mode) type=C ext=.bd
Asserting (strict mode) type=B ext=.bd
Asserting (strict mode) type=D ext=.bd
Asserting (strict mode) type=A ext=.c
Asserting (strict mode) type=C ext=.c
Asserting (strict mode) type=B ext=.c
Asserting (strict mode) type=D ext=.c
Asserting (strict mode) type=A ext=.ad
Asserting (strict mode) type=AnyObject ext=.ad
Asserting (strict mode) type=C ext=.ad
Asserting (strict mode) type=B ext=.ad
Asserting (strict mode) type=D ext=.ad
Asserting (strict mode) type=A ext=.a
Asserting (strict mode) type=AnyObject ext=.a
Asserting (strict mode) type=C ext=.a
Asserting (strict mode) type=B ext=.a
Asserting (strict mode) type=D ext=.a
Asserting (strict mode) type=A ext=.cd
Asserting (strict mode) type=AnyObject ext=.cd
Asserting (strict mode) type=C ext=.cd
Asserting (strict mode) type=B ext=.cd
Asserting (strict mode) type=D ext=.cd
Asserting (strict mode) type=A ext=&lt;multifile&gt;
Asserting (strict mode) type=AnyObject ext=&lt;multifile&gt;
Asserting (strict mode) type=C ext=&lt;multifile&gt;
Asserting (strict mode) type=B ext=&lt;multifile&gt;
Asserting (strict mode) type=D ext=&lt;multifile&gt;
Asserting (strict mode) type=A ext=.ab
Asserting (strict mode) type=AnyObject ext=.ab
Asserting (strict mode) type=C ext=.ab
Asserting (strict mode) type=B ext=.ab
Asserting (strict mode) type=D ext=.ab
Asserting (strict mode) type=A ext=.d
Asserting (strict mode) type=AnyObject ext=.d
Asserting (strict mode) type=C ext=.d
Asserting (strict mode) type=D ext=.d
Asserting (strict mode) type=A ext=.abc
Asserting (strict mode) type=AnyObject ext=.abc
Asserting (strict mode) type=C ext=.abc
Asserting (strict mode) type=B ext=.abc
Asserting (strict mode) type=D ext=.abc
Asserting (strict mode) type=A ext=.acd
Asserting (strict mode) type=AnyObject ext=.acd
Asserting (strict mode) type=C ext=.acd
Asserting (strict mode) type=B ext=.acd
Asserting (strict mode) type=D ext=.acd
Asserting (strict mode) type=A ext=.abcd
Asserting (strict mode) type=AnyObject ext=.abcd
Asserting (strict mode) type=C ext=.abcd
Asserting (strict mode) type=B ext=.abcd
Asserting (strict mode) type=D ext=.abcd
Asserting (strict mode) type=A ext=.bc
Asserting (strict mode) type=C ext=.bc
Asserting (strict mode) type=B ext=.bc
Asserting (strict mode) type=D ext=.bc
Asserting (strict mode) type=A ext=.bcd
Asserting (strict mode) type=AnyObject ext=.bcd
Asserting (strict mode) type=C ext=.bcd
Asserting (strict mode) type=B ext=.bcd
Asserting (strict mode) type=D ext=.bcd
Asserting (strict mode) type=A ext=.ac
Asserting (strict mode) type=AnyObject ext=.ac
Asserting (strict mode) type=C ext=.ac
Asserting (strict mode) type=B ext=.ac
Asserting (strict mode) type=D ext=.ac
Asserting (strict mode) type=A ext=.abd
Asserting (strict mode) type=AnyObject ext=.abd
Asserting (strict mode) type=C ext=.abd
Asserting (strict mode) type=B ext=.abd
Asserting (strict mode) type=D ext=.abd
Asserting (strict mode) type=A ext=.b
Asserting (strict mode) type=C ext=.b
Asserting (strict mode) type=B ext=.b
Asserting (strict mode) type=A ext=.bd
Asserting (strict mode) type=AnyObject ext=.bd
Asserting (strict mode) type=C ext=.bd
Asserting (strict mode) type=B ext=.bd
Asserting (strict mode) type=D ext=.bd
Asserting (strict mode) type=A ext=.c
Asserting (strict mode) type=C ext=.c
Asserting (strict mode) type=B ext=.c
Asserting (strict mode) type=D ext=.c
Asserting (strict mode) type=A ext=.ad
Asserting (strict mode) type=AnyObject ext=.ad
Asserting (strict mode) type=C ext=.ad
Asserting (strict mode) type=B ext=.ad
Asserting (strict mode) type=D ext=.ad
Asserting (strict mode) type=A ext=.a
Asserting (strict mode) type=AnyObject ext=.a
Asserting (strict mode) type=C ext=.a
Asserting (strict mode) type=B ext=.a
Asserting (strict mode) type=D ext=.a
Asserting (strict mode) type=A ext=.cd
Asserting (strict mode) type=AnyObject ext=.cd
Asserting (strict mode) type=C ext=.cd
Asserting (strict mode) type=B ext=.cd
Asserting (strict mode) type=D ext=.cd
Asserting (strict mode) type=D ext=&lt;multifile&gt;
Asserting (strict mode) type=AnyObject ext=&lt;multifile&gt;
Asserting (strict mode) type=C ext=&lt;multifile&gt;
Asserting (strict mode) type=B ext=&lt;multifile&gt;
Asserting (strict mode) type=A ext=&lt;multifile&gt;
Asserting (strict mode) type=A ext=.ab
Asserting (strict mode) type=AnyObject ext=.ab
Asserting (strict mode) type=C ext=.ab
Asserting (strict mode) type=B ext=.ab
Asserting (strict mode) type=D ext=.ab
Asserting (strict mode) type=A ext=.d
Asserting (strict mode) type=AnyObject ext=.d
Asserting (strict mode) type=C ext=.d
Asserting (strict mode) type=D ext=.d
Asserting (strict mode) type=A ext=.abc
Asserting (strict mode) type=AnyObject ext=.abc
Asserting (strict mode) type=C ext=.abc
Asserting (strict mode) type=B ext=.abc
Asserting (strict mode) type=D ext=.abc
</system-out></testcase><testcase classname="parsyfiles.tests.combining_parsers_converters.test_registries.TestParserRegistry" file="parsyfiles/tests/combining_parsers_converters/test_registries.py" line="304" name="test_c_capabilities_equal_query_nonstrict" time="0.5821905136108398"><system-out>.
.d
.c
.cd
.b
.bd
.bc
.bcd
.a
.ad
.ac
.acd
.ab
.abd
.abc
.abcd
Asserting (non-strict mode) type=B ext=.acd
Asserting (non-strict mode) type=AnyObject ext=.acd
Asserting (non-strict mode) type=D ext=.acd
Asserting (non-strict mode) type=C ext=.acd
Asserting (non-strict mode) type=A ext=.acd
Asserting (non-strict mode) type=A ext=.abcd
Asserting (non-strict mode) type=B ext=.abcd
Asserting (non-strict mode) type=AnyObject ext=.abcd
Asserting (non-strict mode) type=C ext=.abcd
Asserting (non-strict mode) type=D ext=.abcd
Asserting (non-strict mode) type=B ext=.bc
Asserting (non-strict mode) type=C ext=.bc
Asserting (non-strict mode) type=D ext=.bc
Asserting (non-strict mode) type=A ext=.bc
Asserting (non-strict mode) type=B ext=.bcd
Asserting (non-strict mode) type=AnyObject ext=.bcd
Asserting (non-strict mode) type=D ext=.bcd
Asserting (non-strict mode) type=C ext=.bcd
Asserting (non-strict mode) type=A ext=.bcd
Asserting (non-strict mode) type=B ext=.ac
Asserting (non-strict mode) type=AnyObject ext=.ac
Asserting (non-strict mode) type=D ext=.ac
Asserting (non-strict mode) type=C ext=.ac
Asserting (non-strict mode) type=A ext=.ac
Asserting (non-strict mode) type=B ext=.abd
Asserting (non-strict mode) type=AnyObject ext=.abd
Asserting (non-strict mode) type=D ext=.abd
Asserting (non-strict mode) type=C ext=.abd
Asserting (non-strict mode) type=A ext=.abd
Asserting (non-strict mode) type=B ext=.b
Asserting (non-strict mode) type=C ext=.b
Asserting (non-strict mode) type=A ext=.b
Asserting (non-strict mode) type=A ext=.bd
Asserting (non-strict mode) type=B ext=.bd
Asserting (non-strict mode) type=AnyObject ext=.bd
Asserting (non-strict mode) type=C ext=.bd
Asserting (non-strict mode) type=D ext=.bd
Asserting (non-strict mode) type=B ext=.c
Asserting (non-strict mode) type=C ext=.c
Asserting (non-strict mode) type=D ext=.c
Asserting (non-strict mode) type=A ext=.c
Asserting (non-strict mode) type=B ext=.ad
Asserting (non-strict mode) type=AnyObject ext=.ad
Asserting (non-strict mode) type=D ext=.ad
Asserting (non-strict mode) type=C ext=.ad
Asserting (non-strict mode) type=A ext=.ad
Asserting (non-strict mode) type=B ext=.a
Asserting (non-strict mode) type=AnyObject ext=.a
Asserting (non-strict mode) type=D ext=.a
Asserting (non-strict mode) type=C ext=.a
Asserting (non-strict mode) type=A ext=.a
Asserting (non-strict mode) type=A ext=.cd
Asserting (non-strict mode) type=B ext=.cd
Asserting (non-strict mode) type=AnyObject ext=.cd
Asserting (non-strict mode) type=C ext=.cd
Asserting (non-strict mode) type=D ext=.cd
Asserting (non-strict mode) type=B ext=&lt;multifile&gt;
Asserting (non-strict mode) type=AnyObject ext=&lt;multifile&gt;
Asserting (non-strict mode) type=D ext=&lt;multifile&gt;
Asserting (non-strict mode) type=C ext=&lt;multifile&gt;
Asserting (non-strict mode) type=A ext=&lt;multifile&gt;
Asserting (non-strict mode) type=B ext=.ab
Asserting (non-strict mode) type=AnyObject ext=.ab
Asserting (non-strict mode) type=D ext=.ab
Asserting (non-strict mode) type=C ext=.ab
Asserting (non-strict mode) type=A ext=.ab
Asserting (non-strict mode) type=D ext=.d
Asserting (non-strict mode) type=AnyObject ext=.d
Asserting (non-strict mode) type=C ext=.d
Asserting (non-strict mode) type=A ext=.d
Asserting (non-strict mode) type=A ext=.abc
Asserting (non-strict mode) type=B ext=.abc
Asserting (non-strict mode) type=AnyObject ext=.abc
Asserting (non-strict mode) type=C ext=.abc
Asserting (non-strict mode) type=D ext=.abc
Asserting (non-strict mode) type=B ext=.acd
Asserting (non-strict mode) type=AnyObject ext=.acd
Asserting (non-strict mode) type=D ext=.acd
Asserting (non-strict mode) type=C ext=.acd
Asserting (non-strict mode) type=A ext=.acd
Asserting (non-strict mode) type=B ext=.abcd
Asserting (non-strict mode) type=AnyObject ext=.abcd
Asserting (non-strict mode) type=D ext=.abcd
Asserting (non-strict mode) type=C ext=.abcd
Asserting (non-strict mode) type=A ext=.abcd
Asserting (non-strict mode) type=B ext=.bc
Asserting (non-strict mode) type=C ext=.bc
Asserting (non-strict mode) type=D ext=.bc
Asserting (non-strict mode) type=A ext=.bc
Asserting (non-strict mode) type=B ext=.bcd
Asserting (non-strict mode) type=AnyObject ext=.bcd
Asserting (non-strict mode) type=D ext=.bcd
Asserting (non-strict mode) type=C ext=.bcd
Asserting (non-strict mode) type=A ext=.bcd
Asserting (non-strict mode) type=B ext=.ac
Asserting (non-strict mode) type=AnyObject ext=.ac
Asserting (non-strict mode) type=D ext=.ac
Asserting (non-strict mode) type=C ext=.ac
Asserting (non-strict mode) type=A ext=.ac
Asserting (non-strict mode) type=B ext=.abd
Asserting (non-strict mode) type=AnyObject ext=.abd
Asserting (non-strict mode) type=D ext=.abd
Asserting (non-strict mode) type=C ext=.abd
Asserting (non-strict mode) type=A ext=.abd
Asserting (non-strict mode) type=B ext=.b
Asserting (non-strict mode) type=C ext=.b
Asserting (non-strict mode) type=A ext=.b
Asserting (non-strict mode) type=B ext=.bd
Asserting (non-strict mode) type=AnyObject ext=.bd
Asserting (non-strict mode) type=D ext=.bd
Asserting (non-strict mode) type=C ext=.bd
Asserting (non-strict mode) type=A ext=.bd
Asserting (non-strict mode) type=B ext=.c
Asserting (non-strict mode) type=C ext=.c
Asserting (non-strict mode) type=D ext=.c
Asserting (non-strict mode) type=A ext=.c
Asserting (non-strict mode) type=B ext=.ad
Asserting (non-strict mode) type=AnyObject ext=.ad
Asserting (non-strict mode) type=D ext=.ad
Asserting (non-strict mode) type=C ext=.ad
Asserting (non-strict mode) type=A ext=.ad
Asserting (non-strict mode) type=B ext=.a
Asserting (non-strict mode) type=AnyObject ext=.a
Asserting (non-strict mode) type=D ext=.a
Asserting (non-strict mode) type=C ext=.a
Asserting (non-strict mode) type=A ext=.a
Asserting (non-strict mode) type=B ext=.cd
Asserting (non-strict mode) type=AnyObject ext=.cd
Asserting (non-strict mode) type=D ext=.cd
Asserting (non-strict mode) type=C ext=.cd
Asserting (non-strict mode) type=A ext=.cd
Asserting (non-strict mode) type=B ext=&lt;multifile&gt;
Asserting (non-strict mode) type=AnyObject ext=&lt;multifile&gt;
Asserting (non-strict mode) type=D ext=&lt;multifile&gt;
Asserting (non-strict mode) type=C ext=&lt;multifile&gt;
Asserting (non-strict mode) type=A ext=&lt;multifile&gt;
Asserting (non-strict mode) type=B ext=.ab
Asserting (non-strict mode) type=AnyObject ext=.ab
Asserting (non-strict mode) type=D ext=.ab
Asserting (non-strict mode) type=C ext=.ab
Asserting (non-strict mode) type=A ext=.ab
Asserting (non-strict mode) type=A ext=.d
Asserting (non-strict mode) type=AnyObject ext=.d
Asserting (non-strict mode) type=C ext=.d
Asserting (non-strict mode) type=D ext=.d
Asserting (non-strict mode) type=B ext=.abc
Asserting (non-strict mode) type=AnyObject ext=.abc
Asserting (non-strict mode) type=D ext=.abc
Asserting (non-strict mode) type=C ext=.abc
Asserting (non-strict mode) type=A ext=.abc
Asserting (non-strict mode) type=B ext=.acd
Asserting (non-strict mode) type=AnyObject ext=.acd
Asserting (non-strict mode) type=D ext=.acd
Asserting (non-strict mode) type=C ext=.acd
Asserting (non-strict mode) type=A ext=.acd
Asserting (non-strict mode) type=B ext=.abcd
Asserting (non-strict mode) type=AnyObject ext=.abcd
Asserting (non-strict mode) type=D ext=.abcd
Asserting (non-strict mode) type=C ext=.abcd
Asserting (non-strict mode) type=A ext=.abcd
Asserting (non-strict mode) type=B ext=.bc
Asserting (non-strict mode) type=C ext=.bc
Asserting (non-strict mode) type=D ext=.bc
Asserting (non-strict mode) type=A ext=.bc
Asserting (non-strict mode) type=B ext=.bcd
Asserting (non-strict mode) type=AnyObject ext=.bcd
Asserting (non-strict mode) type=D ext=.bcd
Asserting (non-strict mode) type=C ext=.bcd
Asserting (non-strict mode) type=A ext=.bcd
Asserting (non-strict mode) type=B ext=.ac
Asserting (non-strict mode) type=AnyObject ext=.ac
Asserting (non-strict mode) type=D ext=.ac
Asserting (non-strict mode) type=C ext=.ac
Asserting (non-strict mode) type=A ext=.ac
Asserting (non-strict mode) type=B ext=.abd
Asserting (non-strict mode) type=AnyObject ext=.abd
Asserting (non-strict mode) type=D ext=.abd
Asserting (non-strict mode) type=C ext=.abd
Asserting (non-strict mode) type=A ext=.abd
Asserting (non-strict mode) type=B ext=.b
Asserting (non-strict mode) type=C ext=.b
Asserting (non-strict mode) type=A ext=.b
Asserting (non-strict mode) type=B ext=.cd
Asserting (non-strict mode) type=AnyObject ext=.cd
Asserting (non-strict mode) type=D ext=.cd
Asserting (non-strict mode) type=C ext=.cd
Asserting (non-strict mode) type=A ext=.cd
Asserting (non-strict mode) type=B ext=.bd
Asserting (non-strict mode) type=AnyObject ext=.bd
Asserting (non-strict mode) type=D ext=.bd
Asserting (non-strict mode) type=C ext=.bd
Asserting (non-strict mode) type=A ext=.bd
Asserting (non-strict mode) type=B ext=.c
Asserting (non-strict mode) type=C ext=.c
Asserting (non-strict mode) type=D ext=.c
Asserting (non-strict mode) type=A ext=.c
Asserting (non-strict mode) type=B ext=.ad
Asserting (non-strict mode) type=AnyObject ext=.ad
Asserting (non-strict mode) type=D ext=.ad
Asserting (non-strict mode) type=C ext=.ad
Asserting (non-strict mode) type=A ext=.ad
Asserting (non-strict mode) type=A ext=.d
Asserting (non-strict mode) type=AnyObject ext=.d
Asserting (non-strict mode) type=C ext=.d
Asserting (non-strict mode) type=D ext=.d
Asserting (non-strict mode) type=B ext=.a
Asserting (non-strict mode) type=AnyObject ext=.a
Asserting (non-strict mode) type=D ext=.a
Asserting (non-strict mode) type=C ext=.a
Asserting (non-strict mode) type=A ext=.a
Asserting (non-strict mode) type=B ext=&lt;multifile&gt;
Asserting (non-strict mode) type=AnyObject ext=&lt;multifile&gt;
Asserting (non-strict mode) type=D ext=&lt;multifile&gt;
Asserting (non-strict mode) type=C ext=&lt;multifile&gt;
Asserting (non-strict mode) type=A ext=&lt;multifile&gt;
Asserting (non-strict mode) type=B ext=.ab
Asserting (non-strict mode) type=AnyObject ext=.ab
Asserting (non-strict mode) type=D ext=.ab
Asserting (non-strict mode) type=C ext=.ab
Asserting (non-strict mode) type=A ext=.ab
Asserting (non-strict mode) type=B ext=.abc
Asserting (non-strict mode) type=AnyObject ext=.abc
Asserting (non-strict mode) type=D ext=.abc
Asserting (non-strict mode) type=C ext=.abc
Asserting (non-strict mode) type=A ext=.abc
Asserting (non-strict mode) type=B ext=.acd
Asserting (non-strict mode) type=AnyObject ext=.acd
Asserting (non-strict mode) type=D ext=.acd
Asserting (non-strict mode) type=C ext=.acd
Asserting (non-strict mode) type=A ext=.acd
Asserting (non-strict mode) type=B ext=.abcd
Asserting (non-strict mode) type=AnyObject ext=.abcd
Asserting (non-strict mode) type=D ext=.abcd
Asserting (non-strict mode) type=C ext=.abcd
Asserting (non-strict mode) type=A ext=.abcd
Asserting (non-strict mode) type=B ext=.bc
Asserting (non-strict mode) type=C ext=.bc
Asserting (non-strict mode) type=D ext=.bc
Asserting (non-strict mode) type=A ext=.bc
Asserting (non-strict mode) type=B ext=.bcd
Asserting (non-strict mode) type=AnyObject ext=.bcd
Asserting (non-strict mode) type=D ext=.bcd
Asserting (non-strict mode) type=C ext=.bcd
Asserting (non-strict mode) type=A ext=.bcd
Asserting (non-strict mode) type=A ext=.ac
Asserting (non-strict mode) type=B ext=.ac
Asserting (non-strict mode) type=AnyObject ext=.ac
Asserting (non-strict mode) type=C ext=.ac
Asserting (non-strict mode) type=D ext=.ac
Asserting (non-strict mode) type=B ext=.abd
Asserting (non-strict mode) type=AnyObject ext=.abd
Asserting (non-strict mode) type=D ext=.abd
Asserting (non-strict mode) type=C ext=.abd
Asserting (non-strict mode) type=A ext=.abd
Asserting (non-strict mode) type=B ext=.b
Asserting (non-strict mode) type=C ext=.b
Asserting (non-strict mode) type=A ext=.b
Asserting (non-strict mode) type=B ext=.cd
Asserting (non-strict mode) type=AnyObject ext=.cd
Asserting (non-strict mode) type=D ext=.cd
Asserting (non-strict mode) type=C ext=.cd
Asserting (non-strict mode) type=A ext=.cd
Asserting (non-strict mode) type=B ext=.bd
Asserting (non-strict mode) type=AnyObject ext=.bd
Asserting (non-strict mode) type=D ext=.bd
Asserting (non-strict mode) type=C ext=.bd
Asserting (non-strict mode) type=A ext=.bd
Asserting (non-strict mode) type=B ext=.c
Asserting (non-strict mode) type=C ext=.c
Asserting (non-strict mode) type=D ext=.c
Asserting (non-strict mode) type=A ext=.c
Asserting (non-strict mode) type=A ext=.ad
Asserting (non-strict mode) type=B ext=.ad
Asserting (non-strict mode) type=AnyObject ext=.ad
Asserting (non-strict mode) type=C ext=.ad
Asserting (non-strict mode) type=D ext=.ad
Asserting (non-strict mode) type=D ext=.d
Asserting (non-strict mode) type=AnyObject ext=.d
Asserting (non-strict mode) type=C ext=.d
Asserting (non-strict mode) type=A ext=.d
Asserting (non-strict mode) type=B ext=.a
Asserting (non-strict mode) type=AnyObject ext=.a
Asserting (non-strict mode) type=D ext=.a
Asserting (non-strict mode) type=C ext=.a
Asserting (non-strict mode) type=A ext=.a
Asserting (non-strict mode) type=A ext=&lt;multifile&gt;
Asserting (non-strict mode) type=B ext=&lt;multifile&gt;
Asserting (non-strict mode) type=AnyObject ext=&lt;multifile&gt;
Asserting (non-strict mode) type=C ext=&lt;multifile&gt;
Asserting (non-strict mode) type=D ext=&lt;multifile&gt;
Asserting (non-strict mode) type=A ext=.ab
Asserting (non-strict mode) type=B ext=.ab
Asserting (non-strict mode) type=AnyObject ext=.ab
Asserting (non-strict mode) type=C ext=.ab
Asserting (non-strict mode) type=D ext=.ab
Asserting (non-strict mode) type=A ext=.abc
Asserting (non-strict mode) type=B ext=.abc
Asserting (non-strict mode) type=AnyObject ext=.abc
Asserting (non-strict mode) type=C ext=.abc
Asserting (non-strict mode) type=D ext=.abc
Asserting (non-strict mode) type=A ext=.acd
Asserting (non-strict mode) type=B ext=.acd
Asserting (non-strict mode) type=AnyObject ext=.acd
Asserting (non-strict mode) type=C ext=.acd
Asserting (non-strict mode) type=D ext=.acd
Asserting (non-strict mode) type=A ext=.abcd
Asserting (non-strict mode) type=B ext=.abcd
Asserting (non-strict mode) type=AnyObject ext=.abcd
Asserting (non-strict mode) type=C ext=.abcd
Asserting (non-strict mode) type=D ext=.abcd
Asserting (non-strict mode) type=B ext=.bc
Asserting (non-strict mode) type=C ext=.bc
Asserting (non-strict mode) type=D ext=.bc
Asserting (non-strict mode) type=A ext=.bc
Asserting (non-strict mode) type=A ext=.bcd
Asserting (non-strict mode) type=B ext=.bcd
Asserting (non-strict mode) type=AnyObject ext=.bcd
Asserting (non-strict mode) type=C ext=.bcd
Asserting (non-strict mode) type=D ext=.bcd
Asserting (non-strict mode) type=A ext=.ac
Asserting (non-strict mode) type=B ext=.ac
Asserting (non-strict mode) type=AnyObject ext=.ac
Asserting (non-strict mode) type=C ext=.ac
Asserting (non-strict mode) type=D ext=.ac
Asserting (non-strict mode) type=A ext=.abd
Asserting (non-strict mode) type=B ext=.abd
Asserting (non-strict mode) type=AnyObject ext=.abd
Asserting (non-strict mode) type=C ext=.abd
Asserting (non-strict mode) type=D ext=.abd
Asserting (non-strict mode) type=B ext=.b
Asserting (non-strict mode) type=C ext=.b
Asserting (non-strict mode) type=A ext=.b
Asserting (non-strict mode) type=A ext=.cd
Asserting (non-strict mode) type=B ext=.cd
Asserting (non-strict mode) type=AnyObject ext=.cd
Asserting (non-strict mode) type=C ext=.cd
Asserting (non-strict mode) type=D ext=.cd
Asserting (non-strict mode) type=A ext=.bd
Asserting (non-strict mode) type=B ext=.bd
Asserting (non-strict mode) type=AnyObject ext=.bd
Asserting (non-strict mode) type=C ext=.bd
Asserting (non-strict mode) type=D ext=.bd
Asserting (non-strict mode) type=B ext=.c
Asserting (non-strict mode) type=C ext=.c
Asserting (non-strict mode) type=D ext=.c
Asserting (non-strict mode) type=A ext=.c
Asserting (non-strict mode) type=A ext=.ad
Asserting (non-strict mode) type=B ext=.ad
Asserting (non-strict mode) type=AnyObject ext=.ad
Asserting (non-strict mode) type=C ext=.ad
Asserting (non-strict mode) type=D ext=.ad
Asserting (non-strict mode) type=D ext=.d
Asserting (non-strict mode) type=AnyObject ext=.d
Asserting (non-strict mode) type=C ext=.d
Asserting (non-strict mode) type=A ext=.d
Asserting (non-strict mode) type=B ext=.a
Asserting (non-strict mode) type=AnyObject ext=.a
Asserting (non-strict mode) type=D ext=.a
Asserting (non-strict mode) type=C ext=.a
Asserting (non-strict mode) type=A ext=.a
Asserting (non-strict mode) type=A ext=&lt;multifile&gt;
Asserting (non-strict mode) type=B ext=&lt;multifile&gt;
Asserting (non-strict mode) type=AnyObject ext=&lt;multifile&gt;
Asserting (non-strict mode) type=C ext=&lt;multifile&gt;
Asserting (non-strict mode) type=D ext=&lt;multifile&gt;
Asserting (non-strict mode) type=A ext=.ab
Asserting (non-strict mode) type=B ext=.ab
Asserting (non-strict mode) type=AnyObject ext=.ab
Asserting (non-strict mode) type=C ext=.ab
Asserting (non-strict mode) type=D ext=.ab
Asserting (non-strict mode) type=A ext=.abc
Asserting (non-strict mode) type=B ext=.abc
Asserting (non-strict mode) type=AnyObject ext=.abc
Asserting (non-strict mode) type=C ext=.abc
Asserting (non-strict mode) type=D ext=.abc
Asserting (non-strict mode) type=B ext=.acd
Asserting (non-strict mode) type=AnyObject ext=.acd
Asserting (non-strict mode) type=D ext=.acd
Asserting (non-strict mode) type=C ext=.acd
Asserting (non-strict mode) type=A ext=.acd
Asserting (non-strict mode) type=B ext=.abcd
Asserting (non-strict mode) type=AnyObject ext=.abcd
Asserting (non-strict mode) type=D ext=.abcd
Asserting (non-strict mode) type=C ext=.abcd
Asserting (non-strict mode) type=A ext=.abcd
Asserting (non-strict mode) type=B ext=.bc
Asserting (non-strict mode) type=C ext=.bc
Asserting (non-strict mode) type=D ext=.bc
Asserting (non-strict mode) type=A ext=.bc
Asserting (non-strict mode) type=B ext=.bcd
Asserting (non-strict mode) type=AnyObject ext=.bcd
Asserting (non-strict mode) type=D ext=.bcd
Asserting (non-strict mode) type=C ext=.bcd
Asserting (non-strict mode) type=A ext=.bcd
Asserting (non-strict mode) type=B ext=.ac
Asserting (non-strict mode) type=AnyObject ext=.ac
Asserting (non-strict mode) type=D ext=.ac
Asserting (non-strict mode) type=C ext=.ac
Asserting (non-strict mode) type=A ext=.ac
Asserting (non-strict mode) type=B ext=.abd
Asserting (non-strict mode) type=AnyObject ext=.abd
Asserting (non-strict mode) type=D ext=.abd
Asserting (non-strict mode) type=C ext=.abd
Asserting (non-strict mode) type=A ext=.abd
Asserting (non-strict mode) type=B ext=.b
Asserting (non-strict mode) type=C ext=.b
Asserting (non-strict mode) type=A ext=.b
Asserting (non-strict mode) type=B ext=.bd
Asserting (non-strict mode) type=AnyObject ext=.bd
Asserting (non-strict mode) type=D ext=.bd
Asserting (non-strict mode) type=C ext=.bd
Asserting (non-strict mode) type=A ext=.bd
Asserting (non-strict mode) type=B ext=.c
Asserting (non-strict mode) type=C ext=.c
Asserting (non-strict mode) type=D ext=.c
Asserting (non-strict mode) type=A ext=.c
Asserting (non-strict mode) type=B ext=.ad
Asserting (non-strict mode) type=AnyObject ext=.ad
Asserting (non-strict mode) type=D ext=.ad
Asserting (non-strict mode) type=C ext=.ad
Asserting (non-strict mode) type=A ext=.ad
Asserting (non-strict mode) type=B ext=.a
Asserting (non-strict mode) type=AnyObject ext=.a
Asserting (non-strict mode) type=D ext=.a
Asserting (non-strict mode) type=C ext=.a
Asserting (non-strict mode) type=A ext=.a
Asserting (non-strict mode) type=B ext=.cd
Asserting (non-strict mode) type=AnyObject ext=.cd
Asserting (non-strict mode) type=D ext=.cd
Asserting (non-strict mode) type=C ext=.cd
Asserting (non-strict mode) type=A ext=.cd
Asserting (non-strict mode) type=B ext=&lt;multifile&gt;
Asserting (non-strict mode) type=AnyObject ext=&lt;multifile&gt;
Asserting (non-strict mode) type=D ext=&lt;multifile&gt;
Asserting (non-strict mode) type=C ext=&lt;multifile&gt;
Asserting (non-strict mode) type=A ext=&lt;multifile&gt;
Asserting (non-strict mode) type=B ext=.ab
Asserting (non-strict mode) type=AnyObject ext=.ab
Asserting (non-strict mode) type=D ext=.ab
Asserting (non-strict mode) type=C ext=.ab
Asserting (non-strict mode) type=A ext=.ab
Asserting (non-strict mode) type=A ext=.d
Asserting (non-strict mode) type=AnyObject ext=.d
Asserting (non-strict mode) type=C ext=.d
Asserting (non-strict mode) type=D ext=.d
Asserting (non-strict mode) type=B ext=.abc
Asserting (non-strict mode) type=AnyObject ext=.abc
Asserting (non-strict mode) type=D ext=.abc
Asserting (non-strict mode) type=C ext=.abc
Asserting (non-strict mode) type=A ext=.abc
Asserting (non-strict mode) type=B ext=.acd
Asserting (non-strict mode) type=AnyObject ext=.acd
Asserting (non-strict mode) type=D ext=.acd
Asserting (non-strict mode) type=C ext=.acd
Asserting (non-strict mode) type=A ext=.acd
Asserting (non-strict mode) type=B ext=.abcd
Asserting (non-strict mode) type=AnyObject ext=.abcd
Asserting (non-strict mode) type=D ext=.abcd
Asserting (non-strict mode) type=C ext=.abcd
Asserting (non-strict mode) type=A ext=.abcd
Asserting (non-strict mode) type=B ext=.bc
Asserting (non-strict mode) type=C ext=.bc
Asserting (non-strict mode) type=D ext=.bc
Asserting (non-strict mode) type=A ext=.bc
Asserting (non-strict mode) type=B ext=.bcd
Asserting (non-strict mode) type=AnyObject ext=.bcd
Asserting (non-strict mode) type=D ext=.bcd
Asserting (non-strict mode) type=C ext=.bcd
Asserting (non-strict mode) type=A ext=.bcd
Asserting (non-strict mode) type=B ext=.ac
Asserting (non-strict mode) type=AnyObject ext=.ac
Asserting (non-strict mode) type=D ext=.ac
Asserting (non-strict mode) type=C ext=.ac
Asserting (non-strict mode) type=A ext=.ac
Asserting (non-strict mode) type=B ext=.abd
Asserting (non-strict mode) type=AnyObject ext=.abd
Asserting (non-strict mode) type=D ext=.abd
Asserting (non-strict mode) type=C ext=.abd
Asserting (non-strict mode) type=A ext=.abd
Asserting (non-strict mode) type=B ext=.b
Asserting (non-strict mode) type=C ext=.b
Asserting (non-strict mode) type=A ext=.b
Asserting (non-strict mode) type=B ext=.bd
Asserting (non-strict mode) type=AnyObject ext=.bd
Asserting (non-strict mode) type=D ext=.bd
Asserting (non-strict mode) type=C ext=.bd
Asserting (non-strict mode) type=A ext=.bd
Asserting (non-strict mode) type=B ext=.c
Asserting (non-strict mode) type=C ext=.c
Asserting (non-strict mode) type=D ext=.c
Asserting (non-strict mode) type=A ext=.c
Asserting (non-strict mode) type=B ext=.ad
Asserting (non-strict mode) type=AnyObject ext=.ad
Asserting (non-strict mode) type=D ext=.ad
Asserting (non-strict mode) type=C ext=.ad
Asserting (non-strict mode) type=A ext=.ad
Asserting (non-strict mode) type=B ext=.a
Asserting (non-strict mode) type=AnyObject ext=.a
Asserting (non-strict mode) type=D ext=.a
Asserting (non-strict mode) type=C ext=.a
Asserting (non-strict mode) type=A ext=.a
Asserting (non-strict mode) type=B ext=.cd
Asserting (non-strict mode) type=AnyObject ext=.cd
Asserting (non-strict mode) type=D ext=.cd
Asserting (non-strict mode) type=C ext=.cd
Asserting (non-strict mode) type=A ext=.cd
Asserting (non-strict mode) type=B ext=&lt;multifile&gt;
Asserting (non-strict mode) type=AnyObject ext=&lt;multifile&gt;
Asserting (non-strict mode) type=D ext=&lt;multifile&gt;
Asserting (non-strict mode) type=C ext=&lt;multifile&gt;
Asserting (non-strict mode) type=A ext=&lt;multifile&gt;
Asserting (non-strict mode) type=B ext=.ab
Asserting (non-strict mode) type=AnyObject ext=.ab
Asserting (non-strict mode) type=D ext=.ab
Asserting (non-strict mode) type=C ext=.ab
Asserting (non-strict mode) type=A ext=.ab
Asserting (non-strict mode) type=A ext=.d
Asserting (non-strict mode) type=AnyObject ext=.d
Asserting (non-strict mode) type=C ext=.d
Asserting (non-strict mode) type=D ext=.d
Asserting (non-strict mode) type=B ext=.abc
Asserting (non-strict mode) type=AnyObject ext=.abc
Asserting (non-strict mode) type=D ext=.abc
Asserting (non-strict mode) type=C ext=.abc
Asserting (non-strict mode) type=A ext=.abc
Asserting (non-strict mode) type=B ext=.acd
Asserting (non-strict mode) type=AnyObject ext=.acd
Asserting (non-strict mode) type=D ext=.acd
Asserting (non-strict mode) type=C ext=.acd
Asserting (non-strict mode) type=A ext=.acd
Asserting (non-strict mode) type=B ext=.abcd
Asserting (non-strict mode) type=AnyObject ext=.abcd
Asserting (non-strict mode) type=D ext=.abcd
Asserting (non-strict mode) type=C ext=.abcd
Asserting (non-strict mode) type=A ext=.abcd
Asserting (non-strict mode) type=B ext=.bc
Asserting (non-strict mode) type=C ext=.bc
Asserting (non-strict mode) type=D ext=.bc
Asserting (non-strict mode) type=A ext=.bc
Asserting (non-strict mode) type=B ext=.bcd
Asserting (non-strict mode) type=AnyObject ext=.bcd
Asserting (non-strict mode) type=D ext=.bcd
Asserting (non-strict mode) type=C ext=.bcd
Asserting (non-strict mode) type=A ext=.bcd
Asserting (non-strict mode) type=B ext=.ac
Asserting (non-strict mode) type=AnyObject ext=.ac
Asserting (non-strict mode) type=D ext=.ac
Asserting (non-strict mode) type=C ext=.ac
Asserting (non-strict mode) type=A ext=.ac
Asserting (non-strict mode) type=B ext=.abd
Asserting (non-strict mode) type=AnyObject ext=.abd
Asserting (non-strict mode) type=D ext=.abd
Asserting (non-strict mode) type=C ext=.abd
Asserting (non-strict mode) type=A ext=.abd
Asserting (non-strict mode) type=B ext=.b
Asserting (non-strict mode) type=C ext=.b
Asserting (non-strict mode) type=A ext=.b
Asserting (non-strict mode) type=B ext=.cd
Asserting (non-strict mode) type=AnyObject ext=.cd
Asserting (non-strict mode) type=D ext=.cd
Asserting (non-strict mode) type=C ext=.cd
Asserting (non-strict mode) type=A ext=.cd
Asserting (non-strict mode) type=B ext=.bd
Asserting (non-strict mode) type=AnyObject ext=.bd
Asserting (non-strict mode) type=D ext=.bd
Asserting (non-strict mode) type=C ext=.bd
Asserting (non-strict mode) type=A ext=.bd
Asserting (non-strict mode) type=B ext=.c
Asserting (non-strict mode) type=C ext=.c
Asserting (non-strict mode) type=D ext=.c
Asserting (non-strict mode) type=A ext=.c
Asserting (non-strict mode) type=B ext=.ad
Asserting (non-strict mode) type=AnyObject ext=.ad
Asserting (non-strict mode) type=D ext=.ad
Asserting (non-strict mode) type=C ext=.ad
Asserting (non-strict mode) type=A ext=.ad
Asserting (non-strict mode) type=A ext=.d
Asserting (non-strict mode) type=AnyObject ext=.d
Asserting (non-strict mode) type=C ext=.d
Asserting (non-strict mode) type=D ext=.d
Asserting (non-strict mode) type=B ext=.a
Asserting (non-strict mode) type=AnyObject ext=.a
Asserting (non-strict mode) type=D ext=.a
Asserting (non-strict mode) type=C ext=.a
Asserting (non-strict mode) type=A ext=.a
Asserting (non-strict mode) type=A ext=&lt;multifile&gt;
Asserting (non-strict mode) type=B ext=&lt;multifile&gt;
Asserting (non-strict mode) type=AnyObject ext=&lt;multifile&gt;
Asserting (non-strict mode) type=C ext=&lt;multifile&gt;
Asserting (non-strict mode) type=D ext=&lt;multifile&gt;
Asserting (non-strict mode) type=B ext=.ab
Asserting (non-strict mode) type=AnyObject ext=.ab
Asserting (non-strict mode) type=D ext=.ab
Asserting (non-strict mode) type=C ext=.ab
Asserting (non-strict mode) type=A ext=.ab
Asserting (non-strict mode) type=B ext=.abc
Asserting (non-strict mode) type=AnyObject ext=.abc
Asserting (non-strict mode) type=D ext=.abc
Asserting (non-strict mode) type=C ext=.abc
Asserting (non-strict mode) type=A ext=.abc
Asserting (non-strict mode) type=A ext=.acd
Asserting (non-strict mode) type=B ext=.acd
Asserting (non-strict mode) type=AnyObject ext=.acd
Asserting (non-strict mode) type=C ext=.acd
Asserting (non-strict mode) type=D ext=.acd
Asserting (non-strict mode) type=A ext=.abcd
Asserting (non-strict mode) type=B ext=.abcd
Asserting (non-strict mode) type=AnyObject ext=.abcd
Asserting (non-strict mode) type=C ext=.abcd
Asserting (non-strict mode) type=D ext=.abcd
Asserting (non-strict mode) type=B ext=.bc
Asserting (non-strict mode) type=C ext=.bc
Asserting (non-strict mode) type=D ext=.bc
Asserting (non-strict mode) type=A ext=.bc
Asserting (non-strict mode) type=A ext=.bcd
Asserting (non-strict mode) type=B ext=.bcd
Asserting (non-strict mode) type=AnyObject ext=.bcd
Asserting (non-strict mode) type=C ext=.bcd
Asserting (non-strict mode) type=D ext=.bcd
Asserting (non-strict mode) type=A ext=.ac
Asserting (non-strict mode) type=B ext=.ac
Asserting (non-strict mode) type=AnyObject ext=.ac
Asserting (non-strict mode) type=C ext=.ac
Asserting (non-strict mode) type=D ext=.ac
Asserting (non-strict mode) type=A ext=.abd
Asserting (non-strict mode) type=B ext=.abd
Asserting (non-strict mode) type=AnyObject ext=.abd
Asserting (non-strict mode) type=C ext=.abd
Asserting (non-strict mode) type=D ext=.abd
Asserting (non-strict mode) type=B ext=.b
Asserting (non-strict mode) type=C ext=.b
Asserting (non-strict mode) type=A ext=.b
Asserting (non-strict mode) type=A ext=.bd
Asserting (non-strict mode) type=B ext=.bd
Asserting (non-strict mode) type=AnyObject ext=.bd
Asserting (non-strict mode) type=C ext=.bd
Asserting (non-strict mode) type=D ext=.bd
Asserting (non-strict mode) type=B ext=.c
Asserting (non-strict mode) type=C ext=.c
Asserting (non-strict mode) type=D ext=.c
Asserting (non-strict mode) type=A ext=.c
Asserting (non-strict mode) type=A ext=.ad
Asserting (non-strict mode) type=B ext=.ad
Asserting (non-strict mode) type=AnyObject ext=.ad
Asserting (non-strict mode) type=C ext=.ad
Asserting (non-strict mode) type=D ext=.ad
Asserting (non-strict mode) type=B ext=.a
Asserting (non-strict mode) type=AnyObject ext=.a
Asserting (non-strict mode) type=D ext=.a
Asserting (non-strict mode) type=C ext=.a
Asserting (non-strict mode) type=A ext=.a
Asserting (non-strict mode) type=A ext=.cd
Asserting (non-strict mode) type=B ext=.cd
Asserting (non-strict mode) type=AnyObject ext=.cd
Asserting (non-strict mode) type=C ext=.cd
Asserting (non-strict mode) type=D ext=.cd
Asserting (non-strict mode) type=B ext=&lt;multifile&gt;
Asserting (non-strict mode) type=AnyObject ext=&lt;multifile&gt;
Asserting (non-strict mode) type=D ext=&lt;multifile&gt;
Asserting (non-strict mode) type=C ext=&lt;multifile&gt;
Asserting (non-strict mode) type=A ext=&lt;multifile&gt;
Asserting (non-strict mode) type=A ext=.ab
Asserting (non-strict mode) type=B ext=.ab
Asserting (non-strict mode) type=AnyObject ext=.ab
Asserting (non-strict mode) type=C ext=.ab
Asserting (non-strict mode) type=D ext=.ab
Asserting (non-strict mode) type=D ext=.d
Asserting (non-strict mode) type=AnyObject ext=.d
Asserting (non-strict mode) type=C ext=.d
Asserting (non-strict mode) type=A ext=.d
Asserting (non-strict mode) type=A ext=.abc
Asserting (non-strict mode) type=B ext=.abc
Asserting (non-strict mode) type=AnyObject ext=.abc
Asserting (non-strict mode) type=C ext=.abc
Asserting (non-strict mode) type=D ext=.abc
</system-out></testcase><testcase classname="parsyfiles.tests.combining_parsers_converters.test_registries.TestParserRegistry" file="parsyfiles/tests/combining_parsers_converters/test_registries.py" line="356" name="test_d_correct_parsers_in_order_strict" time="0.2536442279815674"><system-out>.
.d
.c
.cd
.b
.bd
.bc
.bcd
.a
.ad
.ac
.acd
.ab
.abd
.abc
.abcd
Checking list of parsers returned for (strict mode) type=A ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=A ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=C ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abc
First generic
Then specific strict
</system-out></testcase><testcase classname="parsyfiles.tests.combining_parsers_converters.test_registries.TestParserRegistry" file="parsyfiles/tests/combining_parsers_converters/test_registries.py" line="364" name="test_e_correct_parsers_in_order_nonstrict" time="0.2737090587615967"><system-out>.
.d
.c
.cd
.b
.bd
.bc
.bcd
.a
.ad
.ac
.acd
.ab
.abd
.abc
.abcd
Checking list of parsers returned for (non-strict mode) type=A ext=.acd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.d
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ac
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.b
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.c
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.a
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ad
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=&lt;multifile&gt;
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.cd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ab
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.acd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.d
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ac
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.b
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.c
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.a
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ad
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=&lt;multifile&gt;
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.cd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ab
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.acd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.d
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ac
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.b
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.c
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.a
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ad
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=&lt;multifile&gt;
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.cd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ab
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.acd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.d
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ac
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.b
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.c
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.a
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ad
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=&lt;multifile&gt;
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.cd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ab
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.acd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.d
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ac
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.b
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.c
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.a
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ad
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=&lt;multifile&gt;
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.cd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ab
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.acd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.d
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ac
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.b
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.c
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.a
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ad
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=&lt;multifile&gt;
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.cd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ab
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.acd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.d
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ac
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.b
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.c
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.a
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ad
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=&lt;multifile&gt;
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.cd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ab
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.acd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.d
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ac
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.b
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.c
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.a
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ad
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=&lt;multifile&gt;
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.cd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ab
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.acd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.d
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ac
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.b
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.c
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.a
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ad
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=&lt;multifile&gt;
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.cd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ab
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.acd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.d
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ac
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.b
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.c
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.a
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ad
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=&lt;multifile&gt;
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.cd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ab
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.acd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.d
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ac
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.b
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.c
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.a
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ad
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=&lt;multifile&gt;
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.cd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ab
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.acd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.d
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ac
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.b
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.c
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.a
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ad
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=&lt;multifile&gt;
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.cd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ab
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.acd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.d
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ac
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.b
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.c
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.a
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ad
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=&lt;multifile&gt;
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.cd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ab
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.acd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.d
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ac
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.b
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.c
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.a
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ad
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=&lt;multifile&gt;
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.cd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ab
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.acd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.d
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ac
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.b
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.c
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.a
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ad
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=&lt;multifile&gt;
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.cd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ab
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.acd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.d
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ac
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.b
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.c
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.a
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ad
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=&lt;multifile&gt;
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.cd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ab
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.acd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.d
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.bcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ac
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.b
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.c
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.a
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ad
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=&lt;multifile&gt;
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.cd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.ab
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=A ext=.abc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=B ext=.abc
First generic
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.acd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.d
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.bcd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ac
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.b
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.c
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.a
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ad
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=&lt;multifile&gt;
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.cd
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.ab
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (non-strict mode) type=C ext=.abc
First generic
Then specific non-strict
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.acd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bc
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.d
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.bcd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ac
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.b
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.c
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.a
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ad
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=&lt;multifile&gt;
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.cd
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.ab
First generic
Then specific strict
Checking list of parsers returned for (strict mode) type=D ext=.abc
First generic
Then specific strict
</system-out></testcase><testcase classname="parsyfiles.tests.demo.test_parsyfiles_readme.DemoTests" file="parsyfiles/tests/demo/test_parsyfiles_readme.py" line="32" name="test_a_helloworld" time="0.07604098320007324"><failure message="FileNotFoundError: [Errno 2] No such file or directory: &apos;a_helloworld&apos;">self = &lt;test_parsyfiles_readme.DemoTests testMethod=test_a_helloworld&gt;

    def test_a_helloworld(self):
    
        with self.assertRaises(FileNotFoundError):
            result = parse_item(&apos;hello_world&apos;, str)
    
        with self.assertRaises(ObjectNotFoundOnFileSystemError):
&gt;           result = parse_item(&apos;a_helloworld/hello_world.txt&apos;, str)

parsyfiles/tests/demo/test_parsyfiles_readme.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
parsyfiles/parsing_fw.py:398: in parse_item
    options=opts)
parsyfiles/parsing_fw.py:276: in parse_item
    return self._parse__item(item_type, location, file_mapping_conf, options=options)
parsyfiles/parsing_fw.py:296: in _parse__item
    obj = file_mapping_conf.create_persisted_object(item_file_prefix, logger=self.logger)
parsyfiles/filesystem_mapping.py:459: in create_persisted_object
    logger=logger)
parsyfiles/filesystem_mapping.py:383: in __init__
    is_singlefile, ext, self._contents_or_path = self.file_mapping_conf.get_unique_object_contents(location)
parsyfiles/filesystem_mapping.py:149: in get_unique_object_contents
    simpleobjects_found = self.find_simpleobject_file_occurrences(location)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def find_simpleobject_file_occurrences(self, location) -&gt; Dict[str, str]:
        &quot;&quot;&quot;
            Implementation of the parent abstract method.
    
            :param location:
            :return: a dictionary of {ext : file_path}
            &quot;&quot;&quot;
        parent_dir = dirname(location)
        if parent_dir is &apos;&apos;:
            parent_dir = &apos;.&apos;
        base_prefix = basename(location)
    
        possible_object_files = {object_file[len(base_prefix):]: join(parent_dir, object_file)
&gt;                                for object_file in listdir(parent_dir) if
                                 isfile(parent_dir + &apos;/&apos; + object_file)
                                 and object_file.startswith(base_prefix)
                                 # file must be named base_prefix.something
                                 and object_file != base_prefix
                                 and object_file[len(base_prefix)] == EXT_SEPARATOR
                                 and (object_file[len(base_prefix):]).count(EXT_SEPARATOR) == 1}
E       FileNotFoundError: [Errno 2] No such file or directory: &apos;a_helloworld&apos;

parsyfiles/filesystem_mapping.py:560: FileNotFoundError</failure></testcase><testcase classname="parsyfiles.tests.demo.test_parsyfiles_readme.DemoTests" file="parsyfiles/tests/demo/test_parsyfiles_readme.py" line="281" name="test_multifile_objects" time="0.28572940826416016"><system-out>--&gt; Successfully parsed a AlgoResults from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./complex_objects/case1/expected_results
--&gt; Successfully parsed a Series from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./complex_objects/case1/x
--&gt; Successfully parsed a AlgoConf from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./complex_objects/case1/y
--&gt; Successfully parsed a ExecOpSeriesTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./complex_objects/case1
--&gt; Successfully parsed a AlgoResults from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./complex_objects/case2/expected_results
--&gt; Successfully parsed a Series from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./complex_objects/case2/x
--&gt; Successfully parsed a AlgoConf from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./complex_objects/case2/y
--&gt; Successfully parsed a ExecOpSeriesTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./complex_objects/case2
--&gt; Successfully parsed a Dict[str, ExecOpSeriesTest] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./complex_objects

OrderedDict([(&apos;case1&apos;,
              &lt;test_parsyfiles_readme.DemoTests.test_multifile_objects.&lt;locals&gt;.ExecOpSeriesTest object at 0x7fcc821f4978&gt;),
             (&apos;case2&apos;,
              &lt;test_parsyfiles_readme.DemoTests.test_multifile_objects.&lt;locals&gt;.ExecOpSeriesTest object at 0x7fcc821f4a90&gt;)])
{&apos;.cfg&apos;: {&apos;3_generic&apos;: [$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$,
                        $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$,
                        $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.csv&apos;: {&apos;3_generic&apos;: [$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.ini&apos;: {&apos;3_generic&apos;: [$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$,
                        $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$,
                        $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.json&apos;: {&apos;3_generic&apos;: [$&lt;read_dict_or_list_from_json&gt; =&gt; &lt;dict_to_object&gt;$]},
 &apos;.properties&apos;: {&apos;3_generic&apos;: [$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$]},
 &apos;.pyc&apos;: {&apos;3_generic&apos;: [&lt;read_object_from_pickle&gt;]},
 &apos;.txt&apos;: {&apos;3_generic&apos;: [$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$,
                        $&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$,
                        $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$,
                        $&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.xls&apos;: {&apos;3_generic&apos;: [$&lt;read_dataframe_from_xls&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.xlsm&apos;: {&apos;3_generic&apos;: [$&lt;read_dataframe_from_xls&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.xlsx&apos;: {&apos;3_generic&apos;: [$&lt;read_dataframe_from_xls&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.yaml&apos;: {&apos;3_generic&apos;: [&lt;read_object_from_yaml&gt;,
                         $&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$]},
 &apos;.yml&apos;: {&apos;3_generic&apos;: [&lt;read_object_from_yaml&gt;,
                        $&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$]},
 &apos;&lt;multifile&gt;&apos;: {&apos;3_generic&apos;: [Multifile Object parser (parsyfiles defaults)]}}
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./complex_objects_flat/case1--expected_results
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./complex_objects_flat/case1--x
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./complex_objects_flat/case1--y
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./complex_objects_flat/case2--expected_results
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./complex_objects_flat/case2--x
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./complex_objects_flat/case2--y
--&gt; Successfully parsed a Dict[str, DataFrame] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./complex_objects_flat

OrderedDict([(&apos;case1--expected_results&apos;,   score = 5.0
0  perf = 2.1),
             (&apos;case1--x&apos;,
                          t       v
0  2000-01-01     bug
1  2000-01-02  normal),
             (&apos;case1--y&apos;,   foo_param = &quot;foo&quot;
0   bar_param = 2.0),
             (&apos;case2--expected_results&apos;,   score = 5.0
0  perf = 2.1),
             (&apos;case2--x&apos;,   2000-01-05 2000-01-06
0        foo        bar),
             (&apos;case2--y&apos;,   foo_param = &quot;bar&quot;
0     bar_param = 2)])
</system-out></testcase><testcase classname="parsyfiles.tests.demo.test_parsyfiles_readme.DemoTests" file="parsyfiles/tests/demo/test_parsyfiles_readme.py" line="359" name="test_parse_subclass_of_known_with_custom_converter" time="0.0801093578338623"><system-out>--&gt; Successfully parsed a TimeSeries from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./ts_collection/a
--&gt; Successfully parsed a TimeSeries from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./ts_collection/b
--&gt; Successfully parsed a TimeSeries from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./ts_collection/c
--&gt; Successfully parsed a Dict[str, TimeSeries] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./ts_collection

</system-out></testcase><testcase classname="parsyfiles.tests.demo.test_parsyfiles_readme.DemoTests" file="parsyfiles/tests/demo/test_parsyfiles_readme.py" line="427" name="test_parse_with_custom_parser" time="0.03809618949890137"><system-out>--&gt; Successfully parsed a ElementTree from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./xml_collection/a
--&gt; Successfully parsed a ElementTree from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./xml_collection/b
--&gt; Successfully parsed a Dict[str, ElementTree] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./xml_collection

{&apos;a&apos;: b&apos;&lt;a&gt;\n\t&lt;hello /&gt;\n&lt;/a&gt;&apos;, &apos;b&apos;: b&apos;&lt;a&gt;\n\t&lt;hello /&gt;\n&lt;/a&gt;&apos;}
</system-out></testcase><testcase classname="parsyfiles.tests.demo.test_parsyfiles_readme.DemoTests" file="parsyfiles/tests/demo/test_parsyfiles_readme.py" line="327" name="test_pass_parser_options" time="0.13727474212646484"><system-out>Parser id for csv is : read_df_or_series_from_csv, implementing function is &lt;function read_df_or_series_from_csv at 0x7fcc83328d08&gt;
option hints : read_df_or_series_from_csv: all options from read_csv are supported, see http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html
Parser id for csv is : read_dataframe_from_xls, implementing function is &lt;function read_dataframe_from_xls at 0x7fcc838fdbf8&gt;
option hints : read_dataframe_from_xls: all options from read_excel are supported, see http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_excel.html
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./ts_collection/a
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./ts_collection/b
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./ts_collection/c
--&gt; Successfully parsed a Dict[str, DataFrame] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./ts_collection

OrderedDict([(&apos;a&apos;,                      a  b  c  d
time                           
2015-08-28 23:30:00  1  2  3  4
2015-08-29 00:00:00  1  2  3  5), (&apos;b&apos;,                      a  b  c  d
time                           
2015-08-28 23:30:00  1  2  3  4
2015-08-29 00:00:00  1  2  3  5), (&apos;c&apos;,             a  b
date            
2015-01-01  1  2
2015-01-02  4  3)])
</system-out></testcase><testcase classname="parsyfiles.tests.demo.test_parsyfiles_readme.DemoTests" file="parsyfiles/tests/demo/test_parsyfiles_readme.py" line="44" name="test_simple_collection" time="0.22250986099243164"><system-out>--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/a
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/b
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/c
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/d
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/e
--&gt; Successfully parsed a Dict[str, DataFrame] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection

OrderedDict([(&apos;a&apos;,    a  b  c  d
0  1  2  3  4),
             (&apos;b&apos;,    a  b  c  d
0  1  2  3  4),
             (&apos;c&apos;,    c   5
0  d   8
1  e  12
2  f   3),
             (&apos;d&apos;,    c   5
0  d   8
1  e  12
2  f   3),
             (&apos;e&apos;,    c   5
0  d   8
1  e  12
2  f   3)])
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/c

   c   5
0  d   8
1  e  12
2  f   3
{&apos;.cfg&apos;: {&apos;1_exact_match&apos;: [$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt;$,
                            $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt;$]},
 &apos;.csv&apos;: {&apos;1_exact_match&apos;: [&lt;read_df_or_series_from_csv&gt;]},
 &apos;.ini&apos;: {&apos;1_exact_match&apos;: [$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt;$,
                            $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt;$]},
 &apos;.json&apos;: {&apos;1_exact_match&apos;: [$&lt;read_dict_or_list_from_json&gt; =&gt; &lt;dict_to_df&gt;$]},
 &apos;.properties&apos;: {&apos;1_exact_match&apos;: [$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_df&gt;$]},
 &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [$&lt;read_object_from_pickle&gt; =&gt; &lt;dict_to_df&gt;$,
                            $&lt;read_object_from_pickle&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt;$,
                            $&lt;read_object_from_pickle&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt;$],
          &apos;3_generic&apos;: [&lt;read_object_from_pickle&gt;]},
 &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&lt;read_df_or_series_from_csv&gt;,
                            $&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_df&gt;$],
          &apos;3_generic&apos;: [$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$,
                        $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$]},
 &apos;.xls&apos;: {&apos;1_exact_match&apos;: [&lt;read_dataframe_from_xls&gt;]},
 &apos;.xlsm&apos;: {&apos;1_exact_match&apos;: [&lt;read_dataframe_from_xls&gt;]},
 &apos;.xlsx&apos;: {&apos;1_exact_match&apos;: [&lt;read_dataframe_from_xls&gt;]},
 &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [$&lt;read_object_from_yaml&gt; =&gt; &lt;dict_to_df&gt;$,
                             $&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_df&gt;$,
                             $&lt;read_object_from_yaml&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt;$,
                             $&lt;read_object_from_yaml&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt;$],
           &apos;3_generic&apos;: [&lt;read_object_from_yaml&gt;]},
 &apos;.yml&apos;: {&apos;1_exact_match&apos;: [$&lt;read_object_from_yaml&gt; =&gt; &lt;dict_to_df&gt;$,
                            $&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_df&gt;$,
                            $&lt;read_object_from_yaml&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_df&gt;$,
                            $&lt;read_object_from_yaml&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_df&gt;$],
          &apos;3_generic&apos;: [&lt;read_object_from_yaml&gt;]},
 &apos;&lt;multifile&gt;&apos;: {}}
</system-out></testcase><testcase classname="parsyfiles.tests.demo.test_parsyfiles_readme.DemoTests" file="parsyfiles/tests/demo/test_parsyfiles_readme.py" line="318" name="test_simple_collection_dataframe_all" time="0.14556002616882324"><system-out>--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection_dataframe_inference/a
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection_dataframe_inference/b
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection_dataframe_inference/c
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection_dataframe_inference/d
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection_dataframe_inference/s_b64_pickle
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection_dataframe_inference/u
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection_dataframe_inference/v_properties
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection_dataframe_inference/w
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection_dataframe_inference/x
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection_dataframe_inference/y
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection_dataframe_inference/z
--&gt; Successfully parsed a Dict[str, DataFrame] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection_dataframe_inference

OrderedDict([(&apos;a&apos;,    a  b  c  d
0  1  2  3  4),
             (&apos;b&apos;,    a  b  c  d
0  1  2  3  4),
             (&apos;c&apos;, Empty DataFrame
Columns: []
Index: []),
             (&apos;d&apos;, Empty DataFrame
Columns: []
Index: []),
             (&apos;s_b64_pickle&apos;,
              Empty DataFrame
Columns: [gANjcGFuZGFzLmNvcmUuZnJhbWUKRGF0YUZyYW1lCnEAKYFxAX1xAihYCQAAAF9tZXRhZGF0YXEDXXEEWAQAAABfdHlwcQVYCQAAAGRhdGFmcmFtZXEGWAUAAABfZGF0YXEHY3BhbmRhcy5jb3JlLmludGVybmFscwpCbG9ja01hbmFnZXIKcQgpgXEJKF1xCihjcGFuZGFzLmluZGV4ZXMuYmFzZQpfbmV3X0luZGV4CnELY3BhbmRhcy5pbmRleGVzLmJhc2UKSW5kZXgKcQx9cQ0oWAQAAABkYXRhcQ5jbnVtcHkuY29yZS5tdWx0aWFycmF5Cl9yZWNvbnN0cnVjdApxD2NudW1weQpuZGFycmF5CnEQSwCFcRFDAWJxEodxE1JxFChLAUsChXEVY251bXB5CmR0eXBlCnEWWAIAAABPOHEXSwBLAYdxGFJxGShLA1gBAAAAfHEaTk5OSv////9K/////0s/dHEbYoldcRwoWAEAAABjcR1LBWV0cR5iWAQAAABuYW1lcR9OdYZxIFJxIWgLY3BhbmRhcy5pbmRleGVzLnJhbmdlClJhbmdlSW5kZXgKcSJ9cSMoWAUAAABzdGFydHEkSwBYBAAAAHN0ZXBxJUsBWAQAAABzdG9wcSZLA2gfTnWGcSdScShlXXEpKGgPaBBLAIVxKmgSh3ErUnEsKEsBSwFLA4ZxLWgWWAIAAABpOHEuSwBLAYdxL1JxMChLA1gBAAAAPHExTk5OSv////9K/////0sAdHEyYolDGAgAAAAAAAAADAAAAAAAAAADAAAAAAAAAHEzdHE0YmgPaBBLAIVxNWgSh3E2UnE3KEsBSwFLA4ZxOGgZiV1xOShYAQAAAGRxOlgBAAAAZXE7WAEAAABmcTxldHE9YmVdcT4oaAtoDH1xPyhoDmgPaBBLAIVxQGgSh3FBUnFCKEsBSwGFcUNoGYldcURLBWF0cUViaB9OdYZxRlJxR2gLaAx9cUgoaA5oD2gQSwCFcUloEodxSlJxSyhLAUsBhXFMaBmJXXFNaB1hdHFOYmgfTnWGcU9ScVBlfXFRWAYAAAAwLjE0LjFxUn1xUyhYBAAAAGF4ZXNxVGgKWAYAAABibG9ja3NxVV1xVih9cVcoWAYAAAB2YWx1ZXNxWGgsWAgAAABtZ3JfbG9jc3FZY2J1aWx0aW5zCnNsaWNlCnFaSwFLAksBh3FbUnFcdX1xXShoWGg3aFloWksASwFLAYdxXlJxX3VldXN0cWBidWIu]
Index: []),
             (&apos;u&apos;,    a  b  c  d
0  1  2  +  3),
             (&apos;v_properties&apos;,    a = 1
0  b = 1
1  c = +
2  d = 2),
             (&apos;w&apos;,    a  b  c  d
0  0  1  +  1),
             (&apos;x&apos;,    r  t  u  x
0  7  +  5  2),
             (&apos;y&apos;,    d  r  s  t
0  0  1  1  -),
             (&apos;z&apos;,     d  r  s  t
0  -1  0  1  -)])
</system-out></testcase><testcase classname="parsyfiles.tests.demo.test_parsyfiles_readme.DemoTests" file="parsyfiles/tests/demo/test_parsyfiles_readme.py" line="92" name="test_simple_collection_lazy" time="0.10249495506286621"><system-out>--&gt; Successfully parsed a Dict[str, DataFrame] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection

dfs length : 5
dfs keys : odict_keys([&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;e&apos;])
Is b in dfs : True
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/b
   a  b  c  d
0  1  2  3  4
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/a
   a  b  c  d
0  1  2  3  4
   a  b  c  d
0  1  2  3  4
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/c
   c   5
0  d   8
1  e  12
2  f   3
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/d
   c   5
0  d   8
1  e  12
2  f   3
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/e
   c   5
0  d   8
1  e  12
2  f   3
   a  b  c  d
0  1  2  3  4
   a  b  c  d
0  1  2  3  4
   c   5
0  d   8
1  e  12
2  f   3
   c   5
0  d   8
1  e  12
2  f   3
   c   5
0  d   8
1  e  12
2  f   3
{&apos;a&apos;:    a  b  c  d
0  1  2  3  4,
 &apos;b&apos;:    a  b  c  d
0  1  2  3  4,
 &apos;c&apos;:    c   5
0  d   8
1  e  12
2  f   3,
 &apos;d&apos;:    c   5
0  d   8
1  e  12
2  f   3,
 &apos;e&apos;:    c   5
0  d   8
1  e  12
2  f   3}
</system-out></testcase><testcase classname="parsyfiles.tests.demo.test_parsyfiles_readme.DemoTests" file="parsyfiles/tests/demo/test_parsyfiles_readme.py" line="73" name="test_simple_collection_nologs" time="0.12303566932678223"><system-out>OrderedDict([(&apos;a&apos;,    a  b  c  d
0  1  2  3  4),
             (&apos;b&apos;,    a  b  c  d
0  1  2  3  4),
             (&apos;c&apos;,    c   5
0  d   8
1  e  12
2  f   3),
             (&apos;d&apos;,    c   5
0  d   8
1  e  12
2  f   3),
             (&apos;e&apos;,    c   5
0  d   8
1  e  12
2  f   3)])
   c   5
0  d   8
1  e  12
2  f   3
</system-out></testcase><testcase classname="parsyfiles.tests.demo.test_parsyfiles_readme.DemoTests" file="parsyfiles/tests/demo/test_parsyfiles_readme.py" line="58" name="test_simple_collection_set_list_tuple" time="0.14186763763427734"><system-out>--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/a
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/b
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/c
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/d
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/e
--&gt; Successfully parsed a List[DataFrame] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection

[   a  b  c  d
0  1  2  3  4,    a  b  c  d
0  1  2  3  4,    c   5
0  d   8
1  e  12
2  f   3,    c   5
0  d   8
1  e  12
2  f   3,    c   5
0  d   8
1  e  12
2  f   3]
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/a
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/b
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/c
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/d
--&gt; Successfully parsed a DataFrame from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection/e
--&gt; Successfully parsed a Tuple[DataFrame, DataFrame, DataFrame, DataFrame, DataFrame] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_collection

(   a  b  c  d
0  1  2  3  4,    a  b  c  d
0  1  2  3  4,    c   5
0  d   8
1  e  12
2  f   3,    c   5
0  d   8
1  e  12
2  f   3,    c   5
0  d   8
1  e  12
2  f   3)
</system-out></testcase><testcase classname="parsyfiles.tests.demo.test_parsyfiles_readme.DemoTests" file="parsyfiles/tests/demo/test_parsyfiles_readme.py" line="253" name="test_simple_object_with_contract_attrs" time="0.09184384346008301"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1 (singlefile, .cfg) &gt; ExecOpTest ------- using $&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; then &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/test_parsyfiles_readme.py&quot;, line 268, in validate_op
    raise ValueError(&apos;\&apos;op\&apos; has to be a string, in &apos; + str(allowed) + &apos;!&apos;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1 (singlefile, .cfg) as a ExecOpTest with parser &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ObjectInstantiationException : Error while building object of type &lt;ExecOpTest&gt; using its constructor and parsed contents : {&apos;y&apos;: 1.0, &apos;expected_result&apos;: 0.0, &apos;x&apos;: 1.0, &apos;op&apos;: &apos;-&apos;} : 
&lt;class &apos;ValueError&apos;&gt; &apos;op&apos; has to be a string, in {&apos;*&apos;, &apos;+&apos;}!

Rebuilding local parsing plan with next candidate parser: $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1 (singlefile, .cfg) &gt; ExecOpTest ------- using $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; then &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1 (singlefile, .cfg) as a ExecOpTest with parser &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;dict_of_dict_to_object&gt; is not able to ingest source value &apos;{&apos;main&apos;: &lt;Section: main&gt;, &apos;DEFAULT&apos;: &lt;Section: DEFAULT&gt;}&apos; of type &apos;dict&apos; and/or convert it to type &apos;ExecOpTest&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1 (singlefile, .cfg) &gt; ExecOpTest ------- using $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; then &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 295, in dict_to_object
    attr_name)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1 (singlefile, .cfg) as a ExecOpTest with parser &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  InvalidAttributeNameForConstructorError : Cannot parse object of type &lt;ExecOpTest&gt; using the provided configuration file: configuration contains a property name (&apos;main&apos;)that is not an attribute of the object constructor. &lt;ExecOpTest&gt; constructor attributes are : [&apos;op&apos;, &apos;y&apos;, &apos;expected_result&apos;, &apos;x&apos;]
</system-out></testcase><testcase classname="parsyfiles.tests.demo.test_parsyfiles_readme.DemoTests" file="parsyfiles/tests/demo/test_parsyfiles_readme.py" line="213" name="test_simple_object_with_contract_autoclass_enforce" time="0.07118988037109375"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1 (singlefile, .cfg) &gt; ExecOpTest ------- using $&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; then &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/site-packages/autoclass/validate.py&quot;, line 582, in valin
    raise ValidationError(&apos;is_in: x in &apos; + str(allowed_values) + &apos; does not hold for x=&apos; + str(x))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1 (singlefile, .cfg) as a ExecOpTest with parser &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ObjectInstantiationException : Error while building object of type &lt;ExecOpTest&gt; using its constructor and parsed contents : {&apos;y&apos;: True, &apos;expected_result&apos;: False, &apos;x&apos;: True, &apos;op&apos;: &apos;-&apos;} : 
&lt;class &apos;autoclass.validate.ValidationError&apos;&gt; is_in: x in {&apos;*&apos;, &apos;+&apos;} does not hold for x=-

Rebuilding local parsing plan with next candidate parser: $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1 (singlefile, .cfg) &gt; ExecOpTest ------- using $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; then &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1 (singlefile, .cfg) as a ExecOpTest with parser &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;dict_of_dict_to_object&gt; is not able to ingest source value &apos;{&apos;main&apos;: &lt;Section: main&gt;, &apos;DEFAULT&apos;: &lt;Section: DEFAULT&gt;}&apos; of type &apos;dict&apos; and/or convert it to type &apos;ExecOpTest&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1 (singlefile, .cfg) &gt; ExecOpTest ------- using $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; then &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 295, in dict_to_object
    attr_name)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1 (singlefile, .cfg) as a ExecOpTest with parser &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  InvalidAttributeNameForConstructorError : Cannot parse object of type &lt;ExecOpTest&gt; using the provided configuration file: configuration contains a property name (&apos;main&apos;)that is not an attribute of the object constructor. &lt;ExecOpTest&gt; constructor attributes are : [&apos;op&apos;, &apos;y&apos;, &apos;expected_result&apos;, &apos;x&apos;]
</system-out></testcase><testcase classname="parsyfiles.tests.demo.test_parsyfiles_readme.DemoTests" file="parsyfiles/tests/demo/test_parsyfiles_readme.py" line="180" name="test_simple_object_with_contract_autoclass_pycontract" time="0.3026301860809326"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1 (singlefile, .cfg) &gt; ExecOpTest ------- using $&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; then &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/site-packages/contracts/library/extensions.py&quot;, line 121, in check_contract
    raise ContractNotRespected(self, msg, value, context)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1 (singlefile, .cfg) as a ExecOpTest with parser &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ObjectInstantiationException : Error while building object of type &lt;ExecOpTest&gt; using its constructor and parsed contents : {&apos;y&apos;: 1.0, &apos;expected_result&apos;: 0.0, &apos;x&apos;: 1.0, &apos;op&apos;: &apos;-&apos;} : 
&lt;class &apos;contracts.interface.ContractNotRespected&apos;&gt; Breach for argument &apos;op&apos; to ExecOpTest:generated_setter_fun().
Value does not pass criteria of &lt;lambda&gt;()() (module: test_parsyfiles_readme).
checking: callable()       for value: Instance of &lt;class &apos;str&apos;&gt;: &apos;-&apos;   
checking: allowed_op       for value: Instance of &lt;class &apos;str&apos;&gt;: &apos;-&apos;   
checking: str,allowed_op   for value: Instance of &lt;class &apos;str&apos;&gt;: &apos;-&apos;   
Variables bound in inner context:
! cannot write context

Rebuilding local parsing plan with next candidate parser: $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1 (singlefile, .cfg) &gt; ExecOpTest ------- using $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; then &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1 (singlefile, .cfg) as a ExecOpTest with parser &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;dict_of_dict_to_object&gt; is not able to ingest source value &apos;{&apos;main&apos;: &lt;Section: main&gt;, &apos;DEFAULT&apos;: &lt;Section: DEFAULT&gt;}&apos; of type &apos;dict&apos; and/or convert it to type &apos;ExecOpTest&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1 (singlefile, .cfg) &gt; ExecOpTest ------- using $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; then &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 295, in dict_to_object
    attr_name)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1 (singlefile, .cfg) as a ExecOpTest with parser &apos;$&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  InvalidAttributeNameForConstructorError : Cannot parse object of type &lt;ExecOpTest&gt; using the provided configuration file: configuration contains a property name (&apos;main&apos;)that is not an attribute of the object constructor. &lt;ExecOpTest&gt; constructor attributes are : [&apos;op&apos;, &apos;y&apos;, &apos;expected_result&apos;, &apos;x&apos;]
</system-out></testcase><testcase classname="parsyfiles.tests.demo.test_parsyfiles_readme.DemoTests" file="parsyfiles/tests/demo/test_parsyfiles_readme.py" line="133" name="test_simple_objects" time="0.405242919921875"><system-out>--&gt; Successfully parsed a Dict from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1
--&gt; Successfully parsed a Dict from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_2
--&gt; Successfully parsed a Dict from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_3_csv_format
--&gt; Successfully parsed a Dict from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_4_csv_format2
--&gt; Successfully parsed a Dict from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_sum_1
--&gt; Successfully parsed a Dict from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_sum_2
--&gt; Successfully parsed a Dict from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_sum_3_properties_format
--&gt; Successfully parsed a Dict from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_sum_4
--&gt; Successfully parsed a Dict from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_sum_5
--&gt; Successfully parsed a Dict from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_sum_6
--&gt; Successfully parsed a Dict from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_sum_7
--&gt; Successfully parsed a Dict[str, Dict] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects

--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_1
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_2
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_3_csv_format (singlefile, .txt) &gt; ExecOpTest ------- using $&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 295, in dict_to_object
    attr_name)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_3_csv_format (singlefile, .txt) as a ExecOpTest with parser &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  InvalidAttributeNameForConstructorError : Cannot parse object of type &lt;ExecOpTest&gt; using the provided configuration file: configuration contains a property name (&apos;x,y,op,expected_result&apos;)that is not an attribute of the object constructor. &lt;ExecOpTest&gt; constructor attributes are : [&apos;op&apos;, &apos;y&apos;, &apos;expected_result&apos;, &apos;x&apos;]

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_3_csv_format (singlefile, .txt) &gt; ExecOpTest ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 111, in constructor_with_str_arg
    return desired_type(source)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_3_csv_format (singlefile, .txt) as a ExecOpTest with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  CaughtTypeError : Caught TypeError while calling conversion function &apos;constructor_with_str_arg&apos;. Note that the conversion function signature should be &apos;def my_convert_fun(desired_type: Type[T], source: S, logger: Logger, **kwargs) -&gt; T&apos; (unpacked options mode - default) or def my_convert_fun(desired_type: Type[T], source: S, logger: Logger, options: Dict[str, Dict[str, Any]]) -&gt; T (unpack_options = False).Caught error message is : TypeError : __init__() missing 3 required positional arguments: &apos;y&apos;, &apos;op&apos;, and &apos;expected_result&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_3_csv_format (singlefile, .txt) &gt; ExecOpTest ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_3_csv_format (singlefile, .txt) as a ExecOpTest with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_3_csv_format
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_4_csv_format2 (singlefile, .txt) &gt; ExecOpTest ------- using $&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 295, in dict_to_object
    attr_name)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_4_csv_format2 (singlefile, .txt) as a ExecOpTest with parser &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  InvalidAttributeNameForConstructorError : Cannot parse object of type &lt;ExecOpTest&gt; using the provided configuration file: configuration contains a property name (&apos;op,-&apos;)that is not an attribute of the object constructor. &lt;ExecOpTest&gt; constructor attributes are : [&apos;op&apos;, &apos;y&apos;, &apos;expected_result&apos;, &apos;x&apos;]

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_4_csv_format2 (singlefile, .txt) &gt; ExecOpTest ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 111, in constructor_with_str_arg
    return desired_type(source)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_4_csv_format2 (singlefile, .txt) as a ExecOpTest with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  CaughtTypeError : Caught TypeError while calling conversion function &apos;constructor_with_str_arg&apos;. Note that the conversion function signature should be &apos;def my_convert_fun(desired_type: Type[T], source: S, logger: Logger, **kwargs) -&gt; T&apos; (unpacked options mode - default) or def my_convert_fun(desired_type: Type[T], source: S, logger: Logger, options: Dict[str, Dict[str, Any]]) -&gt; T (unpack_options = False).Caught error message is : TypeError : __init__() missing 3 required positional arguments: &apos;y&apos;, &apos;op&apos;, and &apos;expected_result&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_4_csv_format2 (singlefile, .txt) &gt; ExecOpTest ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_4_csv_format2 (singlefile, .txt) as a ExecOpTest with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_diff_4_csv_format2
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_sum_1
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_sum_2
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_sum_3_properties_format
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_sum_4 (singlefile, .yaml) &gt; ExecOpTest ------- using &lt;read_object_from_yaml&gt; (currently active parsing plan in [Try &apos;&lt;read_object_from_yaml&gt;&apos; then &apos;$&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_sum_4 (singlefile, .yaml) as a &lt;class &apos;test_parsyfiles_readme.DemoTests.test_simple_objects.&lt;locals&gt;.ExecOpTest&apos;&gt; with parser &apos;&lt;read_object_from_yaml&gt;&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned {&apos;y&apos;: 5, &apos;expected_result&apos;: 7, &apos;x&apos;: 2, &apos;op&apos;: &apos;+&apos;} of type &lt;class &apos;dict&apos;&gt; which is not an instance of &lt;class &apos;test_parsyfiles_readme.DemoTests.test_simple_objects.&lt;locals&gt;.ExecOpTest&apos;&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_sum_4
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_sum_5
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_sum_6
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects/test_sum_7
--&gt; Successfully parsed a Dict[str, ExecOpTest] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/demo/./simple_objects

OrderedDict([(&apos;test_diff_1&apos;, 1.0 - 1.0 =? 0.0),
             (&apos;test_diff_2&apos;, 0.0 - 1.0 =? -1.0),
             (&apos;test_diff_3_csv_format&apos;, 5.0 - 4.0 =? 1.0),
             (&apos;test_diff_4_csv_format2&apos;, 4.0 - 4.0 =? 0.0),
             (&apos;test_sum_1&apos;, 1.0 + 2.0 =? 3.0),
             (&apos;test_sum_2&apos;, 0.0 + 1.0 =? 1.0),
             (&apos;test_sum_3_properties_format&apos;, 1.0 + 1.0 =? 2.0),
             (&apos;test_sum_4&apos;, 2.0 + 5.0 =? 7.0),
             (&apos;test_sum_5&apos;, 56.0 + 12.0 =? 68.0),
             (&apos;test_sum_6&apos;, 56.0 + 13.0 =? 69.0),
             (&apos;test_sum_7&apos;, 56.0 + 14.0 =? 70.0)])
{&apos;.cfg&apos;: {&apos;3_generic&apos;: [$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$,
                        $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$,
                        $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.csv&apos;: {&apos;3_generic&apos;: [$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.ini&apos;: {&apos;3_generic&apos;: [$&lt;read_config&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$,
                        $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$,
                        $&lt;read_config&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.json&apos;: {&apos;3_generic&apos;: [$&lt;read_dict_or_list_from_json&gt; =&gt; &lt;dict_to_object&gt;$]},
 &apos;.properties&apos;: {&apos;3_generic&apos;: [$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$]},
 &apos;.pyc&apos;: {&apos;3_generic&apos;: [&lt;read_object_from_pickle&gt;]},
 &apos;.txt&apos;: {&apos;3_generic&apos;: [$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$,
                        $&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$,
                        $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$,
                        $&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.xls&apos;: {&apos;3_generic&apos;: [$&lt;read_dataframe_from_xls&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.xlsm&apos;: {&apos;3_generic&apos;: [$&lt;read_dataframe_from_xls&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.xlsx&apos;: {&apos;3_generic&apos;: [$&lt;read_dataframe_from_xls&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$]},
 &apos;.yaml&apos;: {&apos;3_generic&apos;: [&lt;read_object_from_yaml&gt;,
                         $&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$]},
 &apos;.yml&apos;: {&apos;3_generic&apos;: [&lt;read_object_from_yaml&gt;,
                        $&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$]},
 &apos;&lt;multifile&gt;&apos;: {&apos;3_generic&apos;: [Multifile Object parser (parsyfiles defaults)]}}
</system-out></testcase><testcase classname="parsyfiles.tests.old.test_parsyfiles_old.MultifileAndCustomFunctionsTest" file="parsyfiles/tests/old/test_parsyfiles_old.py" line="71" name="test_list_object_with_folders" time="0.09183812141418457"><system-out>[setup]
Elapsed: 0.0164029598236084
----- Attribute expected_perf was not found on file system. However it is not mandatory for the constructor of type MainFooBarItem, so we&apos;ll build the object without it...
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1/expected_out
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1/expected_perf
--&gt; Successfully parsed a OneLiner from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1/input_simple
--&gt; Successfully parsed a MainFooBarItem from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item2/expected_out
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item2/expected_perf
--&gt; Successfully parsed a OneLiner from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item2/input_simple
--&gt; Successfully parsed a MainFooBarItem from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item2
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item3/expected_out
--&gt; Successfully parsed a OneLiner from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item3/input_simple
--&gt; Successfully parsed a MainFooBarItem from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item3
--&gt; Successfully parsed a List[MainFooBarItem] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders

[{&apos;input_simple&apos;: this content is really interesting, &apos;expected_perf&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc821706d8&gt;, &apos;expected_out&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc816795f8&gt;}, {&apos;input_simple&apos;: this content is really interesting, &apos;expected_perf&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc81754978&gt;, &apos;expected_out&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc816c5390&gt;}, {&apos;input_simple&apos;: this content is really interesting, &apos;expected_perf&apos;: None, &apos;expected_out&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc820f03c8&gt;}]
</system-out></testcase><testcase classname="parsyfiles.tests.old.test_parsyfiles_old.MultifileAndCustomFunctionsTest" file="parsyfiles/tests/old/test_parsyfiles_old.py" line="89" name="test_no_folders" time="0.09511208534240723"><system-out>[setup]
Elapsed: 0.021082639694213867
----- Attribute expected_perf was not found on file system. However it is not mandatory for the constructor of type MainFooBarItem, so we&apos;ll build the object without it...
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.expected_out
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.expected_perf
--&gt; Successfully parsed a OneLiner from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.input_simple
--&gt; Successfully parsed a MainFooBarItem from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item2.expected_out
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item2.expected_perf
--&gt; Successfully parsed a OneLiner from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item2.input_simple
--&gt; Successfully parsed a MainFooBarItem from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item2
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item3.expected_out
--&gt; Successfully parsed a OneLiner from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item3.input_simple
--&gt; Successfully parsed a MainFooBarItem from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item3
--&gt; Successfully parsed a Dict[str, MainFooBarItem] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders

OrderedDict([(&apos;item1&apos;,
              {&apos;input_simple&apos;: this content is really interesting, &apos;expected_perf&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc816542b0&gt;, &apos;expected_out&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc8166ff60&gt;}),
             (&apos;item2&apos;,
              {&apos;input_simple&apos;: this content is really interesting, &apos;expected_perf&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc816549b0&gt;, &apos;expected_out&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc81654668&gt;}),
             (&apos;item3&apos;,
              {&apos;input_simple&apos;: this content is really interesting, &apos;expected_perf&apos;: None, &apos;expected_out&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc81654dd8&gt;})])
</system-out></testcase><testcase classname="parsyfiles.tests.old.test_parsyfiles_old.MultifileAndCustomFunctionsTest" file="parsyfiles/tests/old/test_parsyfiles_old.py" line="65" name="test_single_list_object_with_folders" time="0.09942913055419922"><system-out>[setup]
Elapsed: 0.022275447845458984
----- Attribute expected_perf was not found on file system. However it is not mandatory for the constructor of type MainFooBarItem, so we&apos;ll build the object without it...
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1/expected_out
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1/expected_perf
--&gt; Successfully parsed a OneLiner from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1/input_simple
--&gt; Successfully parsed a MainFooBarItem from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item2/expected_out
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item2/expected_perf
--&gt; Successfully parsed a OneLiner from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item2/input_simple
--&gt; Successfully parsed a MainFooBarItem from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item2
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item3/expected_out
--&gt; Successfully parsed a OneLiner from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item3/input_simple
--&gt; Successfully parsed a MainFooBarItem from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item3
--&gt; Successfully parsed a List[MainFooBarItem] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders

[{&apos;input_simple&apos;: this content is really interesting, &apos;expected_perf&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc81649278&gt;, &apos;expected_out&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc8165bf28&gt;}, {&apos;input_simple&apos;: this content is really interesting, &apos;expected_perf&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc81649978&gt;, &apos;expected_out&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc81649630&gt;}, {&apos;input_simple&apos;: this content is really interesting, &apos;expected_perf&apos;: None, &apos;expected_out&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc81649da0&gt;}]
</system-out></testcase><testcase classname="parsyfiles.tests.old.test_parsyfiles_old.MultifileAndCustomFunctionsTest" file="parsyfiles/tests/old/test_parsyfiles_old.py" line="53" name="test_single_multifile_object_flatmode" time="0.09550285339355469"><system-out>[setup]
Elapsed: 0.026125431060791016
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.expected_out (singlefile, .txt) &gt; MainFooBarItem ------- using $&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 295, in dict_to_object
    attr_name)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.expected_out (singlefile, .txt) as a MainFooBarItem with parser &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  InvalidAttributeNameForConstructorError : Cannot parse object of type &lt;MainFooBarItem&gt; using the provided configuration file: configuration contains a property name (&apos;dummy_int&apos;)that is not an attribute of the object constructor. &lt;MainFooBarItem&gt; constructor attributes are : [&apos;input_simple&apos;, &apos;expected_perf&apos;, &apos;expected_out&apos;]

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.expected_out (singlefile, .txt) &gt; MainFooBarItem ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 111, in constructor_with_str_arg
    return desired_type(source)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.expected_out (singlefile, .txt) as a MainFooBarItem with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  CaughtTypeError : Caught TypeError while calling conversion function &apos;constructor_with_str_arg&apos;. Note that the conversion function signature should be &apos;def my_convert_fun(desired_type: Type[T], source: S, logger: Logger, **kwargs) -&gt; T&apos; (unpacked options mode - default) or def my_convert_fun(desired_type: Type[T], source: S, logger: Logger, options: Dict[str, Dict[str, Any]]) -&gt; T (unpack_options = False).Caught error message is : TypeError : __init__() missing 1 required positional argument: &apos;expected_out&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.expected_out (singlefile, .txt) &gt; MainFooBarItem ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 51, in base64_ascii_str_pickle_to_object
    return pickle.loads(base64.b64decode(b64_ascii_str), fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.expected_out (singlefile, .txt) as a MainFooBarItem with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  UnpicklingError : 

Rebuilding local parsing plan with next candidate parser: $&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.expected_out (singlefile, .txt) &gt; MainFooBarItem ------- using $&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 117, in create
    + &apos;are : &apos; + str(constructor_atts))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.expected_out (singlefile, .txt) as a MainFooBarItem with parser &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  CaughtTypeErrorDuringInstantiation : Error while trying to instantiate object of type &lt;class &apos;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.MainFooBarItem&apos;&gt; using dictionary input_dict:Caught error message is : TypeError : ufunc &apos;add&apos; did not contain a loop with signature matching types dtype(&apos;&lt;U125&apos;) dtype(&apos;&lt;U125&apos;) dtype(&apos;&lt;U125&apos;)
Dict provided was {0: &apos;dummy_int = 0&apos;, 1: &apos;dummy_float = 1.1&apos;}

Rebuilding local parsing plan with next candidate parser: $&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.expected_out (singlefile, .txt) &gt; MainFooBarItem ------- using $&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 299, in dict_to_object
    return desired_type(**dict_for_init)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.expected_out (singlefile, .txt) as a MainFooBarItem with parser &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ObjectInstantiationException : Error while building object of type &lt;MainFooBarItem&gt; using its constructor and parsed contents : {} : 
&lt;class &apos;TypeError&apos;&gt; __init__() missing 2 required positional arguments: &apos;input_simple&apos; and &apos;expected_out&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.expected_out (singlefile, .txt) &gt; MainFooBarItem ------- using $&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.expected_out (singlefile, .txt) as a MainFooBarItem with parser &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;dict_of_dict_to_object&gt; is not able to ingest source value &apos;{&apos;DEFAULT&apos;: &lt;Section: DEFAULT&gt;}&apos; of type &apos;dict&apos; and/or convert it to type &apos;MainFooBarItem&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.expected_out (singlefile, .txt) &gt; MainFooBarItem ------- using $&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;merge_all_config_sections_into_a_single_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_of_dict_to_object&gt;$&apos; then &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 295, in dict_to_object
    attr_name)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.expected_out (singlefile, .txt) as a MainFooBarItem with parser &apos;$&lt;test_custom_read_config_from_config_file_stream&gt; =&gt; &lt;config_to_dict_of_dict&gt; -&gt; &lt;dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  InvalidAttributeNameForConstructorError : Cannot parse object of type &lt;MainFooBarItem&gt; using the provided configuration file: configuration contains a property name (&apos;DEFAULT&apos;)that is not an attribute of the object constructor. &lt;MainFooBarItem&gt; constructor attributes are : [&apos;input_simple&apos;, &apos;expected_perf&apos;, &apos;expected_out&apos;]
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.expected_out
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.expected_perf
--&gt; Successfully parsed a OneLiner from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1.input_simple
--&gt; Successfully parsed a MainFooBarItem from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_without_folders/item1

{&apos;input_simple&apos;: this content is really interesting, &apos;expected_perf&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc8165d7f0&gt;, &apos;expected_out&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc8165d278&gt;}
</system-out></testcase><testcase classname="parsyfiles.tests.old.test_parsyfiles_old.MultifileAndCustomFunctionsTest" file="parsyfiles/tests/old/test_parsyfiles_old.py" line="48" name="test_single_multifile_object_folders" time="0.05160045623779297"><system-out>[setup]
Elapsed: 0.02041459083557129
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1/expected_out
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1/expected_perf
--&gt; Successfully parsed a OneLiner from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1/input_simple
--&gt; Successfully parsed a MainFooBarItem from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1

{&apos;input_simple&apos;: this content is really interesting, &apos;expected_perf&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc81686b00&gt;, &apos;expected_out&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc81686a90&gt;}
</system-out></testcase><testcase classname="parsyfiles.tests.old.test_parsyfiles_old.MultifileAndCustomFunctionsTest" file="parsyfiles/tests/old/test_parsyfiles_old.py" line="83" name="test_with_folders_dict" time="0.09688973426818848"><system-out>[setup]
Elapsed: 0.02248978614807129
----- Attribute expected_perf was not found on file system. However it is not mandatory for the constructor of type MainFooBarItem, so we&apos;ll build the object without it...
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1/expected_out
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1/expected_perf
--&gt; Successfully parsed a OneLiner from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1/input_simple
--&gt; Successfully parsed a MainFooBarItem from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item2/expected_out
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item2/expected_perf
--&gt; Successfully parsed a OneLiner from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item2/input_simple
--&gt; Successfully parsed a MainFooBarItem from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item2
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item3/expected_out
--&gt; Successfully parsed a OneLiner from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item3/input_simple
--&gt; Successfully parsed a MainFooBarItem from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item3
--&gt; Successfully parsed a Dict[str, MainFooBarItem] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders

OrderedDict([(&apos;item1&apos;,
              {&apos;input_simple&apos;: this content is really interesting, &apos;expected_perf&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc821e5080&gt;, &apos;expected_out&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc9432abe0&gt;}),
             (&apos;item2&apos;,
              {&apos;input_simple&apos;: this content is really interesting, &apos;expected_perf&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc822da940&gt;, &apos;expected_out&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc821e55c0&gt;}),
             (&apos;item3&apos;,
              {&apos;input_simple&apos;: this content is really interesting, &apos;expected_perf&apos;: None, &apos;expected_out&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc822dea58&gt;})])
</system-out></testcase><testcase classname="parsyfiles.tests.old.test_parsyfiles_old.MultifileAndCustomFunctionsTest" file="parsyfiles/tests/old/test_parsyfiles_old.py" line="77" name="test_with_folders_set" time="0.09816360473632812"><system-out>[setup]
Elapsed: 0.022094249725341797
----- Attribute expected_perf was not found on file system. However it is not mandatory for the constructor of type MainFooBarItem, so we&apos;ll build the object without it...
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1/expected_out
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1/expected_perf
--&gt; Successfully parsed a OneLiner from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1/input_simple
--&gt; Successfully parsed a MainFooBarItem from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item1
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item2/expected_out
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item2/expected_perf
--&gt; Successfully parsed a OneLiner from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item2/input_simple
--&gt; Successfully parsed a MainFooBarItem from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item2
--&gt; Successfully parsed a Config from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item3/expected_out
--&gt; Successfully parsed a OneLiner from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item3/input_simple
--&gt; Successfully parsed a MainFooBarItem from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders/item3
--&gt; Successfully parsed a Set[MainFooBarItem] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_with_folders

{{&apos;input_simple&apos;: this content is really interesting, &apos;expected_perf&apos;: None, &apos;expected_out&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc8216e5c0&gt;}, {&apos;input_simple&apos;: this content is really interesting, &apos;expected_perf&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc820dbbe0&gt;, &apos;expected_out&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc820db9b0&gt;}, {&apos;input_simple&apos;: this content is really interesting, &apos;expected_perf&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc8216e630&gt;, &apos;expected_out&apos;: &lt;test_parsyfiles_old.MultifileAndCustomFunctionsTest._create_root_parser.&lt;locals&gt;.Config object at 0x7fcc820db198&gt;}}
</system-out></testcase><testcase classname="parsyfiles.tests.old.test_parsyfiles_old.TestDemo" file="parsyfiles/tests/old/test_parsyfiles_old.py" line="238" name="test_old_demo" time="0.08830642700195312"><system-out>----- Attribute options was not found on file system. However it is not mandatory for the constructor of type OpTestCase, so we&apos;ll build the object without it...
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo/case1/input_a
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo/case1/input_b
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo/case1/output
--&gt; Successfully parsed a OpTestCase from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo/case1
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo/case2/input_a
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo/case2/input_b
--&gt; Successfully parsed a OpConfig from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo/case2/options
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo/case2/output
--&gt; Successfully parsed a OpTestCase from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo/case2
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo/case3/input_a
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo/case3/input_b
--&gt; Successfully parsed a OpConfig from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo/case3/options
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo/case3/output
--&gt; Successfully parsed a OpTestCase from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo/case3
--&gt; Successfully parsed a Dict[str, OpTestCase] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo

OrderedDict([(&apos;case1&apos;, 1 + 2 =? 3),
             (&apos;case2&apos;, 1 + 3 =? 4),
             (&apos;case3&apos;, 1 - 2 =? -1)])
----- Attribute options was not found on file system. However it is not mandatory for the constructor of type OpTestCase, so we&apos;ll build the object without it...
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat/case1--input_a
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat/case1--input_b
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat/case1--output
--&gt; Successfully parsed a OpTestCase from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat/case1
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat/case2--input_a
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat/case2--input_b
--&gt; Successfully parsed a OpConfig from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat/case2--options
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat/case2--output
--&gt; Successfully parsed a OpTestCase from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat/case2
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat/case3--input_a
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat/case3--input_b
--&gt; Successfully parsed a OpConfig from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat/case3--options
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat/case3--output
--&gt; Successfully parsed a OpTestCase from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat/case3
--&gt; Successfully parsed a Dict[str, OpTestCase] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat

OrderedDict([(&apos;case1&apos;, 1 + 2 =? 3),
             (&apos;case2&apos;, 1 + 3 =? 4),
             (&apos;case3&apos;, 1 - 2 =? -1)])
----- Attribute input_c was not found on file system. However it is not mandatory for the constructor of type OpTestCaseColl, so we&apos;ll build the object without it...
----- Attribute options was not found on file system. However it is not mandatory for the constructor of type OpTestCaseColl, so we&apos;ll build the object without it...
----- Attribute input_c was not found on file system. However it is not mandatory for the constructor of type OpTestCaseColl, so we&apos;ll build the object without it...
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case1--input_a
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case1--input_b
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case1--output
--&gt; Successfully parsed a OpTestCaseColl from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case1
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case2--input_a
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case2--input_b
--&gt; Successfully parsed a OpConfig from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case2--options
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case2--output
--&gt; Successfully parsed a OpTestCaseColl from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case2
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case3--input_a
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case3--input_b
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case3--input_c--keyA--item1
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case3--input_c--keyA--item2
--&gt; Successfully parsed a List[int] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case3--input_c--keyA
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case3--input_c--keyB--item1
--&gt; Successfully parsed a List[int] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case3--input_c--keyB
--&gt; Successfully parsed a Dict[str, List] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case3--input_c
--&gt; Successfully parsed a OpConfig from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case3--options
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case3--output
--&gt; Successfully parsed a OpTestCaseColl from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll/case3
--&gt; Successfully parsed a Dict[str, OpTestCaseColl] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_flat_coll

OrderedDict([(&apos;keyA&apos;, [-1, -1]), (&apos;keyB&apos;, [-1])])
----- Attribute input_c was not found on file system. However it is not mandatory for the constructor of type OpTestCaseColl, so we&apos;ll build the object without it...
----- Attribute options was not found on file system. However it is not mandatory for the constructor of type OpTestCaseColl, so we&apos;ll build the object without it...
----- Attribute input_c was not found on file system. However it is not mandatory for the constructor of type OpTestCaseColl, so we&apos;ll build the object without it...
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case1/input_a
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case1/input_b
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case1/output
--&gt; Successfully parsed a OpTestCaseColl from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case1
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case2/input_a
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case2/input_b
--&gt; Successfully parsed a OpConfig from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case2/options
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case2/output
--&gt; Successfully parsed a OpTestCaseColl from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case2
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case3/input_a
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case3/input_b
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case3/input_c/keyA/item1
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case3/input_c/keyA/item2
--&gt; Successfully parsed a List[int] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case3/input_c/keyA
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case3/input_c/keyB/item1
--&gt; Successfully parsed a List[int] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case3/input_c/keyB
--&gt; Successfully parsed a Dict[str, List] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case3/input_c
--&gt; Successfully parsed a OpConfig from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case3/options
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case3/output
--&gt; Successfully parsed a OpTestCaseColl from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll/case3
--&gt; Successfully parsed a Dict[str, OpTestCaseColl] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/old/./custom_old_demo_coll

OrderedDict([(&apos;keyA&apos;, [-1, -1]), (&apos;keyB&apos;, [-1])])
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_collections" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_collections.py" line="13" name="test_collections" time="0.23938918113708496"><system-out>--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/collections_data/./dict/a
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/collections_data/./dict/b
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/collections_data/./dict/c
--&gt; Successfully parsed a Dict[str, int] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/collections_data/./dict
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/collections_data/./list/a
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/collections_data/./list/b
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/collections_data/./list/c
--&gt; Successfully parsed a List[int] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/collections_data/./list
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/collections_data/./set/a
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/collections_data/./set/b
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/collections_data/./set/c
--&gt; Successfully parsed a Set[int] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/collections_data/./set
--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/collections_data/./tuple/a
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/collections_data/./tuple/b
--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/collections_data/./tuple/c
--&gt; Successfully parsed a Tuple[str, int, str] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/collections_data/./tuple
--&gt; Successfully parsed a Tuple[Dict, List, Set, Tuple] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/collections_data/.

(OrderedDict([(&apos;a&apos;, 1), (&apos;b&apos;, 2), (&apos;c&apos;, 3)]), [1, 2, 3], {1, 2, 3}, (&apos;text&apos;, 2, &apos;text&apos;))
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_custom_object" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_custom_object.py" line="36" name="test_simple_objects_support" time="0.2577037811279297"><system-out>--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_1

1.0 - 1.0 =? 0.0
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_1
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_2
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_3/expected_result
--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_3/op
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_3/x
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_3/y
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_3
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_3_csv_format (singlefile, .txt) &gt; ExecOpTest ------- using $&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 295, in dict_to_object
    attr_name)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_3_csv_format (singlefile, .txt) as a ExecOpTest with parser &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  InvalidAttributeNameForConstructorError : Cannot parse object of type &lt;ExecOpTest&gt; using the provided configuration file: configuration contains a property name (&apos;x,y,op,expected_result&apos;)that is not an attribute of the object constructor. &lt;ExecOpTest&gt; constructor attributes are : [&apos;op&apos;, &apos;y&apos;, &apos;expected_result&apos;, &apos;x&apos;]

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_3_csv_format (singlefile, .txt) &gt; ExecOpTest ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 111, in constructor_with_str_arg
    return desired_type(source)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_3_csv_format (singlefile, .txt) as a ExecOpTest with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  CaughtTypeError : Caught TypeError while calling conversion function &apos;constructor_with_str_arg&apos;. Note that the conversion function signature should be &apos;def my_convert_fun(desired_type: Type[T], source: S, logger: Logger, **kwargs) -&gt; T&apos; (unpacked options mode - default) or def my_convert_fun(desired_type: Type[T], source: S, logger: Logger, options: Dict[str, Dict[str, Any]]) -&gt; T (unpack_options = False).Caught error message is : TypeError : __init__() missing 3 required positional arguments: &apos;y&apos;, &apos;op&apos;, and &apos;expected_result&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_3_csv_format (singlefile, .txt) &gt; ExecOpTest ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_3_csv_format (singlefile, .txt) as a ExecOpTest with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_3_csv_format
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_4_csv_format2 (singlefile, .txt) &gt; ExecOpTest ------- using $&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 295, in dict_to_object
    attr_name)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_4_csv_format2 (singlefile, .txt) as a ExecOpTest with parser &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  InvalidAttributeNameForConstructorError : Cannot parse object of type &lt;ExecOpTest&gt; using the provided configuration file: configuration contains a property name (&apos;op,-&apos;)that is not an attribute of the object constructor. &lt;ExecOpTest&gt; constructor attributes are : [&apos;op&apos;, &apos;y&apos;, &apos;expected_result&apos;, &apos;x&apos;]

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_4_csv_format2 (singlefile, .txt) &gt; ExecOpTest ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 111, in constructor_with_str_arg
    return desired_type(source)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_4_csv_format2 (singlefile, .txt) as a ExecOpTest with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  CaughtTypeError : Caught TypeError while calling conversion function &apos;constructor_with_str_arg&apos;. Note that the conversion function signature should be &apos;def my_convert_fun(desired_type: Type[T], source: S, logger: Logger, **kwargs) -&gt; T&apos; (unpacked options mode - default) or def my_convert_fun(desired_type: Type[T], source: S, logger: Logger, options: Dict[str, Dict[str, Any]]) -&gt; T (unpack_options = False).Caught error message is : TypeError : __init__() missing 3 required positional arguments: &apos;y&apos;, &apos;op&apos;, and &apos;expected_result&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_4_csv_format2 (singlefile, .txt) &gt; ExecOpTest ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_4_csv_format2 (singlefile, .txt) as a ExecOpTest with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_diff_4_csv_format2
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_sum_1
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_sum_2
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_sum_3_properties_format
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_sum_3_with_inner_b64_pickle
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_sum_4 (singlefile, .yaml) &gt; ExecOpTest ------- using &lt;read_object_from_yaml&gt; (currently active parsing plan in [Try &apos;&lt;read_object_from_yaml&gt;&apos; then &apos;$&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_sum_4 (singlefile, .yaml) as a &lt;class &apos;parsyfiles.tests.parsing_capabilities_by_type.test_parse_custom_object.ExecOpTest&apos;&gt; with parser &apos;&lt;read_object_from_yaml&gt;&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned {&apos;y&apos;: 5, &apos;expected_result&apos;: 7, &apos;x&apos;: 2, &apos;op&apos;: &apos;+&apos;} of type &lt;class &apos;dict&apos;&gt; which is not an instance of &lt;class &apos;parsyfiles.tests.parsing_capabilities_by_type.test_parse_custom_object.ExecOpTest&apos;&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_sum_4
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_sum_5 (singlefile, .yaml) &gt; ExecOpTest ------- using &lt;read_object_from_yaml&gt; (currently active parsing plan in [Try &apos;&lt;read_object_from_yaml&gt;&apos; then &apos;$&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_sum_5 (singlefile, .yaml) as a &lt;class &apos;parsyfiles.tests.parsing_capabilities_by_type.test_parse_custom_object.ExecOpTest&apos;&gt; with parser &apos;&lt;read_object_from_yaml&gt;&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned {&apos;y&apos;: 5, &apos;expected_result&apos;: 6, &apos;x&apos;: 1, &apos;op&apos;: &apos;+&apos;} of type &lt;class &apos;dict&apos;&gt; which is not an instance of &lt;class &apos;parsyfiles.tests.parsing_capabilities_by_type.test_parse_custom_object.ExecOpTest&apos;&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_sum_5
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_sum_6
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_sum_7
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/./test_sum_8
--&gt; Successfully parsed a Dict[str, ExecOpTest] from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/objects_data/.

OrderedDict([(&apos;test_diff_1&apos;, 1.0 - 1.0 =? 0.0),
             (&apos;test_diff_2&apos;, 0.0 - 1.0 =? -1.0),
             (&apos;test_diff_3&apos;, 6.0 - 1.0 =? 5.0),
             (&apos;test_diff_3_csv_format&apos;, 5.0 - 4.0 =? 1.0),
             (&apos;test_diff_4_csv_format2&apos;, 4.0 - 4.0 =? 0.0),
             (&apos;test_sum_1&apos;, 1.0 + 2.0 =? 3.0),
             (&apos;test_sum_2&apos;, 0.0 + 1.0 =? 1.0),
             (&apos;test_sum_3_properties_format&apos;, 1.0 + 1.0 =? 2.0),
             (&apos;test_sum_3_with_inner_b64_pickle&apos;, 1.0 + 1.0 =? 2.0),
             (&apos;test_sum_4&apos;, 2.0 + 5.0 =? 7.0),
             (&apos;test_sum_5&apos;, 1.0 + 5.0 =? 6.0),
             (&apos;test_sum_6&apos;, 56.0 + 13.0 =? 69.0),
             (&apos;test_sum_7&apos;, 56.0 + 14.0 =? 70.0),
             (&apos;test_sum_8&apos;, 56.0 + 12.0 =? 68.0)])
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="146" name="test_get_capabilities_for_type[float]" time="0.19077038764953613"><system-out>{&apos;.cfg&apos;: {},
 &apos;.csv&apos;: {},
 &apos;.ini&apos;: {},
 &apos;.json&apos;: {},
 &apos;.properties&apos;: {},
 &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$,
                            $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$,
                            $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$],
          &apos;3_generic&apos;: [&lt;read_object_from_pickle&gt;]},
 &apos;.txt&apos;: {&apos;1_exact_match&apos;: [$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$,
                            $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$,
                            $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$,
                            $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$],
          &apos;3_generic&apos;: [$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$]},
 &apos;.xls&apos;: {},
 &apos;.xlsm&apos;: {},
 &apos;.xlsx&apos;: {},
 &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [$&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_float&gt;$,
                             $&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_float&gt;$,
                             $&lt;read_object_from_yaml&gt; =&gt; &lt;bool_to_float&gt;$],
           &apos;3_generic&apos;: [&lt;read_object_from_yaml&gt;]},
 &apos;.yml&apos;: {&apos;1_exact_match&apos;: [$&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_float&gt;$,
                            $&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_float&gt;$,
                            $&lt;read_object_from_yaml&gt; =&gt; &lt;bool_to_float&gt;$],
          &apos;3_generic&apos;: [&lt;read_object_from_yaml&gt;]},
 &apos;&lt;multifile&gt;&apos;: {}}
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="146" name="test_get_capabilities_for_type[str]" time="0.19238734245300293"><system-out>{&apos;.cfg&apos;: {},
 &apos;.csv&apos;: {},
 &apos;.ini&apos;: {},
 &apos;.json&apos;: {},
 &apos;.properties&apos;: {},
 &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$,
                            $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$,
                            $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$],
          &apos;3_generic&apos;: [&lt;read_object_from_pickle&gt;]},
 &apos;.txt&apos;: {&apos;1_exact_match&apos;: [&lt;read_str_from_txt&gt;]},
 &apos;.xls&apos;: {},
 &apos;.xlsm&apos;: {},
 &apos;.xlsx&apos;: {},
 &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_string&gt;$,
                             $&lt;read_object_from_yaml&gt; =&gt; &lt;bool_to_string&gt;$,
                             $&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_string&gt;$],
           &apos;3_generic&apos;: [&lt;read_object_from_yaml&gt;]},
 &apos;.yml&apos;: {&apos;1_exact_match&apos;: [$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_string&gt;$,
                            $&lt;read_object_from_yaml&gt; =&gt; &lt;bool_to_string&gt;$,
                            $&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_string&gt;$],
          &apos;3_generic&apos;: [&lt;read_object_from_yaml&gt;]},
 &apos;&lt;multifile&gt;&apos;: {}}
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="146" name="test_get_capabilities_for_type[bool]" time="0.19579339027404785"><system-out>{&apos;.cfg&apos;: {},
 &apos;.csv&apos;: {},
 &apos;.ini&apos;: {},
 &apos;.json&apos;: {},
 &apos;.properties&apos;: {},
 &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$,
                            $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$,
                            $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$],
          &apos;3_generic&apos;: [&lt;read_object_from_pickle&gt;]},
 &apos;.txt&apos;: {&apos;1_exact_match&apos;: [$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$,
                            $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$,
                            $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$,
                            $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$],
          &apos;3_generic&apos;: [$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$]},
 &apos;.xls&apos;: {},
 &apos;.xlsm&apos;: {},
 &apos;.xlsx&apos;: {},
 &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_bool&gt;$,
                             $&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_bool&gt;$,
                             $&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_bool&gt;$],
           &apos;3_generic&apos;: [&lt;read_object_from_yaml&gt;]},
 &apos;.yml&apos;: {&apos;1_exact_match&apos;: [$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_bool&gt;$,
                            $&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_bool&gt;$,
                            $&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_bool&gt;$],
          &apos;3_generic&apos;: [&lt;read_object_from_yaml&gt;]},
 &apos;&lt;multifile&gt;&apos;: {}}
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="146" name="test_get_capabilities_for_type[int]" time="0.2548949718475342"><system-out>{&apos;.cfg&apos;: {},
 &apos;.csv&apos;: {},
 &apos;.ini&apos;: {},
 &apos;.json&apos;: {},
 &apos;.properties&apos;: {},
 &apos;.pyc&apos;: {&apos;1_exact_match&apos;: [$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$,
                            $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$,
                            $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$],
          &apos;2_approx_match&apos;: [$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$,
                             $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$,
                             $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$],
          &apos;3_generic&apos;: [&lt;read_object_from_pickle&gt;]},
 &apos;.txt&apos;: {&apos;1_exact_match&apos;: [$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$,
                            $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$,
                            $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$,
                            $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$],
          &apos;2_approx_match&apos;: [$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$,
                             $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$,
                             $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$,
                             $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$],
          &apos;3_generic&apos;: [$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$]},
 &apos;.xls&apos;: {},
 &apos;.xlsm&apos;: {},
 &apos;.xlsx&apos;: {},
 &apos;.yaml&apos;: {&apos;1_exact_match&apos;: [$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_int&gt;$,
                             $&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_int&gt;$,
                             $&lt;read_object_from_yaml&gt; =&gt; &lt;bool_to_int&gt;$],
           &apos;2_approx_match&apos;: [$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_bool&gt;$,
                              $&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_bool&gt;$,
                              $&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_bool&gt;$],
           &apos;3_generic&apos;: [&lt;read_object_from_yaml&gt;]},
 &apos;.yml&apos;: {&apos;1_exact_match&apos;: [$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_int&gt;$,
                            $&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_int&gt;$,
                            $&lt;read_object_from_yaml&gt; =&gt; &lt;bool_to_int&gt;$],
          &apos;2_approx_match&apos;: [$&lt;read_object_from_yaml&gt; =&gt; &lt;float_to_bool&gt;$,
                             $&lt;read_object_from_yaml&gt; =&gt; &lt;str_to_bool&gt;$,
                             $&lt;read_object_from_yaml&gt; =&gt; &lt;int_to_bool&gt;$],
          &apos;3_generic&apos;: [&lt;read_object_from_yaml&gt;]},
 &apos;&lt;multifile&gt;&apos;: {}}
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="146" name="test_get_capabilities_for_type[.gitignore]" time="0.0017552375793457031"><failure message="  File &quot;&lt;string&gt;&quot;, line 1
    .gitignore
    ^
SyntaxError: invalid syntax">typ = &apos;.gitignore&apos;

    @pytest.mark.parametrize(&quot;typ&quot;, types)
    def test_get_capabilities_for_type(typ: str):
&gt;       typp = eval(typ)
E         File &quot;&lt;string&gt;&quot;, line 1
E           .gitignore
E           ^
E       SyntaxError: invalid syntax

parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py:149: SyntaxError</failure></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-pickle-int-5=5.0.pyc]" time="0.03246116638183594"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-int-5=5.0 (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-int-5=5.0 (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_float&gt;$ is not able to ingest source value &apos;5&apos; of type &apos;int&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-int-5=5.0

5.0==5.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-txt-bool-True=1.0.txt]" time="0.037987709045410156"><system-out>--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/txt-bool-True=1.0

1.0==1.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-pickle-float-10.1=10.1.pyc]" time="0.0375518798828125"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float-10.1=10.1 (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float-10.1=10.1 (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_float&gt;$ is not able to ingest source value &apos;10.1&apos; of type &apos;float&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float-10.1=10.1 (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float-10.1=10.1 (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;int_to_float&gt;$ is not able to ingest source value &apos;10.1&apos; of type &apos;float&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float-10.1=10.1 (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float-10.1=10.1 (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;bool_to_float&gt;$ is not able to ingest source value &apos;10.1&apos; of type &apos;float&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float-10.1=10.1

10.1==10.1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-b64pickle-int-0=0.0.txt]" time="0.0435023307800293"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-int-0=0.0 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-int-0=0.0 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  SyntaxError : unexpected EOF while parsing (&lt;unknown&gt;, line 1)

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-int-0=0.0 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-int-0=0.0 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_float&gt; is not able to ingest source value &apos;0&apos; of type &apos;int&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-int-0=0.0

0.0==0.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-b64pickle-int--2=-2.0.txt]" time="0.038089752197265625"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-int--2=-2.0 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-int--2=-2.0 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  SyntaxError : invalid syntax (&lt;unknown&gt;, line 1)

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-int--2=-2.0 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-int--2=-2.0 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_float&gt; is not able to ingest source value &apos;-2&apos; of type &apos;int&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-int--2=-2.0

-2.0==-2.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-b64pickle-float--5.2=-5.2.txt]" time="0.04244065284729004"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float--5.2=-5.2 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 83, in _convert
    raise ValueError(&apos;malformed node or string: &apos; + repr(node))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float--5.2=-5.2 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : malformed node or string: &lt;_ast.Name object at 0x7fcc815789e8&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float--5.2=-5.2 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float--5.2=-5.2 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_float&gt; is not able to ingest source value &apos;-5.2&apos; of type &apos;float&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float--5.2=-5.2 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float--5.2=-5.2 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;int_to_float&gt; is not able to ingest source value &apos;-5.2&apos; of type &apos;float&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float--5.2=-5.2 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float--5.2=-5.2 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;bool_to_float&gt; is not able to ingest source value &apos;-5.2&apos; of type &apos;float&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float--5.2=-5.2

-5.2==-5.2
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-b64pickle-float-0.0=0.0.txt]" time="0.039476871490478516"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float-0.0=0.0 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 83, in _convert
    raise ValueError(&apos;malformed node or string: &apos; + repr(node))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float-0.0=0.0 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : malformed node or string: &lt;_ast.Name object at 0x7fcc81584d30&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float-0.0=0.0 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float-0.0=0.0 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_float&gt; is not able to ingest source value &apos;0.0&apos; of type &apos;float&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float-0.0=0.0 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float-0.0=0.0 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;int_to_float&gt; is not able to ingest source value &apos;0.0&apos; of type &apos;float&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float-0.0=0.0 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float-0.0=0.0 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;bool_to_float&gt; is not able to ingest source value &apos;0.0&apos; of type &apos;float&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float-0.0=0.0

0.0==0.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-txt-float-10.1=10.1.txt]" time="0.03763270378112793"><system-out>--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/txt-float-10.1=10.1

10.1==10.1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-pickle-float-0.0=0.0.pyc]" time="0.039093732833862305"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float-0.0=0.0 (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float-0.0=0.0 (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_float&gt;$ is not able to ingest source value &apos;0.0&apos; of type &apos;float&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float-0.0=0.0 (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float-0.0=0.0 (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;int_to_float&gt;$ is not able to ingest source value &apos;0.0&apos; of type &apos;float&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float-0.0=0.0 (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float-0.0=0.0 (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;bool_to_float&gt;$ is not able to ingest source value &apos;0.0&apos; of type &apos;float&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float-0.0=0.0

0.0==0.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-pickle-float--5.2=-5.2.pyc]" time="0.03957247734069824"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float--5.2=-5.2 (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float--5.2=-5.2 (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_float&gt;$ is not able to ingest source value &apos;-5.2&apos; of type &apos;float&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float--5.2=-5.2 (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float--5.2=-5.2 (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;int_to_float&gt;$ is not able to ingest source value &apos;-5.2&apos; of type &apos;float&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float--5.2=-5.2 (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float--5.2=-5.2 (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;bool_to_float&gt;$ is not able to ingest source value &apos;-5.2&apos; of type &apos;float&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-float--5.2=-5.2

-5.2==-5.2
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-txt-int-0=0.0.txt]" time="0.03682756423950195"><system-out>--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/txt-int-0=0.0

0.0==0.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-b64pickle-float-10.1=10.1.txt]" time="0.040436506271362305"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float-10.1=10.1 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 83, in _convert
    raise ValueError(&apos;malformed node or string: &apos; + repr(node))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float-10.1=10.1 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : malformed node or string: &lt;_ast.Name object at 0x7fcc8154f2b0&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float-10.1=10.1 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float-10.1=10.1 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_float&gt; is not able to ingest source value &apos;10.1&apos; of type &apos;float&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float-10.1=10.1 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float-10.1=10.1 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;int_to_float&gt; is not able to ingest source value &apos;10.1&apos; of type &apos;float&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float-10.1=10.1 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float-10.1=10.1 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;bool_to_float&gt; is not able to ingest source value &apos;10.1&apos; of type &apos;float&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-float-10.1=10.1

10.1==10.1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-txt-int-5=5.0.txt]" time="0.03607821464538574"><system-out>--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/txt-int-5=5.0

5.0==5.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-txt-bool-False=0.0.txt]" time="0.03597903251647949"><system-out>--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/txt-bool-False=0.0

0.0==0.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-b64pickle-int-5=5.0.txt]" time="0.03958559036254883"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-int-5=5.0 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-int-5=5.0 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  SyntaxError : unexpected EOF while parsing (&lt;unknown&gt;, line 1)

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-int-5=5.0 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-int-5=5.0 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_float&gt; is not able to ingest source value &apos;5&apos; of type &apos;int&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-int-5=5.0

5.0==5.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-pickle-int-0=0.0.pyc]" time="0.03679347038269043"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-int-0=0.0 (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-int-0=0.0 (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_float&gt;$ is not able to ingest source value &apos;0&apos; of type &apos;int&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-int-0=0.0

0.0==0.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-txt-float--5.2=-5.2.txt]" time="0.03708291053771973"><system-out>--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/txt-float--5.2=-5.2

-5.2==-5.2
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-pickle-int--2=-2.0.pyc]" time="0.038993120193481445"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-int--2=-2.0 (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-int--2=-2.0 (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_float&gt;$ is not able to ingest source value &apos;-2&apos; of type &apos;int&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-int--2=-2.0

-2.0==-2.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-pickle-bool-False=0.0.pyc]" time="0.040894508361816406"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-bool-False=0.0 (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-bool-False=0.0 (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_float&gt;$ is not able to ingest source value &apos;False&apos; of type &apos;bool&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-bool-False=0.0

0.0==0.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-b64pickle-bool-True=1.0.txt]" time="0.03904271125793457"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-bool-True=1.0 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-bool-True=1.0 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  SyntaxError : unexpected EOF while parsing (&lt;unknown&gt;, line 1)

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-bool-True=1.0 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-bool-True=1.0 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_float&gt; is not able to ingest source value &apos;True&apos; of type &apos;bool&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-bool-True=1.0

1.0==1.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-txt-int--2=-2.0.txt]" time="0.034281015396118164"><system-out>--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/txt-int--2=-2.0

-2.0==-2.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-pickle-bool-True=1.0.pyc]" time="0.044385671615600586"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-bool-True=1.0 (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-bool-True=1.0 (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_float&gt;$ is not able to ingest source value &apos;True&apos; of type &apos;bool&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/pickle-bool-True=1.0

1.0==1.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-b64pickle-bool-False=0.0.txt]" time="0.03788614273071289"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-bool-False=0.0 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-bool-False=0.0 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  SyntaxError : unexpected EOF while parsing (&lt;unknown&gt;, line 1)

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-bool-False=0.0 (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-bool-False=0.0 (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_float&gt; is not able to ingest source value &apos;False&apos; of type &apos;bool&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/b64pickle-bool-False=0.0

0.0==0.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-ok-txt-float-0.0=0.0.txt]" time="0.03708291053771973"><system-out>--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/ok/txt-float-0.0=0.0

0.0==0.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-err-pickle-str-.pyc]" time="0.042826175689697266"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/pickle-str- (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/pickle-str- (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  SyntaxError : unexpected EOF while parsing (&lt;unknown&gt;, line 0)

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/pickle-str- (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/pickle-str- (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;int_to_float&gt;$ is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/pickle-str- (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/pickle-str- (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;bool_to_float&gt;$ is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/pickle-str- (singlefile, .pyc) &gt; float ------- using &lt;read_object_from_pickle&gt; (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/pickle-str- (singlefile, .pyc) as a &lt;class &apos;float&apos;&gt; with parser &apos;&lt;read_object_from_pickle&gt;&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned  of type &lt;class &apos;str&apos;&gt; which is not an instance of &lt;class &apos;float&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-err-pickle-str-truth.pyc]" time="0.0393671989440918"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/pickle-str-truth (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 83, in _convert
    raise ValueError(&apos;malformed node or string: &apos; + repr(node))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/pickle-str-truth (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : malformed node or string: &lt;_ast.Name object at 0x7fcc8143d6d8&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/pickle-str-truth (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/pickle-str-truth (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;int_to_float&gt;$ is not able to ingest source value &apos;truth&apos; of type &apos;str&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/pickle-str-truth (singlefile, .pyc) &gt; float ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/pickle-str-truth (singlefile, .pyc) as a float with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;bool_to_float&gt;$ is not able to ingest source value &apos;truth&apos; of type &apos;str&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/pickle-str-truth (singlefile, .pyc) &gt; float ------- using &lt;read_object_from_pickle&gt; (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_float&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/pickle-str-truth (singlefile, .pyc) as a &lt;class &apos;float&apos;&gt; with parser &apos;&lt;read_object_from_pickle&gt;&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned truth of type &lt;class &apos;str&apos;&gt; which is not an instance of &lt;class &apos;float&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-err-b64pickle-str-truth.txt]" time="0.04483747482299805"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str-truth (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 83, in _convert
    raise ValueError(&apos;malformed node or string: &apos; + repr(node))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str-truth (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : malformed node or string: &lt;_ast.Name object at 0x7fcc8144b898&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str-truth (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 83, in _convert
    raise ValueError(&apos;malformed node or string: &apos; + repr(node))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str-truth (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : malformed node or string: &lt;_ast.Name object at 0x7fcc8144b9e8&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str-truth (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str-truth (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;int_to_float&gt; is not able to ingest source value &apos;truth&apos; of type &apos;str&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str-truth (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str-truth (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;bool_to_float&gt; is not able to ingest source value &apos;truth&apos; of type &apos;str&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str-truth (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str-truth (singlefile, .txt) as a &lt;class &apos;float&apos;&gt; with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned truth of type &lt;class &apos;str&apos;&gt; which is not an instance of &lt;class &apos;float&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-err-b64pickle-str-.txt]" time="0.043137550354003906"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str- (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str- (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  SyntaxError : unexpected EOF while parsing (&lt;unknown&gt;, line 1)

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str- (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str- (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  SyntaxError : unexpected EOF while parsing (&lt;unknown&gt;, line 0)

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str- (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str- (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;int_to_float&gt; is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str- (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str- (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;bool_to_float&gt; is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;float&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str- (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/b64pickle-str- (singlefile, .txt) as a &lt;class &apos;float&apos;&gt; with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned  of type &lt;class &apos;str&apos;&gt; which is not an instance of &lt;class &apos;float&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-err-txt-str-.txt]" time="0.04210209846496582"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str- (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str- (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  SyntaxError : unexpected EOF while parsing (&lt;unknown&gt;, line 0)

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str- (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 51, in base64_ascii_str_pickle_to_object
    return pickle.loads(base64.b64decode(b64_ascii_str), fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str- (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  EOFError : Ran out of input

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str- (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 51, in base64_ascii_str_pickle_to_object
    return pickle.loads(base64.b64decode(b64_ascii_str), fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str- (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  EOFError : Ran out of input

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str- (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 51, in base64_ascii_str_pickle_to_object
    return pickle.loads(base64.b64decode(b64_ascii_str), fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str- (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  EOFError : Ran out of input

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str- (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 51, in base64_ascii_str_pickle_to_object
    return pickle.loads(base64.b64decode(b64_ascii_str), fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str- (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  EOFError : Ran out of input
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[float-err-txt-str-truth.txt]" time="0.041458845138549805"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str-truth (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 83, in _convert
    raise ValueError(&apos;malformed node or string: &apos; + repr(node))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str-truth (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : malformed node or string: &lt;_ast.Name object at 0x7fcc813f6198&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str-truth (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str-truth (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str-truth (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str-truth (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str-truth (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str-truth (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str-truth (singlefile, .txt) &gt; float ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_float&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/float/err/txt-str-truth (singlefile, .txt) as a float with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-pickle-bool-True=True.pyc]" time="0.03811335563659668"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-bool-True=True (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-bool-True=True (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_string&gt;$ is not able to ingest source value &apos;True&apos; of type &apos;bool&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$
--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-bool-True=True

True==True
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-txt-str-a=a.txt]" time="0.037947654724121094"><system-out>--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/txt-str-a=a

a==a
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-pickle-float-10.1=10.1.pyc]" time="0.03685879707336426"><system-out>--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-float-10.1=10.1

10.1==10.1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-txt-bool-True=True.txt]" time="0.03613543510437012"><system-out>--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/txt-bool-True=True

True==True
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-txt-str-toto=toto.txt]" time="0.03291916847229004"><system-out>--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/txt-str-toto=toto

toto==toto
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-txt-int-5=5.txt]" time="0.03555941581726074"><system-out>--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/txt-int-5=5

5==5
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-b64pickle-str-a=a.txt]" time="0.03655123710632324"><failure message="AssertionError: assert &apos;gANYAQAAAGFxAC4=&apos; == &apos;a&apos;
  - gANYAQAAAGFxAC4=
  + a">typ = &apos;str&apos;, ok_or_err = &apos;ok&apos;, file = &apos;b64pickle-str-a=a.txt&apos;
root_parser = parsyfiles defaults

    @pytest.mark.parametrize(&quot;typ,ok_or_err,file&quot;, all_tests)
    def test_parse_by_type(typ: str, ok_or_err: str, file: str, root_parser):
        typp = eval(typ)
        # pprint(get_capabilities_for_type(typp))
    
        try:
            # ignore unresolved reference : method `profile` is created on the fly by the line_profiler
            RootParser.parse_item = profile(RootParser.parse_item)
        except:
            pass
    
        if ok_or_err is &apos;ok&apos;:
            parsed = root_parser.parse_item(location=get_file_path_no_ext(typ, ok_or_err, file), item_type=typp)
&gt;           assert parsed == get_expected_answer(file, typp)
E           AssertionError: assert &apos;gANYAQAAAGFxAC4=&apos; == &apos;a&apos;
E             - gANYAQAAAGFxAC4=
E             + a

parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py:192: AssertionError</failure><system-out>--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/b64pickle-str-a=a

</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-txt-str-=.txt]" time="0.036535024642944336"><system-out>--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/txt-str-=

==
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-txt-float-10.1=10.1.txt]" time="0.03556990623474121"><system-out>--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/txt-float-10.1=10.1

10.1==10.1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-pickle-int-5=5.pyc]" time="0.037236690521240234"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-int-5=5 (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-int-5=5 (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_string&gt;$ is not able to ingest source value &apos;5&apos; of type &apos;int&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-int-5=5 (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-int-5=5 (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;bool_to_string&gt;$ is not able to ingest source value &apos;5&apos; of type &apos;int&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$
--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-int-5=5

5==5
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-pickle-float-0.0=0.0.pyc]" time="0.03758811950683594"><system-out>--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-float-0.0=0.0

0.0==0.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-pickle-float--5.2=-5.2.pyc]" time="0.034836530685424805"><system-out>--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-float--5.2=-5.2

-5.2==-5.2
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-txt-int--2=-2.txt]" time="0.037593841552734375"><system-out>--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/txt-int--2=-2

-2==-2
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-pickle-bool-False=False.pyc]" time="0.03813362121582031"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-bool-False=False (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-bool-False=False (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_string&gt;$ is not able to ingest source value &apos;False&apos; of type &apos;bool&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$
--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-bool-False=False

False==False
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-pickle-int-0=0.pyc]" time="0.03710055351257324"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-int-0=0 (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-int-0=0 (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_string&gt;$ is not able to ingest source value &apos;0&apos; of type &apos;int&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-int-0=0 (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-int-0=0 (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;bool_to_string&gt;$ is not able to ingest source value &apos;0&apos; of type &apos;int&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$
--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-int-0=0

0==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-txt-int-0=0.txt]" time="0.03656458854675293"><system-out>--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/txt-int-0=0

0==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-pickle-str-lots%%tof%%nspecial%%rchars=lots%%tof%%nspecial%%rchars.pyc]" time="0.04248499870300293"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-lots%%tof%%nspecial%%rchars=lots%%tof%%nspecial%%rchars (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-lots%%tof%%nspecial%%rchars=lots%%tof%%nspecial%%rchars (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_string&gt;$ is not able to ingest source value &apos;lots	of
specialchars&apos; of type &apos;str&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-lots%%tof%%nspecial%%rchars=lots%%tof%%nspecial%%rchars (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-lots%%tof%%nspecial%%rchars=lots%%tof%%nspecial%%rchars (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;bool_to_string&gt;$ is not able to ingest source value &apos;lots	of
specialchars&apos; of type &apos;str&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-lots%%tof%%nspecial%%rchars=lots%%tof%%nspecial%%rchars (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-lots%%tof%%nspecial%%rchars=lots%%tof%%nspecial%%rchars (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;int_to_string&gt;$ is not able to ingest source value &apos;lots	of
specialchars&apos; of type &apos;str&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-lots%%tof%%nspecial%%rchars=lots%%tof%%nspecial%%rchars

lots	of
specialchars==lots	of
specialchars
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-txt-bool-False=False.txt]" time="0.03558635711669922"><system-out>--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/txt-bool-False=False

False==False
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-txt-str-lots%%tof%%nspecial%%rchars=lots%%tof%%nspecial%%rchars.txt]" time="0.03136563301086426"><failure message="AssertionError: assert &apos;lots\tof\nspecial\nchars&apos; == &apos;lots\tof\nspecial\rchars&apos;
    lots	of
  - special
  ?        ^
  + special
  ?        ^
    chars">typ = &apos;str&apos;, ok_or_err = &apos;ok&apos;
file = &apos;txt-str-lots%%tof%%nspecial%%rchars=lots%%tof%%nspecial%%rchars.txt&apos;
root_parser = parsyfiles defaults

    @pytest.mark.parametrize(&quot;typ,ok_or_err,file&quot;, all_tests)
    def test_parse_by_type(typ: str, ok_or_err: str, file: str, root_parser):
        typp = eval(typ)
        # pprint(get_capabilities_for_type(typp))
    
        try:
            # ignore unresolved reference : method `profile` is created on the fly by the line_profiler
            RootParser.parse_item = profile(RootParser.parse_item)
        except:
            pass
    
        if ok_or_err is &apos;ok&apos;:
            parsed = root_parser.parse_item(location=get_file_path_no_ext(typ, ok_or_err, file), item_type=typp)
&gt;           assert parsed == get_expected_answer(file, typp)
E           AssertionError: assert &apos;lots\tof\nspecial\nchars&apos; == &apos;lots\tof\nspecial\rchars&apos;
E               lots	of
E             - special
E             ?        ^
E             + special
E             ?        ^
E               chars

parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py:192: AssertionError</failure><system-out>--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/txt-str-lots%%tof%%nspecial%%rchars=lots%%tof%%nspecial%%rchars

</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-pickle-str-toto=toto.pyc]" time="0.037575721740722656"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-toto=toto (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-toto=toto (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_string&gt;$ is not able to ingest source value &apos;toto&apos; of type &apos;str&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-toto=toto (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-toto=toto (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;bool_to_string&gt;$ is not able to ingest source value &apos;toto&apos; of type &apos;str&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-toto=toto (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-toto=toto (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;int_to_string&gt;$ is not able to ingest source value &apos;toto&apos; of type &apos;str&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-toto=toto

toto==toto
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-txt-float--5.2=-5.2.txt]" time="0.03491926193237305"><system-out>--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/txt-float--5.2=-5.2

-5.2==-5.2
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-pickle-str-a=a.pyc]" time="0.11453413963317871"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-a=a (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-a=a (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_string&gt;$ is not able to ingest source value &apos;a&apos; of type &apos;str&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-a=a (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-a=a (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;bool_to_string&gt;$ is not able to ingest source value &apos;a&apos; of type &apos;str&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-a=a (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-a=a (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;int_to_string&gt;$ is not able to ingest source value &apos;a&apos; of type &apos;str&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-a=a

a==a
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-pickle-str-=.pyc]" time="0.04042768478393555"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-= (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-= (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_string&gt;$ is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-= (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-= (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;bool_to_string&gt;$ is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-= (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-= (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;int_to_string&gt;$ is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-str-=

==
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-txt-float-0.0=0.0.txt]" time="0.0369870662689209"><system-out>--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/txt-float-0.0=0.0

0.0==0.0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[str-ok-pickle-int--2=-2.pyc]" time="0.03794240951538086"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-int--2=-2 (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-int--2=-2 (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_string&gt;$ is not able to ingest source value &apos;-2&apos; of type &apos;int&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-int--2=-2 (singlefile, .pyc) &gt; str ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-int--2=-2 (singlefile, .pyc) as a str with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_string&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;bool_to_string&gt;$ is not able to ingest source value &apos;-2&apos; of type &apos;int&apos; and/or convert it to type &apos;str&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_string&gt;$
--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/str/ok/pickle-int--2=-2

-2==-2
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-pickle-bool-True=True.pyc]" time="0.04000592231750488"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-bool-True=True (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-bool-True=True (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_bool&gt;$ is not able to ingest source value &apos;True&apos; of type &apos;bool&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-bool-True=True (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-bool-True=True (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_bool&gt;$ is not able to ingest source value &apos;True&apos; of type &apos;bool&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-bool-True=True (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 93, in primitive_to_bool
    raise ValueError(&apos;Cannot convert to bool : source is a \&apos;&apos; + str(typ) + &apos;\&apos; &apos;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-bool-True=True (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to bool : source is a &apos;&lt;class &apos;bool&apos;&gt;&apos; 

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-bool-True=True

True==1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-txt-int-1=True.txt]" time="0.04566168785095215"><system-out>--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/txt-int-1=True

True==1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-pickle-int-1=True.pyc]" time="0.03231000900268555"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-int-1=True (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-int-1=True (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_bool&gt;$ is not able to ingest source value &apos;1&apos; of type &apos;int&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-int-1=True (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-int-1=True (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_bool&gt;$ is not able to ingest source value &apos;1&apos; of type &apos;int&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-int-1=True

True==1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-b64pickle-bool-False=False.txt]" time="0.04478621482849121"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-bool-False=False (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-bool-False=False (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;gaojlg==&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-bool-False=False (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-bool-False=False (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_bool&gt; is not able to ingest source value &apos;False&apos; of type &apos;bool&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-bool-False=False (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-bool-False=False (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_bool&gt; is not able to ingest source value &apos;False&apos; of type &apos;bool&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-bool-False=False (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 93, in primitive_to_bool
    raise ValueError(&apos;Cannot convert to bool : source is a \&apos;&apos; + str(typ) + &apos;\&apos; &apos;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-bool-False=False (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to bool : source is a &apos;&lt;class &apos;bool&apos;&gt;&apos; 

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-bool-False=False

False==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-pickle-int-0=False.pyc]" time="0.041831254959106445"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-int-0=False (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-int-0=False (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_bool&gt;$ is not able to ingest source value &apos;0&apos; of type &apos;int&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-int-0=False (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-int-0=False (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_bool&gt;$ is not able to ingest source value &apos;0&apos; of type &apos;int&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-int-0=False

False==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-txt-str-No=False.txt]" time="0.039008378982543945"><system-out>--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/txt-str-No=False

False==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-txt-bool-True=True.txt]" time="0.036955833435058594"><system-out>--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/txt-bool-True=True

True==1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-b64pickle-str-y=True.txt]" time="0.040581703186035156"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-str-y=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-str-y=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganyaqaaahlxac4=&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-str-y=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-str-y=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_bool&gt; is not able to ingest source value &apos;y&apos; of type &apos;str&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-str-y=True

True==1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-pickle-float-1.0=True.pyc]" time="0.03730440139770508"><system-out>--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-float-1.0=True

True==1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-b64pickle-str-No=False.txt]" time="0.03753089904785156"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-str-No=False (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-str-No=False (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganyagaaae5vcqau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-str-No=False (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-str-No=False (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_bool&gt; is not able to ingest source value &apos;No&apos; of type &apos;str&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-str-No=False

False==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-txt-float-1.0=True.txt]" time="0.037499427795410156"><system-out>--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/txt-float-1.0=True

True==1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-pickle-bool-False=False.pyc]" time="0.040923118591308594"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-bool-False=False (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-bool-False=False (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_bool&gt;$ is not able to ingest source value &apos;False&apos; of type &apos;bool&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-bool-False=False (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-bool-False=False (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_bool&gt;$ is not able to ingest source value &apos;False&apos; of type &apos;bool&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-bool-False=False (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 93, in primitive_to_bool
    raise ValueError(&apos;Cannot convert to bool : source is a \&apos;&apos; + str(typ) + &apos;\&apos; &apos;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-bool-False=False (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to bool : source is a &apos;&lt;class &apos;bool&apos;&gt;&apos; 

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-bool-False=False

False==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-pickle-str-No=False.pyc]" time="0.037761688232421875"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-str-No=False (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-str-No=False (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_bool&gt;$ is not able to ingest source value &apos;No&apos; of type &apos;str&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-str-No=False

False==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-b64pickle-bool-True=True.txt]" time="0.04366588592529297"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-bool-True=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-bool-True=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;gaoilg==&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-bool-True=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-bool-True=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_bool&gt; is not able to ingest source value &apos;True&apos; of type &apos;bool&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-bool-True=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-bool-True=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_bool&gt; is not able to ingest source value &apos;True&apos; of type &apos;bool&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-bool-True=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 93, in primitive_to_bool
    raise ValueError(&apos;Cannot convert to bool : source is a \&apos;&apos; + str(typ) + &apos;\&apos; &apos;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-bool-True=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to bool : source is a &apos;&lt;class &apos;bool&apos;&gt;&apos; 

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-bool-True=True

True==1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-pickle-str-y=True.pyc]" time="0.03921818733215332"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-str-y=True (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-str-y=True (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_bool&gt;$ is not able to ingest source value &apos;y&apos; of type &apos;str&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-str-y=True

True==1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-b64pickle-int-1=True.txt]" time="0.041460275650024414"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-int-1=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-int-1=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganlas4=&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-int-1=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-int-1=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_bool&gt; is not able to ingest source value &apos;1&apos; of type &apos;int&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-int-1=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-int-1=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_bool&gt; is not able to ingest source value &apos;1&apos; of type &apos;int&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-int-1=True

True==1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-b64pickle-float-0.0=False.txt]" time="0.037891387939453125"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-float-0.0=False (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-float-0.0=False (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhaaaaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-float-0.0=False

False==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-txt-str-y=True.txt]" time="0.03634452819824219"><system-out>--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/txt-str-y=True

True==1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-txt-bool-False=False.txt]" time="0.040262460708618164"><system-out>--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/txt-bool-False=False

False==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-txt-float-0.0=False.txt]" time="0.036321163177490234"><system-out>--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/txt-float-0.0=False

False==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-pickle-float-0.0=False.pyc]" time="0.03595089912414551"><system-out>--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/pickle-float-0.0=False

False==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-b64pickle-float-1.0=True.txt]" time="0.03821730613708496"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-float-1.0=True (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-float-1.0=True (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-float-1.0=True

True==1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-txt-int-0=False.txt]" time="0.037004709243774414"><system-out>--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/txt-int-0=False

False==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-ok-b64pickle-int-0=False.txt]" time="0.04013562202453613"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-int-0=False (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-int-0=False (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganlac4=&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-int-0=False (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-int-0=False (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_bool&gt; is not able to ingest source value &apos;0&apos; of type &apos;int&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-int-0=False (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-int-0=False (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_bool&gt; is not able to ingest source value &apos;0&apos; of type &apos;int&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
--&gt; Successfully parsed a bool from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/ok/b64pickle-int-0=False

False==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-err-b64pickle-int-6.txt]" time="0.044240474700927734"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-int-6 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-int-6 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganlbi4=&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-int-6 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-int-6 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_bool&gt; is not able to ingest source value &apos;6&apos; of type &apos;int&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-int-6 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-int-6 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_bool&gt; is not able to ingest source value &apos;6&apos; of type &apos;int&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-int-6 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 91, in primitive_to_bool
    raise ValueError(&apos;Cannot convert to bool : source is a number but is not 1 nor 0 : \&apos;&apos; + str(source) + &apos;\&apos;&apos;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-int-6 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to bool : source is a number but is not 1 nor 0 : &apos;6&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-int-6 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-int-6 (singlefile, .txt) as a &lt;class &apos;bool&apos;&gt; with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned 6 of type &lt;class &apos;int&apos;&gt; which is not an instance of &lt;class &apos;bool&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-err-pickle-str-.pyc]" time="0.04059314727783203"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-str- (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-str- (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_bool&gt;$ is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-str- (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-str- (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-str- (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-str- (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;int_to_bool&gt;$ is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-str- (singlefile, .pyc) &gt; bool ------- using &lt;read_object_from_pickle&gt; (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-str- (singlefile, .pyc) as a &lt;class &apos;bool&apos;&gt; with parser &apos;&lt;read_object_from_pickle&gt;&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned  of type &lt;class &apos;str&apos;&gt; which is not an instance of &lt;class &apos;bool&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-err-pickle-str-truth.pyc]" time="0.043344736099243164"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-str-truth (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-str-truth (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_bool&gt;$ is not able to ingest source value &apos;truth&apos; of type &apos;str&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-str-truth (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-str-truth (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;truth&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-str-truth (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-str-truth (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;int_to_bool&gt;$ is not able to ingest source value &apos;truth&apos; of type &apos;str&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-str-truth (singlefile, .pyc) &gt; bool ------- using &lt;read_object_from_pickle&gt; (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-str-truth (singlefile, .pyc) as a &lt;class &apos;bool&apos;&gt; with parser &apos;&lt;read_object_from_pickle&gt;&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned truth of type &lt;class &apos;str&apos;&gt; which is not an instance of &lt;class &apos;bool&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-err-pickle-float-0.1.pyc]" time="0.042677879333496094"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-float-0.1 (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 91, in primitive_to_bool
    raise ValueError(&apos;Cannot convert to bool : source is a number but is not 1 nor 0 : \&apos;&apos; + str(source) + &apos;\&apos;&apos;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-float-0.1 (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to bool : source is a number but is not 1 nor 0 : &apos;0.1&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-float-0.1 (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-float-0.1 (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_bool&gt;$ is not able to ingest source value &apos;0.1&apos; of type &apos;float&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-float-0.1 (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-float-0.1 (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;int_to_bool&gt;$ is not able to ingest source value &apos;0.1&apos; of type &apos;float&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-float-0.1 (singlefile, .pyc) &gt; bool ------- using &lt;read_object_from_pickle&gt; (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-float-0.1 (singlefile, .pyc) as a &lt;class &apos;bool&apos;&gt; with parser &apos;&lt;read_object_from_pickle&gt;&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned 0.1 of type &lt;class &apos;float&apos;&gt; which is not an instance of &lt;class &apos;bool&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-err-b64pickle-str-truth.txt]" time="0.04304313659667969"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str-truth (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str-truth (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganybqaaahrydxrocqau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str-truth (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str-truth (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_bool&gt; is not able to ingest source value &apos;truth&apos; of type &apos;str&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str-truth (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str-truth (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;truth&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str-truth (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str-truth (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;int_to_bool&gt; is not able to ingest source value &apos;truth&apos; of type &apos;str&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str-truth (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str-truth (singlefile, .txt) as a &lt;class &apos;bool&apos;&gt; with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned truth of type &lt;class &apos;str&apos;&gt; which is not an instance of &lt;class &apos;bool&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-err-txt-float-0.1.txt]" time="0.04074549674987793"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float-0.1 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float-0.1 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;0.1&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float-0.1 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float-0.1 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float-0.1 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float-0.1 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float-0.1 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float-0.1 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float-0.1 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float-0.1 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-err-pickle-float--1.0.pyc]" time="0.0407872200012207"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-float--1.0 (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 91, in primitive_to_bool
    raise ValueError(&apos;Cannot convert to bool : source is a number but is not 1 nor 0 : \&apos;&apos; + str(source) + &apos;\&apos;&apos;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-float--1.0 (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to bool : source is a number but is not 1 nor 0 : &apos;-1.0&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-float--1.0 (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-float--1.0 (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_bool&gt;$ is not able to ingest source value &apos;-1.0&apos; of type &apos;float&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-float--1.0 (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-float--1.0 (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;int_to_bool&gt;$ is not able to ingest source value &apos;-1.0&apos; of type &apos;float&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-float--1.0 (singlefile, .pyc) &gt; bool ------- using &lt;read_object_from_pickle&gt; (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-float--1.0 (singlefile, .pyc) as a &lt;class &apos;bool&apos;&gt; with parser &apos;&lt;read_object_from_pickle&gt;&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned -1.0 of type &lt;class &apos;float&apos;&gt; which is not an instance of &lt;class &apos;bool&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-err-txt-float--1.0.txt]" time="0.04186296463012695"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float--1.0 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float--1.0 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;-1.0&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float--1.0 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float--1.0 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float--1.0 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float--1.0 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float--1.0 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float--1.0 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float--1.0 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-float--1.0 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-err-pickle-int-6.pyc]" time="0.03996086120605469"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-int-6 (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-int-6 (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_bool&gt;$ is not able to ingest source value &apos;6&apos; of type &apos;int&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-int-6 (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-int-6 (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_bool&gt;$ is not able to ingest source value &apos;6&apos; of type &apos;int&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-int-6 (singlefile, .pyc) &gt; bool ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 91, in primitive_to_bool
    raise ValueError(&apos;Cannot convert to bool : source is a number but is not 1 nor 0 : \&apos;&apos; + str(source) + &apos;\&apos;&apos;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-int-6 (singlefile, .pyc) as a bool with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to bool : source is a number but is not 1 nor 0 : &apos;6&apos;

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-int-6 (singlefile, .pyc) &gt; bool ------- using &lt;read_object_from_pickle&gt; (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/pickle-int-6 (singlefile, .pyc) as a &lt;class &apos;bool&apos;&gt; with parser &apos;&lt;read_object_from_pickle&gt;&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned 6 of type &lt;class &apos;int&apos;&gt; which is not an instance of &lt;class &apos;bool&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-err-b64pickle-str-.txt]" time="0.042327880859375"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str- (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str- (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganyaaaaahealg==&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str- (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str- (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_bool&gt; is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str- (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str- (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str- (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str- (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;int_to_bool&gt; is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str- (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-str- (singlefile, .txt) as a &lt;class &apos;bool&apos;&gt; with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned  of type &lt;class &apos;str&apos;&gt; which is not an instance of &lt;class &apos;bool&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-err-txt-str-.txt]" time="0.04127383232116699"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str- (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str- (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str- (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 51, in base64_ascii_str_pickle_to_object
    return pickle.loads(base64.b64decode(b64_ascii_str), fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str- (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  EOFError : Ran out of input

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str- (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 51, in base64_ascii_str_pickle_to_object
    return pickle.loads(base64.b64decode(b64_ascii_str), fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str- (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  EOFError : Ran out of input

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str- (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 51, in base64_ascii_str_pickle_to_object
    return pickle.loads(base64.b64decode(b64_ascii_str), fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str- (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  EOFError : Ran out of input

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str- (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 51, in base64_ascii_str_pickle_to_object
    return pickle.loads(base64.b64decode(b64_ascii_str), fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str- (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  EOFError : Ran out of input
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-err-txt-int-6.txt]" time="0.04367518424987793"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-int-6 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-int-6 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;6&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-int-6 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-int-6 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-int-6 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-int-6 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-int-6 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-int-6 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-int-6 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-int-6 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-err-txt-str-truth.txt]" time="0.04042792320251465"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str-truth (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str-truth (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;truth&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str-truth (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str-truth (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str-truth (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str-truth (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str-truth (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str-truth (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str-truth (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/txt-str-truth (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-err-b64pickle-float--1.0.txt]" time="0.0419154167175293"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float--1.0 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float--1.0 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhv/aaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float--1.0 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 91, in primitive_to_bool
    raise ValueError(&apos;Cannot convert to bool : source is a number but is not 1 nor 0 : \&apos;&apos; + str(source) + &apos;\&apos;&apos;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float--1.0 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to bool : source is a number but is not 1 nor 0 : &apos;-1.0&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float--1.0 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float--1.0 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_bool&gt; is not able to ingest source value &apos;-1.0&apos; of type &apos;float&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float--1.0 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float--1.0 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;int_to_bool&gt; is not able to ingest source value &apos;-1.0&apos; of type &apos;float&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float--1.0 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float--1.0 (singlefile, .txt) as a &lt;class &apos;bool&apos;&gt; with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned -1.0 of type &lt;class &apos;float&apos;&gt; which is not an instance of &lt;class &apos;bool&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[bool-err-b64pickle-float-0.1.txt]" time="0.04411625862121582"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float-0.1 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float-0.1 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhp7mzmzmzmzou&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float-0.1 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 91, in primitive_to_bool
    raise ValueError(&apos;Cannot convert to bool : source is a number but is not 1 nor 0 : \&apos;&apos; + str(source) + &apos;\&apos;&apos;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float-0.1 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to bool : source is a number but is not 1 nor 0 : &apos;0.1&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float-0.1 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float-0.1 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_bool&gt; is not able to ingest source value &apos;0.1&apos; of type &apos;float&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float-0.1 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float-0.1 (singlefile, .txt) as a bool with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;int_to_bool&gt; is not able to ingest source value &apos;0.1&apos; of type &apos;float&apos; and/or convert it to type &apos;bool&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float-0.1 (singlefile, .txt) &gt; bool ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/bool/err/b64pickle-float-0.1 (singlefile, .txt) as a &lt;class &apos;bool&apos;&gt; with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned 0.1 of type &lt;class &apos;float&apos;&gt; which is not an instance of &lt;class &apos;bool&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-txt-bool-False=0.txt]" time="0.042215585708618164"><system-out>--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/txt-bool-False=0

0==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-b64pickle-float--5.0=-5.txt]" time="0.04397177696228027"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-float--5.0=-5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 83, in _convert
    raise ValueError(&apos;malformed node or string: &apos; + repr(node))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-float--5.0=-5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : malformed node or string: &lt;_ast.Name object at 0x7fcc81577ef0&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-float--5.0=-5

-5==-5
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-pickle-float-10.0=10.pyc]" time="0.04118680953979492"><system-out>--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-float-10.0=10

10==10
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-b64pickle-float-10.0=10.txt]" time="0.037421464920043945"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-float-10.0=10 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 83, in _convert
    raise ValueError(&apos;malformed node or string: &apos; + repr(node))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-float-10.0=10 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : malformed node or string: &lt;_ast.Name object at 0x7fcc81449400&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-float-10.0=10

10==10
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-b64pickle-int-0=0.txt]" time="0.04922771453857422"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-0=0 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-0=0 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  SyntaxError : unexpected EOF while parsing (&lt;unknown&gt;, line 1)

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-0=0 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-0=0 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_int&gt; is not able to ingest source value &apos;0&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-0=0 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-0=0 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_int&gt; is not able to ingest source value &apos;0&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-0=0 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-0=0 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;bool_to_int&gt; is not able to ingest source value &apos;0&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-0=0 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-0=0 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganlac4=&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-0=0 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-0=0 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_bool&gt; is not able to ingest source value &apos;0&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-0=0 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-0=0 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_bool&gt; is not able to ingest source value &apos;0&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-0=0

False==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-txt-int-5=5.txt]" time="0.04133963584899902"><system-out>--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/txt-int-5=5

5==5
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-pickle-bool-True=1.pyc]" time="0.04112577438354492"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-bool-True=1 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-bool-True=1 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_int&gt;$ is not able to ingest source value &apos;True&apos; of type &apos;bool&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-bool-True=1 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-bool-True=1 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_int&gt;$ is not able to ingest source value &apos;True&apos; of type &apos;bool&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-bool-True=1

1==1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-pickle-int-5=5.pyc]" time="0.046998023986816406"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-5=5 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-5=5 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_int&gt;$ is not able to ingest source value &apos;5&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-5=5 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-5=5 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_int&gt;$ is not able to ingest source value &apos;5&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-5=5 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-5=5 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;bool_to_int&gt;$ is not able to ingest source value &apos;5&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-5=5 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-5=5 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_bool&gt;$ is not able to ingest source value &apos;5&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-5=5 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-5=5 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_bool&gt;$ is not able to ingest source value &apos;5&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-5=5 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 91, in primitive_to_bool
    raise ValueError(&apos;Cannot convert to bool : source is a number but is not 1 nor 0 : \&apos;&apos; + str(source) + &apos;\&apos;&apos;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-5=5 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to bool : source is a number but is not 1 nor 0 : &apos;5&apos;

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-5=5

5==5
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-txt-int--2=-2.txt]" time="0.04144477844238281"><system-out>--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/txt-int--2=-2

-2==-2
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-pickle-int-0=0.pyc]" time="0.04521942138671875"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-0=0 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-0=0 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_int&gt;$ is not able to ingest source value &apos;0&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-0=0 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-0=0 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_int&gt;$ is not able to ingest source value &apos;0&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-0=0 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-0=0 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;bool_to_int&gt;$ is not able to ingest source value &apos;0&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-0=0 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-0=0 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_bool&gt;$ is not able to ingest source value &apos;0&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-0=0 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-0=0 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_bool&gt;$ is not able to ingest source value &apos;0&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int-0=0

False==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-b64pickle-bool-False=0.txt]" time="0.043042659759521484"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-bool-False=0 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-bool-False=0 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  SyntaxError : unexpected EOF while parsing (&lt;unknown&gt;, line 1)

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-bool-False=0 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-bool-False=0 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_int&gt; is not able to ingest source value &apos;False&apos; of type &apos;bool&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-bool-False=0 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-bool-False=0 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_int&gt; is not able to ingest source value &apos;False&apos; of type &apos;bool&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-bool-False=0

0==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-txt-int-0=0.txt]" time="0.0395808219909668"><system-out>--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/txt-int-0=0

0==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-txt-float-10.0=10.txt]" time="0.039817094802856445"><system-out>--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/txt-float-10.0=10

10==10
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-txt-float--5.0=-5.txt]" time="0.03966927528381348"><system-out>--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/txt-float--5.0=-5

-5==-5
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-b64pickle-int--2=-2.txt]" time="0.0483241081237793"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int--2=-2 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int--2=-2 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  SyntaxError : invalid syntax (&lt;unknown&gt;, line 1)

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int--2=-2 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int--2=-2 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_int&gt; is not able to ingest source value &apos;-2&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int--2=-2 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int--2=-2 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_int&gt; is not able to ingest source value &apos;-2&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int--2=-2 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int--2=-2 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;bool_to_int&gt; is not able to ingest source value &apos;-2&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int--2=-2 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int--2=-2 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;gank/v///y4=&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int--2=-2 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int--2=-2 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_bool&gt; is not able to ingest source value &apos;-2&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int--2=-2 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int--2=-2 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_bool&gt; is not able to ingest source value &apos;-2&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int--2=-2 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 91, in primitive_to_bool
    raise ValueError(&apos;Cannot convert to bool : source is a number but is not 1 nor 0 : \&apos;&apos; + str(source) + &apos;\&apos;&apos;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int--2=-2 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to bool : source is a number but is not 1 nor 0 : &apos;-2&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int--2=-2

-2==-2
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-b64pickle-float-0.0=0.txt]" time="0.04288458824157715"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-float-0.0=0 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 83, in _convert
    raise ValueError(&apos;malformed node or string: &apos; + repr(node))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-float-0.0=0 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : malformed node or string: &lt;_ast.Name object at 0x7fcc812a3588&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-float-0.0=0

0==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-pickle-float-0.0=0.pyc]" time="0.0398252010345459"><system-out>--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-float-0.0=0

0==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-b64pickle-int-5=5.txt]" time="0.04795980453491211"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-5=5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-5=5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  SyntaxError : unexpected EOF while parsing (&lt;unknown&gt;, line 1)

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-5=5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-5=5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_int&gt; is not able to ingest source value &apos;5&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-5=5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-5=5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_int&gt; is not able to ingest source value &apos;5&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-5=5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-5=5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;bool_to_int&gt; is not able to ingest source value &apos;5&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-5=5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-5=5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganlbs4=&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-5=5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-5=5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_bool&gt; is not able to ingest source value &apos;5&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-5=5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-5=5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_bool&gt; is not able to ingest source value &apos;5&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-5=5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 91, in primitive_to_bool
    raise ValueError(&apos;Cannot convert to bool : source is a number but is not 1 nor 0 : \&apos;&apos; + str(source) + &apos;\&apos;&apos;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-5=5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to bool : source is a number but is not 1 nor 0 : &apos;5&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-int-5=5

5==5
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-pickle-bool-False=0.pyc]" time="0.0417332649230957"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-bool-False=0 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-bool-False=0 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_int&gt;$ is not able to ingest source value &apos;False&apos; of type &apos;bool&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-bool-False=0 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-bool-False=0 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_int&gt;$ is not able to ingest source value &apos;False&apos; of type &apos;bool&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-bool-False=0

0==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-pickle-float--5.0=-5.pyc]" time="0.039788007736206055"><system-out>--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-float--5.0=-5

-5==-5
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-txt-float-0.0=0.txt]" time="0.04000425338745117"><system-out>--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/txt-float-0.0=0

0==0
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-txt-bool-True=1.txt]" time="0.03995919227600098"><system-out>--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/txt-bool-True=1

1==1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-b64pickle-bool-True=1.txt]" time="0.04587531089782715"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-bool-True=1 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-bool-True=1 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  SyntaxError : unexpected EOF while parsing (&lt;unknown&gt;, line 1)

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-bool-True=1 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-bool-True=1 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_int&gt; is not able to ingest source value &apos;True&apos; of type &apos;bool&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-bool-True=1 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-bool-True=1 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_int&gt; is not able to ingest source value &apos;True&apos; of type &apos;bool&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/b64pickle-bool-True=1

1==1
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-ok-pickle-int--2=-2.pyc]" time="0.04630279541015625"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int--2=-2 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int--2=-2 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_int&gt;$ is not able to ingest source value &apos;-2&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int--2=-2 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int--2=-2 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_int&gt;$ is not able to ingest source value &apos;-2&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int--2=-2 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int--2=-2 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;bool_to_int&gt;$ is not able to ingest source value &apos;-2&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int--2=-2 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int--2=-2 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_bool&gt;$ is not able to ingest source value &apos;-2&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int--2=-2 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int--2=-2 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_bool&gt;$ is not able to ingest source value &apos;-2&apos; of type &apos;int&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int--2=-2 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 91, in primitive_to_bool
    raise ValueError(&apos;Cannot convert to bool : source is a number but is not 1 nor 0 : \&apos;&apos; + str(source) + &apos;\&apos;&apos;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int--2=-2 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to bool : source is a number but is not 1 nor 0 : &apos;-2&apos;

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
--&gt; Successfully parsed a int from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/ok/pickle-int--2=-2

-2==-2
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-err-pickle-str-.pyc]" time="0.04831886291503906"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str- (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str- (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_int&gt;$ is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str- (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str- (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  SyntaxError : unexpected EOF while parsing (&lt;unknown&gt;, line 0)

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str- (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str- (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;bool_to_int&gt;$ is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str- (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str- (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_bool&gt;$ is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str- (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str- (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str- (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str- (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;int_to_bool&gt;$ is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str- (singlefile, .pyc) &gt; int ------- using &lt;read_object_from_pickle&gt; (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str- (singlefile, .pyc) as a &lt;class &apos;int&apos;&gt; with parser &apos;&lt;read_object_from_pickle&gt;&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned  of type &lt;class &apos;str&apos;&gt; which is not an instance of &lt;class &apos;int&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-err-pickle-str-truth.pyc]" time="0.04639244079589844"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str-truth (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str-truth (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_int&gt;$ is not able to ingest source value &apos;truth&apos; of type &apos;str&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str-truth (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 83, in _convert
    raise ValueError(&apos;malformed node or string: &apos; + repr(node))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str-truth (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : malformed node or string: &lt;_ast.Name object at 0x7fcc812215c0&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str-truth (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str-truth (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;bool_to_int&gt;$ is not able to ingest source value &apos;truth&apos; of type &apos;str&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str-truth (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str-truth (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;float_to_bool&gt;$ is not able to ingest source value &apos;truth&apos; of type &apos;str&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str-truth (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str-truth (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;truth&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str-truth (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str-truth (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;int_to_bool&gt;$ is not able to ingest source value &apos;truth&apos; of type &apos;str&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str-truth (singlefile, .pyc) &gt; int ------- using &lt;read_object_from_pickle&gt; (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-str-truth (singlefile, .pyc) as a &lt;class &apos;int&apos;&gt; with parser &apos;&lt;read_object_from_pickle&gt;&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned truth of type &lt;class &apos;str&apos;&gt; which is not an instance of &lt;class &apos;int&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-err-b64pickle-str-truth.txt]" time="0.053549766540527344"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str-truth (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 83, in _convert
    raise ValueError(&apos;malformed node or string: &apos; + repr(node))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str-truth (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : malformed node or string: &lt;_ast.Name object at 0x7fcc811b0b70&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str-truth (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str-truth (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_int&gt; is not able to ingest source value &apos;truth&apos; of type &apos;str&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str-truth (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 83, in _convert
    raise ValueError(&apos;malformed node or string: &apos; + repr(node))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str-truth (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : malformed node or string: &lt;_ast.Name object at 0x7fcc811b0c88&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str-truth (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str-truth (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;bool_to_int&gt; is not able to ingest source value &apos;truth&apos; of type &apos;str&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str-truth (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str-truth (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganybqaaahrydxrocqau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str-truth (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str-truth (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_bool&gt; is not able to ingest source value &apos;truth&apos; of type &apos;str&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str-truth (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str-truth (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;truth&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str-truth (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str-truth (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;int_to_bool&gt; is not able to ingest source value &apos;truth&apos; of type &apos;str&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str-truth (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str-truth (singlefile, .txt) as a &lt;class &apos;int&apos;&gt; with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned truth of type &lt;class &apos;str&apos;&gt; which is not an instance of &lt;class &apos;int&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-err-txt-float--5.5.txt]" time="0.0528264045715332"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-float--5.5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 50, in primitive_to_int
    raise ValueError(&apos;Cannot convert to int : source is a non-integer float: &apos; + str(source))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-float--5.5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to int : source is a non-integer float: -5.5

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-float--5.5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-float--5.5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-float--5.5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-float--5.5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-float--5.5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-float--5.5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-float--5.5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-float--5.5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;-5.5&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-float--5.5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-float--5.5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-float--5.5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-float--5.5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-float--5.5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-float--5.5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-float--5.5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-float--5.5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-err-b64pickle-str-.txt]" time="0.05571413040161133"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str- (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str- (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  SyntaxError : unexpected EOF while parsing (&lt;unknown&gt;, line 1)

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str- (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str- (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_int&gt; is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str- (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str- (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  SyntaxError : unexpected EOF while parsing (&lt;unknown&gt;, line 0)

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str- (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str- (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;bool_to_int&gt; is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str- (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str- (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganyaaaaahealg==&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str- (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str- (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;float_to_bool&gt; is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str- (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str- (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str- (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str- (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;int_to_bool&gt; is not able to ingest source value &apos;&apos; of type &apos;str&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str- (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-str- (singlefile, .txt) as a &lt;class &apos;int&apos;&gt; with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned  of type &lt;class &apos;str&apos;&gt; which is not an instance of &lt;class &apos;int&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-err-b64pickle-float--5.5.txt]" time="0.05341029167175293"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-float--5.5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 83, in _convert
    raise ValueError(&apos;malformed node or string: &apos; + repr(node))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-float--5.5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : malformed node or string: &lt;_ast.Name object at 0x7fcc811dae48&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-float--5.5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 50, in primitive_to_int
    raise ValueError(&apos;Cannot convert to int : source is a non-integer float: &apos; + str(source))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-float--5.5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to int : source is a non-integer float: -5.5

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-float--5.5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-float--5.5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_int&gt; is not able to ingest source value &apos;-5.5&apos; of type &apos;float&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-float--5.5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-float--5.5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;bool_to_int&gt; is not able to ingest source value &apos;-5.5&apos; of type &apos;float&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-float--5.5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-float--5.5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;ganhwbyaaaaaaaau&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-float--5.5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 91, in primitive_to_bool
    raise ValueError(&apos;Cannot convert to bool : source is a number but is not 1 nor 0 : \&apos;&apos; + str(source) + &apos;\&apos;&apos;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-float--5.5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to bool : source is a number but is not 1 nor 0 : &apos;-5.5&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-float--5.5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-float--5.5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;str_to_bool&gt; is not able to ingest source value &apos;-5.5&apos; of type &apos;float&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-float--5.5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-float--5.5 (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter &lt;int_to_bool&gt; is not able to ingest source value &apos;-5.5&apos; of type &apos;float&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-float--5.5 (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/b64pickle-float--5.5 (singlefile, .txt) as a &lt;class &apos;int&apos;&gt; with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned -5.5 of type &lt;class &apos;float&apos;&gt; which is not an instance of &lt;class &apos;int&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-err-txt-str-.txt]" time="0.056226253509521484"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str- (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str- (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  SyntaxError : unexpected EOF while parsing (&lt;unknown&gt;, line 0)

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str- (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 51, in base64_ascii_str_pickle_to_object
    return pickle.loads(base64.b64decode(b64_ascii_str), fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str- (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  EOFError : Ran out of input

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str- (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 51, in base64_ascii_str_pickle_to_object
    return pickle.loads(base64.b64decode(b64_ascii_str), fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str- (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  EOFError : Ran out of input

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str- (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 51, in base64_ascii_str_pickle_to_object
    return pickle.loads(base64.b64decode(b64_ascii_str), fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str- (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  EOFError : Ran out of input

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str- (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str- (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str- (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 51, in base64_ascii_str_pickle_to_object
    return pickle.loads(base64.b64decode(b64_ascii_str), fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str- (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  EOFError : Ran out of input

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str- (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 51, in base64_ascii_str_pickle_to_object
    return pickle.loads(base64.b64decode(b64_ascii_str), fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str- (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  EOFError : Ran out of input

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str- (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 51, in base64_ascii_str_pickle_to_object
    return pickle.loads(base64.b64decode(b64_ascii_str), fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str- (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  EOFError : Ran out of input

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str- (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 51, in base64_ascii_str_pickle_to_object
    return pickle.loads(base64.b64decode(b64_ascii_str), fix_imports=True, encoding=&quot;ASCII&quot;, errors=&quot;strict&quot;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str- (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  EOFError : Ran out of input
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-err-txt-str-truth.txt]" time="0.05489635467529297"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str-truth (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/ast.py&quot;, line 83, in _convert
    raise ValueError(&apos;malformed node or string: &apos; + repr(node))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str-truth (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : malformed node or string: &lt;_ast.Name object at 0x7fcc81172390&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str-truth (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str-truth (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str-truth (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str-truth (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str-truth (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str-truth (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str-truth (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/opt/python/3.5.3/lib/python3.5/distutils/util.py&quot;, line 317, in strtobool
    raise ValueError(&quot;invalid truth value %r&quot; % (val,))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str-truth (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : invalid truth value &apos;truth&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str-truth (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str-truth (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str-truth (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str-truth (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str-truth (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str-truth (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str-truth (singlefile, .txt) &gt; int ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt; -&gt; &lt;int_to_bool&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/txt-str-truth (singlefile, .txt) as a int with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  Error : Incorrect padding
</system-out></testcase><testcase classname="parsyfiles.tests.parsing_capabilities_by_type.test_parse_primitives" file="parsyfiles/tests/parsing_capabilities_by_type/test_parse_primitives.py" line="178" name="test_parse_by_type[int-err-pickle-float--5.5.pyc]" time="0.046817779541015625"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-float--5.5 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 50, in primitive_to_int
    raise ValueError(&apos;Cannot convert to int : source is a non-integer float: &apos; + str(source))
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-float--5.5 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to int : source is a non-integer float: -5.5

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-float--5.5 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-float--5.5 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_int&gt;$ is not able to ingest source value &apos;-5.5&apos; of type &apos;float&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-float--5.5 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-float--5.5 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;bool_to_int&gt;$ is not able to ingest source value &apos;-5.5&apos; of type &apos;float&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-float--5.5 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 91, in primitive_to_bool
    raise ValueError(&apos;Cannot convert to bool : source is a number but is not 1 nor 0 : \&apos;&apos; + str(source) + &apos;\&apos;&apos;)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-float--5.5 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ValueError : Cannot convert to bool : source is a number but is not 1 nor 0 : &apos;-5.5&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-float--5.5 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-float--5.5 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;str_to_bool&gt;$ is not able to ingest source value &apos;-5.5&apos; of type &apos;float&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-float--5.5 (singlefile, .pyc) &gt; int ------- using $&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/converting_core.py&quot;, line 318, in convert
    raise ConversionException.create_not_able_to_convert(source_obj, self, desired_type)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-float--5.5 (singlefile, .pyc) as a int with parser &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : caught 
  ConversionException : Converter $&lt;int_to_bool&gt;$ is not able to ingest source value &apos;-5.5&apos; of type &apos;float&apos; and/or convert it to type &apos;int&apos;. This can happen in a chain when the previous step in the chain is generic and actually produced  an output of the wrong type/content

Rebuilding local parsing plan with next candidate parser: &lt;read_object_from_pickle&gt;
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-float--5.5 (singlefile, .pyc) &gt; int ------- using &lt;read_object_from_pickle&gt; (currently active parsing plan in [Try &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;bool_to_int&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;float_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;str_to_bool&gt;$&apos; then &apos;$&lt;read_object_from_pickle&gt; =&gt; &lt;int_to_bool&gt;$&apos; then &apos;&lt;read_object_from_pickle&gt;])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/parsing_capabilities_by_type/primitives_data/int/err/pickle-float--5.5 (singlefile, .pyc) as a &lt;class &apos;int&apos;&gt; with parser &apos;&lt;read_object_from_pickle&gt;&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: False}}) : 
      parser returned -5.5 of type &lt;class &apos;float&apos;&gt; which is not an instance of &lt;class &apos;int&apos;&gt;
</system-out></testcase><testcase classname="parsyfiles.tests.pytest_integration.test_pytest" file="parsyfiles/tests/pytest_integration/test_pytest.py" line="18" name="test_simple_objects[test_diff_1]" time="0.010931730270385742"><system-out>--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_1
1.0 - 1.0 =? 0.0
</system-out></testcase><testcase classname="parsyfiles.tests.pytest_integration.test_pytest" file="parsyfiles/tests/pytest_integration/test_pytest.py" line="18" name="test_simple_objects[test_diff_2]" time="0.010822772979736328"><system-out>--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_2
0.0 - 1.0 =? -1.0
</system-out></testcase><testcase classname="parsyfiles.tests.pytest_integration.test_pytest" file="parsyfiles/tests/pytest_integration/test_pytest.py" line="18" name="test_simple_objects[test_diff_3]" time="0.005250453948974609"><system-out>--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_3/expected_result
--&gt; Successfully parsed a str from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_3/op
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_3/x
--&gt; Successfully parsed a float from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_3/y
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_3
6.0 - 1.0 =? 5.0
</system-out></testcase><testcase classname="parsyfiles.tests.pytest_integration.test_pytest" file="parsyfiles/tests/pytest_integration/test_pytest.py" line="18" name="test_simple_objects[test_diff_3_csv_format]" time="0.013232946395874023"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_3_csv_format (singlefile, .txt) &gt; ExecOpTest ------- using $&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 295, in dict_to_object
    attr_name)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_3_csv_format (singlefile, .txt) as a ExecOpTest with parser &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: True}}) : caught 
  InvalidAttributeNameForConstructorError : Cannot parse object of type &lt;ExecOpTest&gt; using the provided configuration file: configuration contains a property name (&apos;x,y,op,expected_result&apos;)that is not an attribute of the object constructor. &lt;ExecOpTest&gt; constructor attributes are : [&apos;op&apos;, &apos;y&apos;, &apos;expected_result&apos;, &apos;x&apos;]

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_3_csv_format (singlefile, .txt) &gt; ExecOpTest ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 111, in constructor_with_str_arg
    return desired_type(source)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_3_csv_format (singlefile, .txt) as a ExecOpTest with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: True}}) : caught 
  CaughtTypeError : Caught TypeError while calling conversion function &apos;constructor_with_str_arg&apos;. Note that the conversion function signature should be &apos;def my_convert_fun(desired_type: Type[T], source: S, logger: Logger, **kwargs) -&gt; T&apos; (unpacked options mode - default) or def my_convert_fun(desired_type: Type[T], source: S, logger: Logger, options: Dict[str, Dict[str, Any]]) -&gt; T (unpack_options = False).Caught error message is : TypeError : __init__() missing 3 required positional arguments: &apos;y&apos;, &apos;op&apos;, and &apos;expected_result&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_3_csv_format (singlefile, .txt) &gt; ExecOpTest ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_3_csv_format (singlefile, .txt) as a ExecOpTest with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: True}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_3_csv_format
5.0 - 4.0 =? 1.0
</system-out></testcase><testcase classname="parsyfiles.tests.pytest_integration.test_pytest" file="parsyfiles/tests/pytest_integration/test_pytest.py" line="18" name="test_simple_objects[test_diff_4_csv_format2]" time="0.018640756607055664"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_4_csv_format2 (singlefile, .txt) &gt; ExecOpTest ------- using $&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_objects.py&quot;, line 295, in dict_to_object
    attr_name)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_4_csv_format2 (singlefile, .txt) as a ExecOpTest with parser &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: True}}) : caught 
  InvalidAttributeNameForConstructorError : Cannot parse object of type &lt;ExecOpTest&gt; using the provided configuration file: configuration contains a property name (&apos;op,-&apos;)that is not an attribute of the object constructor. &lt;ExecOpTest&gt; constructor attributes are : [&apos;op&apos;, &apos;y&apos;, &apos;expected_result&apos;, &apos;x&apos;]

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_4_csv_format2 (singlefile, .txt) &gt; ExecOpTest ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/plugins_base/support_for_primitive_types.py&quot;, line 111, in constructor_with_str_arg
    return desired_type(source)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_4_csv_format2 (singlefile, .txt) as a ExecOpTest with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: True}}) : caught 
  CaughtTypeError : Caught TypeError while calling conversion function &apos;constructor_with_str_arg&apos;. Note that the conversion function signature should be &apos;def my_convert_fun(desired_type: Type[T], source: S, logger: Logger, **kwargs) -&gt; T&apos; (unpacked options mode - default) or def my_convert_fun(desired_type: Type[T], source: S, logger: Logger, options: Dict[str, Dict[str, Any]]) -&gt; T (unpack_options = False).Caught error message is : TypeError : __init__() missing 3 required positional arguments: &apos;y&apos;, &apos;op&apos;, and &apos;expected_result&apos;

Rebuilding local parsing plan with next candidate parser: $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$
/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_4_csv_format2 (singlefile, .txt) &gt; ExecOpTest ------- using $&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$ (currently active parsing plan in [Try &apos;$&lt;read_dict_from_properties&gt; =&gt; &lt;dict_to_object&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;constructor_with_str_arg&gt;$&apos; then &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; then &apos;$&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/virtualenv/python3.5.3/lib/python3.5/base64.py&quot;, line 88, in b64decode
    return binascii.a2b_base64(s)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_4_csv_format2 (singlefile, .txt) as a ExecOpTest with parser &apos;$&lt;read_str_from_txt&gt; =&gt; &lt;base64_ascii_str_pickle_to_object&gt;$&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: True}}) : caught 
  Error : Incorrect padding

Rebuilding local parsing plan with next candidate parser: $&lt;read_df_or_series_from_csv&gt; =&gt; &lt;single_row_or_col_df_to_dict&gt; -&gt; &lt;dict_to_object&gt;$
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_diff_4_csv_format2
4.0 - 4.0 =? 0.0
</system-out></testcase><testcase classname="parsyfiles.tests.pytest_integration.test_pytest" file="parsyfiles/tests/pytest_integration/test_pytest.py" line="18" name="test_simple_objects[test_sum_1]" time="0.009454488754272461"><system-out>--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_sum_1
1.0 + 2.0 =? 3.0
</system-out></testcase><testcase classname="parsyfiles.tests.pytest_integration.test_pytest" file="parsyfiles/tests/pytest_integration/test_pytest.py" line="18" name="test_simple_objects[test_sum_2]" time="0.0068378448486328125"><system-out>--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_sum_2
0.0 + 1.0 =? 1.0
</system-out></testcase><testcase classname="parsyfiles.tests.pytest_integration.test_pytest" file="parsyfiles/tests/pytest_integration/test_pytest.py" line="18" name="test_simple_objects[test_sum_3_properties_format]" time="0.008655309677124023"><system-out>--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_sum_3_properties_format
1.0 + 1.0 =? 2.0
</system-out></testcase><testcase classname="parsyfiles.tests.pytest_integration.test_pytest" file="parsyfiles/tests/pytest_integration/test_pytest.py" line="18" name="test_simple_objects[test_sum_3_with_inner_b64_pickle]" time="0.007455348968505859"><system-out>--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_sum_3_with_inner_b64_pickle
1.0 + 1.0 =? 2.0
</system-out></testcase><testcase classname="parsyfiles.tests.pytest_integration.test_pytest" file="parsyfiles/tests/pytest_integration/test_pytest.py" line="18" name="test_simple_objects[test_sum_4]" time="0.010567426681518555"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_sum_4 (singlefile, .yaml) &gt; ExecOpTest ------- using &lt;read_object_from_yaml&gt; (currently active parsing plan in [Try &apos;&lt;read_object_from_yaml&gt;&apos; then &apos;$&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_sum_4 (singlefile, .yaml) as a &lt;class &apos;parsyfiles.tests.parsing_capabilities_by_type.test_parse_custom_object.ExecOpTest&apos;&gt; with parser &apos;&lt;read_object_from_yaml&gt;&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: True}}) : 
      parser returned {&apos;y&apos;: 5, &apos;expected_result&apos;: 7, &apos;x&apos;: 2, &apos;op&apos;: &apos;+&apos;} of type &lt;class &apos;dict&apos;&gt; which is not an instance of &lt;class &apos;parsyfiles.tests.parsing_capabilities_by_type.test_parse_custom_object.ExecOpTest&apos;&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_sum_4
2.0 + 5.0 =? 7.0
</system-out></testcase><testcase classname="parsyfiles.tests.pytest_integration.test_pytest" file="parsyfiles/tests/pytest_integration/test_pytest.py" line="18" name="test_simple_objects[test_sum_5]" time="0.011682271957397461"><system-out>/home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_sum_5 (singlefile, .yaml) &gt; ExecOpTest ------- using &lt;read_object_from_yaml&gt; (currently active parsing plan in [Try &apos;&lt;read_object_from_yaml&gt;&apos; then &apos;$&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$])
  !! Caught error during execution !!
  File &quot;/home/travis/build/smarie/python-parsyfiles/parsyfiles/parsing_core_api.py&quot;, line 413, in execute
    res, options)
  ParsingException : Error while parsing /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_sum_5 (singlefile, .yaml) as a &lt;class &apos;parsyfiles.tests.parsing_capabilities_by_type.test_parse_custom_object.ExecOpTest&apos;&gt; with parser &apos;&lt;read_object_from_yaml&gt;&apos; using options=({&apos;MultifileCollectionParser&apos;: {&apos;lazy_parsing&apos;: True}}) : 
      parser returned {&apos;y&apos;: 5, &apos;expected_result&apos;: 6, &apos;x&apos;: 1, &apos;op&apos;: &apos;+&apos;} of type &lt;class &apos;dict&apos;&gt; which is not an instance of &lt;class &apos;parsyfiles.tests.parsing_capabilities_by_type.test_parse_custom_object.ExecOpTest&apos;&gt;

Rebuilding local parsing plan with next candidate parser: $&lt;read_collection_from_yaml&gt; =&gt; &lt;dict_to_object&gt;$
--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_sum_5
1.0 + 5.0 =? 6.0
</system-out></testcase><testcase classname="parsyfiles.tests.pytest_integration.test_pytest" file="parsyfiles/tests/pytest_integration/test_pytest.py" line="18" name="test_simple_objects[test_sum_6]" time="0.013532400131225586"><system-out>--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_sum_6
56.0 + 13.0 =? 69.0
</system-out></testcase><testcase classname="parsyfiles.tests.pytest_integration.test_pytest" file="parsyfiles/tests/pytest_integration/test_pytest.py" line="18" name="test_simple_objects[test_sum_7]" time="0.017966032028198242"><system-out>--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_sum_7
56.0 + 14.0 =? 70.0
</system-out></testcase><testcase classname="parsyfiles.tests.pytest_integration.test_pytest" file="parsyfiles/tests/pytest_integration/test_pytest.py" line="18" name="test_simple_objects[test_sum_8]" time="0.1153097152709961"><system-out>--&gt; Successfully parsed a ExecOpTest from /home/travis/build/smarie/python-parsyfiles/parsyfiles/tests/pytest_integration/../parsing_capabilities_by_type/objects_data/test_sum_8
56.0 + 12.0 =? 68.0
</system-out></testcase></testsuite>